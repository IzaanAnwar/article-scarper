{"title": "How to make peace with deadlines in software development", "byline": "Huseyin Polat Yuruk", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to make peace with deadlines in software development</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p><strong>D E A D L I N E\u2026</strong></p><p>As a developer, this is one of your biggest nightmares or should I say your enemy? Name it whatever you want.</p><p>Admit it. It scares you a lot. Even now, while you are reading these sentences, it makes your hair stand on the end.</p><p>Wondering how I know that?</p><p>I know because I\u2019ve felt the same. But now the fear is in the past. I\u2019ve made peace with deadlines. I\u2019ve embraced them.</p><p>So I suggest you do the same thing. Embrace them, make peace with them. This is the only way that you can defeat them.</p><p>Ok but, how you can do that?</p><p>There are some facts that we all tend to ignore when it comes to setting a deadline. My aim here is to show them to you so you can see that it takes so little to bury the fear and start enjoying life while you are working on your project without worrying about dates.</p><h3 id=\"work-in-a-calm-environment\">Work in a calm environment</h3><figure><img alt=\"6p3M08-tAVlfvEgrFTkrDOccuRRPzmAP9lZo\" height=\"400\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/6p3M08-tAVlfvEgrFTkrDOccuRRPzmAP9lZo\" width=\"800\"/><figcaption><a href=\"https://imgur.com/gallery/cBSSh4h\" rel=\"noopener\" target=\"_blank\" title=\"\">https://imgur.com/gallery/cBSSh4h</a></figcaption></figure><p>Don\u2019t rush. Don\u2019t force anything.</p><p>The first thing first you should know is that you can\u2019t find your peace by setting unrealistic dates and forcing your team to work in a rush. There are companies that throw out big words and show unrealistic things to motivate their team to move forward. But while there are some facts obvious to everyone in the team, how can you expect them to believe in what you are saying if it is far away from reality?</p><p>Without a fixed \u2014 and most importantly believable \u2014 deadline, you can\u2019t work calmly. Yes, keeping the calm is the key here. When you don\u2019t trust the date, or when someone tells you to do everything within a limited period of time, or someone adds more tasks to the project without giving you more time, you start working maniacally. This is not work anymore. This is hell.</p><blockquote><strong>When you are under stress and pressure, you can\u2019t be productive. When you are calm, you are also conscious which means that you can make better decisions.</strong></blockquote><h3 id=\"our-estimates-suck\">Our estimates suck</h3><figure><img alt=\"OCEwXbFfr7ifjlj7FSrCZ2sQGQgw-WM7P3Qn\" height=\"162\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/OCEwXbFfr7ifjlj7FSrCZ2sQGQgw-WM7P3Qn\" width=\"381\"/><figcaption><a href=\"https://simonschreibt.de/gat/renderhell-book3/\" rel=\"noopener\" target=\"_blank\" title=\"\">https://simonschreibt.de/gat/renderhell-book3/</a></figcaption></figure><p>Windows users will remember that window dialog. The estimation in the dialog is exactly like our estimations, isn\u2019t it?</p><p>Let\u2019s admit it. Our estimates suck. We think we can guess how much time something will take. We have a tendency to believe that whatever we guess will come true.</p><p>However, generally, when we are guessing, we ignore some important factors that can affect our assumptions. Why? Because we are too optimistic.</p><p>To me, the first step in making peace with the deadline and getting better at setting deadlines is to admit that we are terrible estimators. When you embrace this fact, you will be conscious next time and it will prevent you from underestimating the requirements. And here is a solution for you to get better at estimating:</p><blockquote><strong>Divide the big things into smaller things</strong>. <strong>The smaller it is, the easier it is to estimate</strong>. This will increase your chances of having more accurate estimations.</blockquote><h3 id=\"good-enough-is-fine\">Good enough is fine</h3><blockquote>\u201cPerfect is the enemy of good.\u201d \u2014 Voltaire</blockquote><p>People like big challenges. We are best at finding a complicated solution for a simple problem. But here is a fact:</p><blockquote><strong>Every problem has its own simple solution that you probably ignore.</strong></blockquote><p>Don\u2019t chase a perfect solution. Your first version doesn\u2019t have to be perfect. Build a half product that can work. If you wait too much, you will waste your limited resources and precious time, or you will miss the deadline and even worse do nothing at all because you are chasing perfection. The solution is:</p><blockquote><strong>Find the solution that will bring you a lot of value and requires little effort. And don\u2019t forget, good can be turned into great later.</strong></blockquote><h3 id=\"don-t-be-too-optimistic-be-realistic-\">Don\u2019t be too optimistic. Be realistic.</h3><p>I see managers that are too optimistic which makes them set optimistic deadlines to motivate the team. This is so wrong. I\u2019m not telling you that you should be pessimistic about the future. On the contrary, I am telling you that you should be able to see every possibility that can create a bottleneck. Once you can see them, you can consider them and have a more accurate estimation.</p><p>There are different teams in the company. Engineering, business development, marketing, etc. When the business development team forces you to give them a deadline in the very near future, you shouldn\u2019t get affected by them. They want their job to be done as soon as possible.</p><blockquote><strong>Remember that every team thinks about their own side.</strong></blockquote><h3 id=\"differentiate-between-you-have-to-do-you-could-do-and-you-want-to-do-\">Differentiate between \u201cyou have to do\u201d, \u201cyou could do\u201d and \u201cyou want to do\u201d</h3><p>Understanding is the key here. What are the core requirements for releasing your product? Usually, the product team has a hard time differentiating them.</p><p>When you have a meeting, one of the team members will say, \u201cwe could implement it, it will bring us that much value\u201d or another one will say \u201cWe should put this into release.\u201d They are looking from their own perspective. Ok, we can implement this and it can bring us some value, but the important question is that \u201cdo we need it now? In the first version?\u201d</p><p>The answer is NO in most cases.</p><blockquote><strong>The things that you have to do are what you should focus on</strong>. Eliminate things you could do and you want to do. They are not even negotiable in most cases.</blockquote><h3 id=\"say-no-by-default\">Say no by default</h3><p>There is one important fact that we usually forget when we say \u201cYes\u201d to something. We are saying no to the things we already need to complete.</p><p>When you say yes to something new, you\u2019re not thinking about the impact it will have on your existing to do\u2019s.</p><p><em>\u201cLet\u2019s add more tasks to the project after we\u2019ve set the deadline. (Your project should get smaller over time, not larger.)\u201d</em> <strong>NO</strong>.</p><p><em>\u201cWe focused on what matters, ok. But what about the details? Let\u2019s consider what kind of details we have that can make problems in the future.\u201d</em> <strong>NO</strong>. Ignore every detail for the first version. Don\u2019t try to predict the future.</p><p>Finding more time for things isn\u2019t the problem here. Too much stuff to do is the problem. Differentiate between \u201c<strong>must-haves</strong>\u201d and \u201c<strong>nice-to-haves</strong>\u201d.</p><blockquote><strong>The only way to get more done is to have less to do.</strong></blockquote><h3 id=\"never-change-the-deadline\">Never change the deadline</h3><p>I see development teams with a bad habit that can affect their product development badly: deadline rescheduling.</p><p>When they miss the deadline, they set a new one. If they can\u2019t meet this one, they set another one. When they do this repeatedly, it becomes a habit. Then this bad habit turns into their culture. Other teams in the company lose trust and question the developers\u2019 work. Even worse, the developer team itself can lose trust in each other. In themselves as well.</p><blockquote><strong>Changing the deadline is essentially an admission of failure</strong>. It is making statements like, \u201cWe failed to plan requirements, we didn\u2019t say no enough, we didn\u2019t focus on what matters, we pushed our teams to do unreasonable things in an unreasonable time.\u201d</blockquote><h3 id=\"be-aware-that-there-will-be-always-some-problems\">Be aware that there will be always some problems</h3><p>Being too optimistic causes you to ignore the fact that there may be some problems. Be aware. Probably something will go wrong. And this will cause you to lose some time on fixing things. So better to be prepared for bad scenarios. I am not saying that you should be pessimistic and you should try to predict the future and prepare yourself and your team for the unknown. Just find a balance between optimism and pessimism. Be realistic.</p><p>My experience showed me that, in software development, some things always go wrong. My advice to you is:</p><blockquote><strong>Add some time to your deadline before you set it by considering that something may go wrong.</strong></blockquote><h3 id=\"don-t-add-more-people-to-a-project\">Don\u2019t add more people to a project</h3><p>A lot of people think that they can speed up the process if they add more people to the project. However, they miss a very important point. Let\u2019s remember <a href=\"https://en.wikipedia.org/wiki/Brooks%27s_law\" rel=\"noopener\">Brooks\u2019s law</a>:</p><blockquote>Adding <a href=\"https://en.wikipedia.org/wiki/Human_resources\" rel=\"noopener\">human resources</a> to a late software project makes it later. \u2014 Freed Brooks</blockquote><p><a href=\"https://en.wikipedia.org/wiki/Brooks%27s_law\" rel=\"noopener\">According to Brooks on Wikipedia</a>, there is an incremental person who, when added to a project, makes it take more, not less time. So why does it work this way?</p><ul><li>It takes some time for the people added to a project to become <a href=\"https://en.wikipedia.org/wiki/Productivity\" rel=\"noopener\">productive</a>. You will have to educate them first. You have already limited human resources and you will have to dedicate those resources to educate new member. Also since they are new, they will introduce new bugs that move the project further away from completion.</li><li><a href=\"https://en.wikipedia.org/w/index.php?title=Communication_overhead&amp;action=edit&amp;redlink=1\" rel=\"noopener\">Communication overheads</a> increase as the number of people increases.</li><li>Adding more people to a highly divisible task, such as cleaning rooms in a hotel, decreases the overall task duration. However, other tasks including many specialties in software projects are less divisible. Another great example of this by Brooks is: while it takes one woman nine months to make one baby, \u201cnine women can\u2019t make a baby in one month\u201d.</li></ul><p>Another bit of evidence from Richard Dalton to understand why adding more people is wrong is:</p><blockquote>\u201cTeams are immutable. Every time someone leaves or joins, you have a new team, not a changed team.\u201d \u2014 Richard Dalton</blockquote><h3 id=\"don-t-procrastinate\">Don\u2019t procrastinate</h3><p>Let me help you to understand what I mean. Last week, we had a meeting about defining the deadline for a new feature of our product. We were talking about which tasks are our priority and how we should implement them in an effective way.</p><p>There was a task on which we have heavily wasted our time. There were three ways to implement that task but somehow we were stuck. We couldn\u2019t choose because developers were trying to predict the future. They were starting each sentence with \u201cWhat if\u201d.</p><blockquote><strong>You can\u2019t predict what the future will bring you. Don\u2019t over-prepare yourself for the unknown.</strong></blockquote><p>I am not talking about big technical decisions here. Of course, if you have to decide on your core technology, you should sleep on it to find the right solution. But don\u2019t spend your time on small things. Uncertain things increase meetings and block your progress because your backend process is continuously working on them.</p><blockquote><strong>Don\u2019t procrastinate it, decide on it and move forward.</strong></blockquote><p>Change your mentality from \u201cLet\u2019s think about it\u201d to \u201cLet\u2019s decide now\u201d. Decisions will speed up your progress. When something is decided, it will be clear to everyone in the team. Everyone will exactly know what to do.</p><h3 id=\"communicate-see-where-is-the-bottleneck\">Communicate: See where is the bottleneck?</h3><p>You planned everything. You defined what to focus on and what to do. You know exactly how much time it will take (probably you will be wrong). So, the deadline has been settled. Is it enough?</p><p>As I mentioned above, there is always a possibility that something can go wrong. While your team members are working on their tasks, something can block them. Something can stop them to finish their tasks on time. You have to see where is the bottleneck and what it is.</p><p>Communication is the key here. You have to keep teams synced. Sometimes team members can go into a box and it can be very hard for them to see what is happening out of it. This is where you should enter the scene. Once you have identified the bottleneck, remove it so your team members can continue from where they were stuck.</p><p>I wish you good luck in meeting all your deadlines :)</p><p>Thanks for reading.</p><p><em>Originally published at <a href=\"http://blog.huseyinpolatyuruk.com/how-to-make-peace-with-deadlines-in-software-development\" rel=\"noopener\">https://huseyinpolatyuruk.com</a>.</em></p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nD E A D L I N E\u2026As a developer, this is one of your biggest nightmares or should I say your enemy? Name it whatever you want.Admit it. It scares you a lot. Even now, while you are reading these sentences, it makes your hair stand on the end.Wondering how I know that?I know because I\u2019ve felt the same. But now the fear is in the past. I\u2019ve made peace with deadlines. I\u2019ve embraced them.So I suggest you do the same thing. Embrace them, make peace with them. This is the only way that you can defeat them.Ok but, how you can do that?There are some facts that we all tend to ignore when it comes to setting a deadline. My aim here is to show them to you so you can see that it takes so little to bury the fear and start enjoying life while you are working on your project without worrying about dates.Work in a calm environmenthttps://imgur.com/gallery/cBSSh4hDon\u2019t rush. Don\u2019t force anything.The first thing first you should know is that you can\u2019t find your peace by setting unrealistic dates and forcing your team to work in a rush. There are companies that throw out big words and show unrealistic things to motivate their team to move forward. But while there are some facts obvious to everyone in the team, how can you expect them to believe in what you are saying if it is far away from reality?Without a fixed \u2014 and most importantly believable \u2014 deadline, you can\u2019t work calmly. Yes, keeping the calm is the key here. When you don\u2019t trust the date, or when someone tells you to do everything within a limited period of time, or someone adds more tasks to the project without giving you more time, you start working maniacally. This is not work anymore. This is hell.When you are under stress and pressure, you can\u2019t be productive. When you are calm, you are also conscious which means that you can make better decisions.Our estimates suckhttps://simonschreibt.de/gat/renderhell-book3/Windows users will remember that window dialog. The estimation in the dialog is exactly like our estimations, isn\u2019t it?Let\u2019s admit it. Our estimates suck. We think we can guess how much time something will take. We have a tendency to believe that whatever we guess will come true.However, generally, when we are guessing, we ignore some important factors that can affect our assumptions. Why? Because we are too optimistic.To me, the first step in making peace with the deadline and getting better at setting deadlines is to admit that we are terrible estimators. When you embrace this fact, you will be conscious next time and it will prevent you from underestimating the requirements. And here is a solution for you to get better at estimating:Divide the big things into smaller things. The smaller it is, the easier it is to estimate. This will increase your chances of having more accurate estimations.Good enough is fine\u201cPerfect is the enemy of good.\u201d \u2014 VoltairePeople like big challenges. We are best at finding a complicated solution for a simple problem. But here is a fact:Every problem has its own simple solution that you probably ignore.Don\u2019t chase a perfect solution. Your first version doesn\u2019t have to be perfect. Build a half product that can work. If you wait too much, you will waste your limited resources and precious time, or you will miss the deadline and even worse do nothing at all because you are chasing perfection. The solution is:Find the solution that will bring you a lot of value and requires little effort. And don\u2019t forget, good can be turned into great later.Don\u2019t be too optimistic. Be realistic.I see managers that are too optimistic which makes them set optimistic deadlines to motivate the team. This is so wrong. I\u2019m not telling you that you should be pessimistic about the future. On the contrary, I am telling you that you should be able to see every possibility that can create a bottleneck. Once you can see them, you can consider them and have a more accurate estimation.There are different teams in the company. Engineering, business development, marketing, etc. When the business development team forces you to give them a deadline in the very near future, you shouldn\u2019t get affected by them. They want their job to be done as soon as possible.Remember that every team thinks about their own side.Differentiate between \u201cyou have to do\u201d, \u201cyou could do\u201d and \u201cyou want to do\u201dUnderstanding is the key here. What are the core requirements for releasing your product? Usually, the product team has a hard time differentiating them.When you have a meeting, one of the team members will say, \u201cwe could implement it, it will bring us that much value\u201d or another one will say \u201cWe should put this into release.\u201d They are looking from their own perspective. Ok, we can implement this and it can bring us some value, but the important question is that \u201cdo we need it now? In the first version?\u201dThe answer is NO in most cases.The things that you have to do are what you should focus on. Eliminate things you could do and you want to do. They are not even negotiable in most cases.Say no by defaultThere is one important fact that we usually forget when we say \u201cYes\u201d to something. We are saying no to the things we already need to complete.When you say yes to something new, you\u2019re not thinking about the impact it will have on your existing to do\u2019s.\u201cLet\u2019s add more tasks to the project after we\u2019ve set the deadline. (Your project should get smaller over time, not larger.)\u201d NO.\u201cWe focused on what matters, ok. But what about the details? Let\u2019s consider what kind of details we have that can make problems in the future.\u201d NO. Ignore every detail for the first version. Don\u2019t try to predict the future.Finding more time for things isn\u2019t the problem here. Too much stuff to do is the problem. Differentiate between \u201cmust-haves\u201d and \u201cnice-to-haves\u201d.The only way to get more done is to have less to do.Never change the deadlineI see development teams with a bad habit that can affect their product development badly: deadline rescheduling.When they miss the deadline, they set a new one. If they can\u2019t meet this one, they set another one. When they do this repeatedly, it becomes a habit. Then this bad habit turns into their culture. Other teams in the company lose trust and question the developers\u2019 work. Even worse, the developer team itself can lose trust in each other. In themselves as well.Changing the deadline is essentially an admission of failure. It is making statements like, \u201cWe failed to plan requirements, we didn\u2019t say no enough, we didn\u2019t focus on what matters, we pushed our teams to do unreasonable things in an unreasonable time.\u201dBe aware that there will be always some problemsBeing too optimistic causes you to ignore the fact that there may be some problems. Be aware. Probably something will go wrong. And this will cause you to lose some time on fixing things. So better to be prepared for bad scenarios. I am not saying that you should be pessimistic and you should try to predict the future and prepare yourself and your team for the unknown. Just find a balance between optimism and pessimism. Be realistic.My experience showed me that, in software development, some things always go wrong. My advice to you is:Add some time to your deadline before you set it by considering that something may go wrong.Don\u2019t add more people to a projectA lot of people think that they can speed up the process if they add more people to the project. However, they miss a very important point. Let\u2019s remember Brooks\u2019s law:Adding human resources to a late software project makes it later. \u2014 Freed BrooksAccording to Brooks on Wikipedia, there is an incremental person who, when added to a project, makes it take more, not less time. So why does it work this way?It takes some time for the people added to a project to become productive. You will have to educate them first. You have already limited human resources and you will have to dedicate those resources to educate new member. Also since they are new, they will introduce new bugs that move the project further away from completion.Communication overheads increase as the number of people increases.Adding more people to a highly divisible task, such as cleaning rooms in a hotel, decreases the overall task duration. However, other tasks including many specialties in software projects are less divisible. Another great example of this by Brooks is: while it takes one woman nine months to make one baby, \u201cnine women can\u2019t make a baby in one month\u201d.Another bit of evidence from Richard Dalton to understand why adding more people is wrong is:\u201cTeams are immutable. Every time someone leaves or joins, you have a new team, not a changed team.\u201d \u2014 Richard DaltonDon\u2019t procrastinateLet me help you to understand what I mean. Last week, we had a meeting about defining the deadline for a new feature of our product. We were talking about which tasks are our priority and how we should implement them in an effective way.There was a task on which we have heavily wasted our time. There were three ways to implement that task but somehow we were stuck. We couldn\u2019t choose because developers were trying to predict the future. They were starting each sentence with \u201cWhat if\u201d.You can\u2019t predict what the future will bring you. Don\u2019t over-prepare yourself for the unknown.I am not talking about big technical decisions here. Of course, if you have to decide on your core technology, you should sleep on it to find the right solution. But don\u2019t spend your time on small things. Uncertain things increase meetings and block your progress because your backend process is continuously working on them.Don\u2019t procrastinate it, decide on it and move forward.Change your mentality from \u201cLet\u2019s think about it\u201d to \u201cLet\u2019s decide now\u201d. Decisions will speed up your progress. When something is decided, it will be clear to everyone in the team. Everyone will exactly know what to do.Communicate: See where is the bottleneck?You planned everything. You defined what to focus on and what to do. You know exactly how much time it will take (probably you will be wrong). So, the deadline has been settled. Is it enough?NO.As I mentioned above, there is always a possibility that something can go wrong. While your team members are working on their tasks, something can block them. Something can stop them to finish their tasks on time. You have to see where is the bottleneck and what it is.Communication is the key here. You have to keep teams synced. Sometimes team members can go into a box and it can be very hard for them to see what is happening out of it. This is where you should enter the scene. Once you have identified the bottleneck, remove it so your team members can continue from where they were stuck.I wish you good luck in meeting all your deadlines :)Thanks for reading.Originally published at https://huseyinpolatyuruk.com.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 11488, "excerpt": "D E A D L I N E\u2026\n\nAs a developer, this is one of your biggest nightmares or should I say your\nenemy? Name it whatever you want.\n\nAdmit it. It scares you a lot. Even now, while you are reading these sentences,\nit makes your hair stand on the end.\n\nWondering how I know that?\n\nI know because I\u2019ve felt the same. But now the fear is in the past. I\u2019ve made\npeace with deadlines. I\u2019ve embraced them.\n\nSo I suggest you do the same thing. Embrace them, make peace with them. This is\nthe only way that you ca", "siteName": "freeCodeCamp.org", "publishedTime": "2019-05-09T17:24:31.000Z", "id": "e9e3424df0e8d51606e48e5adc9fd007178d2904", "url": "https://www.freecodecamp.org/news/how-to-make-peace-with-deadlines-in-software-development-6cfe3e993f51/", "domain": "freecodecamp.org", "date": "2023-12-27T18:10:12.830050", "resultUri": "http://localhost:3000/result/e9e3424df0e8d51606e48e5adc9fd007178d2904", "query": {"url": ["https://www.freecodecamp.org/news/how-to-make-peace-with-deadlines-in-software-development-6cfe3e993f51/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to make peace with deadlines in software development", "description": "D E A D L I N E\u2026 As a developer, this is one of your biggest nightmares or should I say your enemy? Name it whatever you want. Admit it. It scares you a lot. Even now, while you are reading these sentences, it makes your hair stand on", "url": "https://www.freecodecamp.org/news/how-to-make-peace-with-deadlines-in-software-development-6cfe3e993f51/", "image": "https://cdn-media-1.freecodecamp.org/images/1*8j-jf6OGLQjmiwYnQBEdVw.jpeg", "image:width": "800", "image:height": "400"}, "twitter": {"card": "summary_large_image", "title": "How to make peace with deadlines in software development", "description": "D E A D L I N E\u2026 As a developer, this is one of your biggest nightmares or should I say your enemy? Name it whatever you want. Admit it. It scares you a lot. Even now, while you are reading these sentences, it makes your hair stand on", "url": "https://www.freecodecamp.org/news/how-to-make-peace-with-deadlines-in-software-development-6cfe3e993f51/", "image": "https://cdn-media-1.freecodecamp.org/images/1*8j-jf6OGLQjmiwYnQBEdVw.jpeg", "label1": "Written by", "data1": "Huseyin Polat Yuruk", "label2": "Filed under", "data2": "Software Development, Programming, Life Lessons, Self Improvement, Tech", "site": "@freecodecamp", "creator": "@hpolatyuruk"}}}