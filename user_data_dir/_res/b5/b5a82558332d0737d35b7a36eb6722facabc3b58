{"title": "What is the Difference Between Coding and Programming?", "byline": "Hillary Nyakundi", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>What is the Difference Between Coding and Programming?</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>It took me a long time to understand what the terms <strong>programming</strong> and <strong>coding</strong> really meant, and what each field entailed. And I'm sure I'm not the only one who felt confused by those two terms when I was new to tech.</p>\n<p>For a while I thought that they were the same thing, and it took me some time to understand that there are differences between the two \"worlds\".</p>\n<p>In this article, I'll explain the basic differences between coding and programming and how they work collaboratively to develop apps and sites.</p>\n<p>So let\u2019s explore these terms and how professionals use them by first understanding what they mean.</p>\n<p><img alt=\"what is coding\" height=\"398\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2021/10/Untitled-design.png\" width=\"663\"/><br/>\nYou might have seen courses, bootcamps, or articles talk all about coding \u2013 so why is the emphasis on this term?</p>\n<p>This is because the actual act of coding makes it possible for us to do all the cool stuff we do every day. It lets us use mobile apps, work with different software and operating systems, and even play the games we love or visit the website you are reading this article on. It's all made possible through coding.</p>\n<p>So, what is coding in simple terms?</p>\n<p>We can define coding as the act of translating instructions for a computer from human language to a language a machine can understand. This code tells the computer how to behave and what actions to perform.</p>\n<p>If you want to become a coder, you'll need to have some basic knowledge about programming language(s). When I say programming languages, I mean languages like: Python, Java, Go, PHP, or JavaScript, just to mention a few.</p>\n<p>Below is a good example of some code written in the Python language, that will convert any <em>PDF</em> into an <em>Audiobook</em>:</p>\n<pre tabindex=\"0\"><code><span>import</span> PyPDF2                     <span># pip install pypdf</span>\n<span>import</span> pyttsx3                    <span># pip install pyttsx3</span>\n<span>from</span> tkinter<span>.</span>filedialog <span>import</span> <span>*</span>  <span># pip install tkinter</span>\n\nbook <span>=</span> askopenfilename<span>(</span><span>)</span>\npdfReader <span>=</span> PyPDF2<span>.</span>PdfFileReader<span>(</span>book<span>)</span>\n\npages <span>=</span> pdfReader<span>.</span>numPages\n\n<span>for</span> num <span>in</span> <span>range</span><span>(</span><span>0</span><span>,</span> pages<span>)</span><span>:</span>\n    page <span>=</span> pdfReader<span>.</span>getPage<span>(</span>num<span>)</span>\n    text <span>=</span> page<span>.</span>extractText<span>(</span><span>)</span>\n    speak <span>=</span> pyttsx3<span>.</span>init<span>(</span><span>)</span>\n    speak<span>.</span>say<span>(</span>text<span>)</span>\n    speak<span>.</span>runAndWait<span>(</span><span>)</span>\n</code></pre>\n<h2 id=\"whatisprogramming\">What is Programming?</h2>\n<p><img alt=\"what is programming\" height=\"398\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2021/10/fresh.png\" width=\"663\"/><br/>\nYou've probably also heard people say, <em>\"I am a programmer\"</em>. And some of them who use this term have an understanding of what the terms means while other don't. If you don't know what exactly programming means, let's try and shed some light by understanding what programming is all about.</p>\n<p>Programming is the process of creating the instructions that will tell the computer how to perform a particular task given to it. You do this using programming languages like:</p>\n<p><img alt=\"Programming languages\" height=\"398\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2021/10/fresh--1-.png\" width=\"663\"/></p>\n<p>When we talk about programming, think of something like a remote control for your TV \u2013 it will wait for you to give it instructions by pressing different buttons which then tell the TV to perform a specific task (like changing the channel, increasing the volume, and so on). Well, this is the same way programmers can instruct a computer to do various things.</p>\n<p>With programming, you can almost do anything \u2013 like programming robots to help with house chores, or even programming self-driven cars like Tesla.</p>\n<p>In order for a programmer to develop a program that will implement their idea, they need to carry out the following steps:</p>\n<ul>\n<li>Planning the structure of the app (<em>with the help of tools like Trello</em>)</li>\n<li>Designing it (<em>by using tools like Figma or Adobexd</em>)</li>\n<li>Developing it (<em>by using their programming language of choice</em>)</li>\n<li>Testing its features</li>\n<li>Deploying it (<em>on either free or paid hosting services</em>)</li>\n<li>Maintaining it after it's finished.</li>\n</ul>\n<p>So as you can see, we can say that programming does not only deal with the actual writing of the code. It also involves using data structures and algorithms, and in general dealing with the bigger picture of creating and developing complex systems.</p>\n<h2 id=\"thedifferencebetweencodingandprogramming\">The Difference between Coding and Programming</h2>\n<p><img alt=\"DIFFERENCES BETWEEN PROGRAMMING AND CODING\" height=\"398\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2021/10/fresh--2-.png\" width=\"663\"/><br/>\nWe will divide the differences in four main categories which will help us break down the concepts and understand them better.</p>\n<h3 id=\"theterminology\">The terminology</h3>\n<p><em><strong>Coding</strong></em> deals with writing code in a language understood by both machines and humans. The main aim of coding is to provide communication between the two (humans &amp; computers).</p>\n<p><em><strong>Programming</strong></em> involves creating an outline and structure for the program\u2019s code that follows certain standards, before the actual code is written to preform the task it needs to perform.</p>\n<h3 id=\"thetoolsyouuse\">The tools you use</h3>\n<p>When it comes to <em><strong>coding</strong></em>, one of your most important tools will be your text editor (like Notepad, or something more complex and feature-rich like Visual Studio Code, Sublime, Atom, or Vim).</p>\n<p>When you're talking about <em><strong>Programming</strong></em>, on the other hand, you'll need some additional tools. As a programmer, you'll be performing document reviews, doing lots of planning, thinking about design, and so on.</p>\n<p>To help you with these tasks, you'll use tools like more advanced code editors, analysis tools, debuggers, modelling frameworks, assemblers, modelling algorithms and more.</p>\n<p>As a programmer you will need to have a lot of experience using these tools and more exposure to the processes that developers use to build apps and other products.</p>\n<h3 id=\"yourlevelofknowledge\">Your Level of knowledge</h3>\n<p>As a <em><strong>coder</strong></em> having basic knowledge of a programming language and its syntax is a good start. Once you know how to code in one language, it's easier to learn others. And again, your main purpose is on writing the actual code that tells the machine what to do.</p>\n<p>On the other hand <em><strong>programmers</strong></em> need more knowledge to begin with. You'll need to know how to create and work with algorithms, how to design websites, how to debug and test your code, how to manage projects, and of course how to work with programming languages.</p>\n<p>Problem solving, critical thinking and analytical skills are also essential when you're developing complex systems.</p>\n<h3 id=\"theendproduct\">The end product</h3>\n<p>As a <em><strong>coder</strong></em> your expected outcome is typically a simple solution that, after compiling, will successfully give your desired output. A good example is the one we gave earlier \u2013 converting a PDF into an audio file.</p>\n<p>On the other hand a <em><strong>programmers</strong></em> will work to give a whole working application or piece of software that people will use in the market. They're also responsible for following up and maintaining what they build to ensure it's running smoothly without any glitches.</p>\n<h2 id=\"howcodingandprogrammingworktogether\">How Coding and Programming Work Together</h2>\n<p>By this point I hope you are able to tell the difference between coding and programming and what the two deal with. Now, let's see how the two can (and should) work closely together to accomplish a lot.</p>\n<p>To better understand the how, let's begin by providing a real scenario where both coding and programming will be required to work closely to produce a complete working app.</p>\n<p>Imagine you have been asked to create an app that will help monitor or keep track of your daily routine or monitor your daily expenses. By using the concepts of the two worlds this is how you will accomplish the task.</p>\n<p>You will need a programmer, who will be able to:</p>\n<ul>\n<li>plan the structure of the app (<em>with the help of tools like Trello</em>)</li>\n<li>Write down the main features of the app, what users are expected to use  it for, etc</li>\n<li>Design the app (<em>by using tools like Figma or Adobexd</em>)</li>\n</ul>\n<p>After completing these steps, the coder's role comes in play. They take the ideas the programmer creates and transform it into a machine-readable form by writing code to perform the tasks specified. After the magical process of coding, the programmer comes back in play.</p>\n<p>The programmer will then asses the code and check for errors, run tests and check that everything is working correctly and that the code gives the expected result. If all this checks, the application is now ready for deployment and maintenance \u2013 which remains in the hands of the programmer.</p>\n<p>This simple example explains how the two skills can be used together for productivity.</p>\n<p>And just a final point: a \"coder\" and a \"programmer\" aren't always two separate people. They can be one and the same person who performs all these tasks.</p>\n<h2 id=\"wrapup\">Wrap Up</h2>\n<p>Where do you belong in the two worlds? It took me time to figure out what am really interested in.</p>\n<p>If you are more interested in logic, trying putting your energy into the whole process of programming. If you really just enjoy reading and writing code, then invest your time in coding.</p>\n<p>As we know, computer science is a very wide field and it is still evolving. Work on finding the path you want to explore and focusing on it \u2013 just make sure to enjoy it and have fun, too.</p>\n<p>If you are still struggling, I hope this article has shed some light and helped you find your place.</p>\n<p>Thank you for reading this far. If you enjoyed this article, please share it so you can help another developer find their path.</p>\n<p>Connect with me at:  <a href=\"https://twitter.com/larymak1\">Twitter</a> | <a href=\"https://www.linkedin.com/in/hillary-nyakundi-3a64b11ab/\">LinkedIn</a> | <a href=\"https://github.com/larymak\">GitHub</a></p>\n<p>Enjoy Coding \u2764</p>\n<!--kg-card-end: markdown-->\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nIt took me a long time to understand what the terms programming and coding really meant, and what each field entailed. And I'm sure I'm not the only one who felt confused by those two terms when I was new to tech.\nFor a while I thought that they were the same thing, and it took me some time to understand that there are differences between the two \"worlds\".\nIn this article, I'll explain the basic differences between coding and programming and how they work collaboratively to develop apps and sites.\nSo let\u2019s explore these terms and how professionals use them by first understanding what they mean.\n\n\nYou might have seen courses, bootcamps, or articles talk all about coding \u2013 so why is the emphasis on this term?\nThis is because the actual act of coding makes it possible for us to do all the cool stuff we do every day. It lets us use mobile apps, work with different software and operating systems, and even play the games we love or visit the website you are reading this article on. It's all made possible through coding.\nSo, what is coding in simple terms?\nWe can define coding as the act of translating instructions for a computer from human language to a language a machine can understand. This code tells the computer how to behave and what actions to perform.\nIf you want to become a coder, you'll need to have some basic knowledge about programming language(s). When I say programming languages, I mean languages like: Python, Java, Go, PHP, or JavaScript, just to mention a few.\nBelow is a good example of some code written in the Python language, that will convert any PDF into an Audiobook:\nimport PyPDF2                     # pip install pypdf\nimport pyttsx3                    # pip install pyttsx3\nfrom tkinter.filedialog import *  # pip install tkinter\n\nbook = askopenfilename()\npdfReader = PyPDF2.PdfFileReader(book)\n\npages = pdfReader.numPages\n\nfor num in range(0, pages):\n    page = pdfReader.getPage(num)\n    text = page.extractText()\n    speak = pyttsx3.init()\n    speak.say(text)\n    speak.runAndWait()\n\nWhat is Programming?\n\nYou've probably also heard people say, \"I am a programmer\". And some of them who use this term have an understanding of what the terms means while other don't. If you don't know what exactly programming means, let's try and shed some light by understanding what programming is all about.\nProgramming is the process of creating the instructions that will tell the computer how to perform a particular task given to it. You do this using programming languages like:\n\nWhen we talk about programming, think of something like a remote control for your TV \u2013 it will wait for you to give it instructions by pressing different buttons which then tell the TV to perform a specific task (like changing the channel, increasing the volume, and so on). Well, this is the same way programmers can instruct a computer to do various things.\nWith programming, you can almost do anything \u2013 like programming robots to help with house chores, or even programming self-driven cars like Tesla.\nIn order for a programmer to develop a program that will implement their idea, they need to carry out the following steps:\n\nPlanning the structure of the app (with the help of tools like Trello)\nDesigning it (by using tools like Figma or Adobexd)\nDeveloping it (by using their programming language of choice)\nTesting its features\nDeploying it (on either free or paid hosting services)\nMaintaining it after it's finished.\n\nSo as you can see, we can say that programming does not only deal with the actual writing of the code. It also involves using data structures and algorithms, and in general dealing with the bigger picture of creating and developing complex systems.\nThe Difference between Coding and Programming\n\nWe will divide the differences in four main categories which will help us break down the concepts and understand them better.\nThe terminology\nCoding deals with writing code in a language understood by both machines and humans. The main aim of coding is to provide communication between the two (humans & computers).\nProgramming involves creating an outline and structure for the program\u2019s code that follows certain standards, before the actual code is written to preform the task it needs to perform.\nThe tools you use\nWhen it comes to coding, one of your most important tools will be your text editor (like Notepad, or something more complex and feature-rich like Visual Studio Code, Sublime, Atom, or Vim).\nWhen you're talking about Programming, on the other hand, you'll need some additional tools. As a programmer, you'll be performing document reviews, doing lots of planning, thinking about design, and so on.\nTo help you with these tasks, you'll use tools like more advanced code editors, analysis tools, debuggers, modelling frameworks, assemblers, modelling algorithms and more.\nAs a programmer you will need to have a lot of experience using these tools and more exposure to the processes that developers use to build apps and other products.\nYour Level of knowledge\nAs a coder having basic knowledge of a programming language and its syntax is a good start. Once you know how to code in one language, it's easier to learn others. And again, your main purpose is on writing the actual code that tells the machine what to do.\nOn the other hand programmers need more knowledge to begin with. You'll need to know how to create and work with algorithms, how to design websites, how to debug and test your code, how to manage projects, and of course how to work with programming languages.\nProblem solving, critical thinking and analytical skills are also essential when you're developing complex systems.\nThe end product\nAs a coder your expected outcome is typically a simple solution that, after compiling, will successfully give your desired output. A good example is the one we gave earlier \u2013 converting a PDF into an audio file.\nOn the other hand a programmers will work to give a whole working application or piece of software that people will use in the market. They're also responsible for following up and maintaining what they build to ensure it's running smoothly without any glitches.\nHow Coding and Programming Work Together\nBy this point I hope you are able to tell the difference between coding and programming and what the two deal with. Now, let's see how the two can (and should) work closely together to accomplish a lot.\nTo better understand the how, let's begin by providing a real scenario where both coding and programming will be required to work closely to produce a complete working app.\nImagine you have been asked to create an app that will help monitor or keep track of your daily routine or monitor your daily expenses. By using the concepts of the two worlds this is how you will accomplish the task.\nYou will need a programmer, who will be able to:\n\nplan the structure of the app (with the help of tools like Trello)\nWrite down the main features of the app, what users are expected to use  it for, etc\nDesign the app (by using tools like Figma or Adobexd)\n\nAfter completing these steps, the coder's role comes in play. They take the ideas the programmer creates and transform it into a machine-readable form by writing code to perform the tasks specified. After the magical process of coding, the programmer comes back in play.\nThe programmer will then asses the code and check for errors, run tests and check that everything is working correctly and that the code gives the expected result. If all this checks, the application is now ready for deployment and maintenance \u2013 which remains in the hands of the programmer.\nThis simple example explains how the two skills can be used together for productivity.\nAnd just a final point: a \"coder\" and a \"programmer\" aren't always two separate people. They can be one and the same person who performs all these tasks.\nWrap Up\nWhere do you belong in the two worlds? It took me time to figure out what am really interested in.\nIf you are more interested in logic, trying putting your energy into the whole process of programming. If you really just enjoy reading and writing code, then invest your time in coding.\nAs we know, computer science is a very wide field and it is still evolving. Work on finding the path you want to explore and focusing on it \u2013 just make sure to enjoy it and have fun, too.\nIf you are still struggling, I hope this article has shed some light and helped you find your place.\nThank you for reading this far. If you enjoyed this article, please share it so you can help another developer find their path.\nConnect with me at:  Twitter | LinkedIn | GitHub\nEnjoy Coding \u2764\n\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 9304, "excerpt": "It took me a long time to understand what the terms programming and coding \nreally meant, and what each field entailed. And I'm sure I'm not the only one\nwho felt confused by those two terms when I was new to tech.\n\nFor a while I thought that they were the same thing, and it took me some time to\nunderstand that there are differences between the two \"worlds\".\n\nIn this article, I'll explain the basic differences between coding and\nprogramming and how they work collaboratively to develop apps and s", "siteName": "freeCodeCamp.org", "publishedTime": "2021-03-17T16:28:00.000Z", "id": "b5a82558332d0737d35b7a36eb6722facabc3b58", "url": "https://www.freecodecamp.org/news/difference-between-coding-and-programming/", "domain": "freecodecamp.org", "date": "2023-12-27T18:06:06.901459", "resultUri": "http://localhost:3000/result/b5a82558332d0737d35b7a36eb6722facabc3b58", "query": {"url": ["https://www.freecodecamp.org/news/difference-between-coding-and-programming/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "What is the Difference Between Coding and Programming?", "description": "It took me a long time to understand what the terms programming and coding  really meant, and what each field entailed. And I'm sure I'm not the only one who felt confused by those two terms when I was new to tech. For a while I thought that they", "url": "https://www.freecodecamp.org/news/difference-between-coding-and-programming/", "image": "https://www.freecodecamp.org/news/content/images/2021/03/key-difference-between-coding-and-programming--2-.png", "image:width": "1200", "image:height": "630"}, "twitter": {"card": "summary_large_image", "title": "What is the Difference Between Coding and Programming?", "description": "It took me a long time to understand what the terms programming and coding  really meant, and what each field entailed. And I'm sure I'm not the only one who felt confused by those two terms when I was new to tech. For a while I thought that they", "url": "https://www.freecodecamp.org/news/difference-between-coding-and-programming/", "image": "https://www.freecodecamp.org/news/content/images/2021/03/key-difference-between-coding-and-programming--2-.png", "label1": "Written by", "data1": "Hillary Nyakundi", "label2": "Filed under", "data2": "Coding, Programming", "site": "@freecodecamp", "creator": "@larymak1"}}}