{"title": "How to Get an Interview as a Software Developer", "byline": "Martin Cartledge", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to Get an Interview as a Software Developer</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>In this article, I will share the steps you should take to increase your chances of getting an interview as a software developer. </p><p>Whether you are just starting out, or looking for something new, I am confident that you will find value in what I share below. </p><p>I'll be sharing other <em>interview insights</em> in future articles, as well. So look out for them over the coming weeks.</p><p>Alright, let\u2019s get started!</p><h2 id=\"how-to-determine-your-ideal-role\">How to determine your ideal role</h2><p>This might sound strange, but I think it is a question that is often overlooked. </p><p>Due to the eclectic nature of our industry, it is common to just apply to <em>any</em> kind of job. </p><p>This is tricky because, on the one hand, you want interviews and experience with different technologies. But I have found that answering a few questions can put you ahead in your search. So what are those questions?</p><h3 id=\"what-kind-of-developer-do-you-want-to-be\">What kind of developer do you want to be?</h3><p>If you are looking for your first job, this might be the hardest question you have to answer. </p><p>Although this might seem overly simplified, I do think it is most important to pick a niche of software that makes <em>you happy</em>. After all, you are the one that will be doing this work 40 hours a week, right?</p><p>If you are brand new to software development and are not sure what you like best, I suggest browsing <a href=\"https://www.freecodecamp.org/\" rel=\"noopener\">freeCodeCamp</a>, <a href=\"https://www.codecademy.com/\" rel=\"noopener\">Code Academy</a>, <a href=\"https://teamtreehouse.com/\" rel=\"noopener\">Treehouse</a>, or <a href=\"https://www.udemy.com/\" rel=\"noopener\">Udemy</a>. Then take a course that sounds interesting to you.</p><p>It is easy to get caught in a state of limbo when you are not sure what to do next. My advice when that happens is to just pick something and try it.</p><h3 id=\"what-kind-of-company-do-you-want-to-work-for\">What kind of company do you want to work for?</h3><p>This might be a tricky question to answer, but it can really save you lots of headaches down the road. </p><p>In software development, there are typically three <em>types</em> of companies:</p><h4 id=\"startups\">Startups</h4><p>Startups typically have under 500 employees, are less than 5 years old, and embrace a fast-paced environment.</p><ul><li>You will play a large role in the problems that your company is trying to solve</li><li>You'll work with cutting edge technology in the industry</li><li>There will be lots of opportunities to learn from senior developers</li></ul><ul><li>You'll be responsible for (you'll \u201cown\u201d) more pieces of the codebase</li><li>Processes such as code review and a team code style might not be established</li><li>You might have to quickly throw out code you contributed to because the team is trying out other ideas</li></ul><h4 id=\"mid-sized-companies\">Mid-sized companies</h4><p>A mid-sized company will typically have 500\u20135,000 employees and be at least 5 years old.</p><ul><li>There's a high chance that the company will be profitable (job security)</li><li>There will be more onboarding resources and documentation</li><li>You'll have solidified planning strategies and clear goals for each quarter</li></ul><ul><li>More processes can mean more meetings and less time spent coding</li><li>A larger team can mean less individual input/direction of a project</li><li>It can be harder to adopt newer technologies due to legacy applications, and so on</li></ul><h4 id=\"large-corporations\">Large corporations</h4><p>Large corporations typically have 5,000+ employees and are over 10 years old.</p><ul><li>They usually have the resources to pay higher salaries</li><li>Traditionally there's a more vetted process to get hired, and so lots of opportunity to learn from team members</li><li>Stock options (you benefit when your company benefits)</li></ul><ul><li>It tends to feel like you are a small fish in a large pond (contributions are not as tangible)</li><li>Career advancement (like promotions or switching teams) can be a long-winded process</li><li>It's often harder to bond as a team if you're globally distributed</li></ul><p>All of these factors are good things to keep in mind when you're looking to switch companies or if you are looking to join your first company. </p><h3 id=\"how-do-you-learn-more-about-a-company\">How do you learn more about a company?</h3><p>A lot of resources have surfaced over the last 5\u201310 years that help folks get an \u201cinside view\u201d into a company\u2019s interview process, culture, and salaries. A few that are particularly useful are:</p><ul><li><a href=\"https://www.glassdoor.com/\" rel=\"noopener\">Glassdoor</a>: Employee reviews, interview experiences, and common salaries</li><li><a href=\"https://www.teamblind.com/\" rel=\"noopener\">Blind</a>: Anonymous employee reviews, interview experiences, common salaries, and employee referrals</li><li><a href=\"https://www.levels.fyi/\" rel=\"noopener\">Levels.fyi</a>: Title hierarchy, title comparisons to other companies, and common salaries</li></ul><p>Once you've answered these questions and figured out what sort of company you want to work for, and in what kind of role, you're ready to prepare for the job hunt. So what does that involve?</p><h2 id=\"update-your-r-sum-\">Update Your R\u00e9sum\u00e9</h2><p>I like to think that everyone on the job hunt has a personal billboard that they carry around with them. You can write on it, or decorate it however you like. That billboard is your r\u00e9sum\u00e9.</p><p>What you decide to put on your personal billboard will greatly affect your chances of getting an interview or not. So here are some things to keep in mind when writing a r\u00e9sum\u00e9:</p><ul><li>Keep it short (1 page, or 2 pages if you have 10+ years of experience)</li><li>Tailor your resume to the job you want</li><li>If past technology/experience is not applicable, try to make it applicable or leave it out</li><li>Write 3\u20135 bullet points for each job</li><li>Make your contributions impactful by using metrics (Wrote a function that processed 10,000k data points, cut down on processing time by 60%, and so on)</li></ul><p>Keep in mind that a recruiter or HR representative will only spend 10\u201315 seconds (at most) scanning your r\u00e9sum\u00e9, so you do not have much time. You want to make sure you include details that will help illustrate that you can help this company.</p><p>With that being said, a few things you might want to leave out are:</p><ul><li>A personal photo</li></ul><p><em>Instead</em>: Make your name and the position you <em>want</em> catch the reader's eye</p><ul><li>Graph representations of skill level</li></ul><p><em>Instead</em>: Try replacing it with a sorted list of technologies, starting with your highest comfort level</p><p><em>Or</em>: List your skills in alphabetical order and make your best skills <strong>bold</strong></p><ul><li>Listing jobs that are not relevant to the career field</li></ul><p><em>Instead</em>: Use that space to expand on the experience you have in the software industry. If you don\u2019t have much experience yet, this is a great place to expand on a project(s) you have worked on.</p><h3 id=\"try-out-your-r-sum-on-a-friend-or-tool-\">Try out your r\u00e9sum\u00e9 on a friend (or tool)</h3><p>Another great way to determine if your r\u00e9sum\u00e9 conveys what you would like it to is to have a friend read it for 15 seconds. </p><p>After that time is up, take the r\u00e9sum\u00e9 and have them tell you what they remembered from it. This can be a company name, skill, or contact information. </p><p>This is a great trial run to determine what grabs a person\u2019s eye when they scan your r\u00e9sum\u00e9.</p><p>Here are some helpful tools to improve your r\u00e9sum\u00e9:</p><ul><li><a href=\"https://www.grammarly.com/\" rel=\"noopener\">Grammarly</a></li><li><a href=\"https://docs.google.com/document/d/1ARVyybC5qQEiCzUOLElwAdPpKOK0Qf88srr682eHdCQ/edit\" rel=\"noopener\">Google Drive Resume Template (Serif)</a></li><li><a href=\"https://docs.google.com/document/d/1WR_axh5A9t1jwER_5mFCIcr5I1oNqm4cB1PHAQEEWqc/edit\" rel=\"noopener\">Google Drive Resume Template (Swiss)</a></li></ul><h2 id=\"how-to-conquer-the-job-hunt\">How to Conquer the Job Hunt</h2><blockquote><em>\"By failing to prepare you are preparing to fail.\" - Benjamin Franklin</em></blockquote><p>Let\u2019s just face it: the job hunt is an exhausting and grueling affair for most. I have found that the best way to approach the job search is to have two important things before you start:</p><ul><li>Goals (daily and weekly)</li><li>A plan of action (daily and weekly)</li></ul><p>Let's talk about how you can establish both.</p><h3 id=\"set-goals-and-create-a-plan\">Set Goals and Create a Plan</h3><p>I know what you are thinking: <em>ummm, my goal is to get a new job?</em> Of course, this is the end goal. But, in my experience, spending the time to determine what your goals are early is a great way to feel productive and confident. </p><p>The reason I break down these goals into two categories is that it is important to feel like you are being productive every day, even if you are not getting emails or calls back.</p><p>Some examples I have used in the past for daily and weekly goals are:</p><h4 id=\"daily-goals-\">Daily Goals:</h4><ul><li>Submit 10 applications</li><li>Spend 30 minutes on a side project</li></ul><h4 id=\"weekly-goals-\">Weekly Goals:</h4><ul><li>Schedule a phone interview</li><li>Spend 2 hours on technical interview prep</li></ul><p>These might seem overly simplified, and you\u2019re right! That is the idea. You want to make sure you make your daily and weekly goals are things that are easily measurable, and <em>sustainable</em>.</p><h2 id=\"make-the-most-of-your-time\">Make the Most of Your Time</h2><p>So far we have talked about the importance of determining your ideal role, refining your r\u00e9sum\u00e9, and setting a schedule for yourself. To ensure that these tasks are not wasted effort, you want to make sure you are making the most of your time.</p><p>What do I mean by that? Think of the old sayings <em>Set yourself up for success</em> or <em>Put the right foot forward</em>. Basically, you want to make sure you are equally balanced in your journey to getting more interviews and being successful at them.</p><p>Besides doing the items mentioned above, a few others that can carry great importance are:</p><ul><li>Practice what you're learning (and what you already know)</li><li>Work on side projects</li><li>Develop an online presence</li></ul><h3 id=\"practice-what-you-re-learning\">Practice What You're Learning</h3><p>Out of all the things I mention in this post, this one should come as the least surprising.</p><p>To get better at coding, problem-solving, interviewing, or underwater basket weaving, you have to <em>practice.</em> A LOT. There is no getting around this step. </p><p>I, like many, have fallen victim to a cycle of planning too much, taking too many tutorials, or telling myself <em>I\u2019ll start tomorrow</em>.</p><p>For me, this was, and still is the hardest part about preparing for interviews, or quite honestly just being in this industry in general. Things move really quickly, and no one wants to feel like they are falling behind. </p><p>But, tech is a mentally draining profession. It is more than understandable that the thought of practicing coding interview questions in any capacity is exhausting. </p><p>I have some good news, though. When you think about practicing, try to think of your current skills as water in a bucket. Each time you practice, even something you think is small or not enough, think of that as drops of water that fill your bucket.</p><p>All experiences, good or bad, frustrating or rewarding, fill this bucket up and make <em>you</em> a stronger developer <em>every day</em>.</p><p>I think a great way to get into the habit of practicing writing code is to give yourself a goal per week. Remember, the ultimate goal is to practice and stay consistent, so avoid setting the bar at an unrealistic level for yourself. All this will do is make you feel bad on days you just don\u2019t feel like coding.</p><p>Remember, you are the only person like <em>you</em>. There will never be anyone else like you, and that is awesome. So be nice to yourself, this stuff is hard. </p><p>If you make a habit to practice just a little bit, each time that bucket will fill up and you will surprise yourself after just a few weeks of staying consistent. You got this!</p><p>Here are some helpful tools to get you in the habit of practicing consistently:</p><ul><li><a href=\"https://www.freecodecamp.org/\" rel=\"noopener\">freeCodeCamp</a></li><li><a href=\"https://leetcode.com/\" rel=\"noopener\">Leetcode</a></li><li><a href=\"https://www.codecademy.com/\" rel=\"noopener\">Code Academy</a></li></ul><h3 id=\"work-on-side-projects\">Work on Side Projects</h3><p>This is something else that I am sure you have heard a million times. But I do think that working on a side project can really help you stand out as a candidate. And it'll also help you stay engaged on days you don\u2019t feel like practicing your coding skills.</p><p>In my experience, it has been easier to get started when you can think of answers to both of these questions:</p><ul><li>What tech do I want to learn or get better at?</li><li>What is a product I really like, or I wish existed?</li></ul><p>With the answer to these two questions, you have a framework for your project! Do you like the new look of Twitter? Pick a feature and try to recreate the look and feel of it. Can\u2019t find a habit tracker app you like? Try building one yourself.</p><p>If you would prefer to contribute to a project that is already established, that\u2019s great as well. This can be a daunting task if it is your first time. But <a href=\"https://firstcontributions.github.io/\">there is a great website</a> that lists tons of projects on Github that are looking for first-time contributors. So check it out.</p><p>Here are some other helpful tools:</p><ul><li><a href=\"https://medium.com/better-programming/12-ideas-for-programming-projects-too-dangerous-not-to-build-514e3212ab77\">\u201c12 Great Ideas for Programming Projects That People Will Use\u201d by Filipe Silva</a></li><li><a href=\"https://github.com/florinpop17/app-ideas\" rel=\"noopener\">\u201capp-ideas\u201d repo by Florin Pop</a></li></ul><h3 id=\"develop-an-online-presence\">Develop an Online Presence</h3><p>I like to think of the web as another place that allows us to have our own \u201cpersonal billboard\u201d. There are many advantages to having a solid presence online, and some of them include:</p><ul><li>Networking / meeting other developers</li><li>Showing off projects</li><li>Getting potential interest from other companies</li></ul><p>Putting in the extra effort to make your online presence solid can take you a long way, and the ways you can achieve this are relatively straightforward. Here are a few things I suggest you do:</p><h4 id=\"build-a-portfolio-site\">Build a portfolio site</h4><p>This does not have to be an extravagant, complicated website if you do not want it to be. As long as it has contact information, links to your various profiles, and a blurb about yourself you should be good-to-go. </p><p>This can be a great place to showcase your technical skills or talk about your passions and work history, too.</p><h4 id=\"get-a-personalized-url\">Get a personalized URL </h4><p>A lot of common websites that developers use (like Github, LinkedIn, Medium, Dev.to, Twitter, and others) allow you to change your URL. I suggest you make it your user name. I would also suggest trying to use the same name for each website.</p><h4 id=\"start-a-blog\">Start a blog</h4><p>If you are not interested in building projects and would prefer writing, this is a great way to show your skills and build an audience.</p><h4 id=\"have-a-consistent-profile-photo\">Have a consistent profile photo</h4><p>Ideally you want to use a photo that is professional, but lets your personality shine through as well. Once you find one, try to use that same photo across all your sites/social media profiles.</p><p>This is certainly not a requirement, but if you want to leverage social media as a platform for your development, I suggest that you post about things you learn and try to engage your audience often. </p><p>Finding the balance between letting your personality show while also adding value via sharing your knowledge can be tricky, but your followers will appreciate it!</p><h2 id=\"in-summary\">In Summary</h2><p>Whether you are new to the field and are looking for your first job, or you are an experienced developer looking for a new challenge, I hope these insights help. </p><p>The job hunt can be a daunting, exhausting process. But remember, it is a marathon, not a race. You got this. Consistency is key. Every rejection is an opportunity to improve your skills for the job you were meant for. </p><p>If you are struggling with any aspect of the job hunt, please feel free to <a href=\"mailto:martin@hey.com\">send me an email</a>.</p><p>If you enjoyed this blog, please keep a lookout for the next entry in the <em>Interview Insights</em> series. My next article will be focused on preparing for technical interviews, look for that in 2 weeks. Thank you for reading!</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nIn this article, I will share the steps you should take to increase your chances of getting an interview as a software developer. Whether you are just starting out, or looking for something new, I am confident that you will find value in what I share below. I'll be sharing other interview insights in future articles, as well. So look out for them over the coming weeks.Alright, let\u2019s get started!How to determine your ideal roleThis might sound strange, but I think it is a question that is often overlooked. Due to the eclectic nature of our industry, it is common to just apply to any kind of job. This is tricky because, on the one hand, you want interviews and experience with different technologies. But I have found that answering a few questions can put you ahead in your search. So what are those questions?What kind of developer do you want to be?If you are looking for your first job, this might be the hardest question you have to answer. Although this might seem overly simplified, I do think it is most important to pick a niche of software that makes you happy. After all, you are the one that will be doing this work 40 hours a week, right?If you are brand new to software development and are not sure what you like best, I suggest browsing freeCodeCamp, Code Academy, Treehouse, or Udemy. Then take a course that sounds interesting to you.It is easy to get caught in a state of limbo when you are not sure what to do next. My advice when that happens is to just pick something and try it.What kind of company do you want to work for?This might be a tricky question to answer, but it can really save you lots of headaches down the road. In software development, there are typically three types of companies:StartupsStartups typically have under 500 employees, are less than 5 years old, and embrace a fast-paced environment.Pros:You will play a large role in the problems that your company is trying to solveYou'll work with cutting edge technology in the industryThere will be lots of opportunities to learn from senior developersCons:You'll be responsible for (you'll \u201cown\u201d) more pieces of the codebaseProcesses such as code review and a team code style might not be establishedYou might have to quickly throw out code you contributed to because the team is trying out other ideasMid-sized companiesA mid-sized company will typically have 500\u20135,000 employees and be at least 5 years old.Pros:There's a high chance that the company will be profitable (job security)There will be more onboarding resources and documentationYou'll have solidified planning strategies and clear goals for each quarterCons:More processes can mean more meetings and less time spent codingA larger team can mean less individual input/direction of a projectIt can be harder to adopt newer technologies due to legacy applications, and so onLarge corporationsLarge corporations typically have 5,000+ employees and are over 10 years old.Pros:They usually have the resources to pay higher salariesTraditionally there's a more vetted process to get hired, and so lots of opportunity to learn from team membersStock options (you benefit when your company benefits)Cons:It tends to feel like you are a small fish in a large pond (contributions are not as tangible)Career advancement (like promotions or switching teams) can be a long-winded processIt's often harder to bond as a team if you're globally distributedAll of these factors are good things to keep in mind when you're looking to switch companies or if you are looking to join your first company. How do you learn more about a company?A lot of resources have surfaced over the last 5\u201310 years that help folks get an \u201cinside view\u201d into a company\u2019s interview process, culture, and salaries. A few that are particularly useful are:Glassdoor: Employee reviews, interview experiences, and common salariesBlind: Anonymous employee reviews, interview experiences, common salaries, and employee referralsLevels.fyi: Title hierarchy, title comparisons to other companies, and common salariesOnce you've answered these questions and figured out what sort of company you want to work for, and in what kind of role, you're ready to prepare for the job hunt. So what does that involve?Update Your R\u00e9sum\u00e9I like to think that everyone on the job hunt has a personal billboard that they carry around with them. You can write on it, or decorate it however you like. That billboard is your r\u00e9sum\u00e9.What you decide to put on your personal billboard will greatly affect your chances of getting an interview or not. So here are some things to keep in mind when writing a r\u00e9sum\u00e9:Keep it short (1 page, or 2 pages if you have 10+ years of experience)Tailor your resume to the job you wantIf past technology/experience is not applicable, try to make it applicable or leave it outWrite 3\u20135 bullet points for each jobMake your contributions impactful by using metrics (Wrote a function that processed 10,000k data points, cut down on processing time by 60%, and so on)Keep in mind that a recruiter or HR representative will only spend 10\u201315 seconds (at most) scanning your r\u00e9sum\u00e9, so you do not have much time. You want to make sure you include details that will help illustrate that you can help this company.With that being said, a few things you might want to leave out are:A personal photoInstead: Make your name and the position you want catch the reader's eyeGraph representations of skill levelInstead: Try replacing it with a sorted list of technologies, starting with your highest comfort levelOr: List your skills in alphabetical order and make your best skills boldListing jobs that are not relevant to the career fieldInstead: Use that space to expand on the experience you have in the software industry. If you don\u2019t have much experience yet, this is a great place to expand on a project(s) you have worked on.Try out your r\u00e9sum\u00e9 on a friend (or tool)Another great way to determine if your r\u00e9sum\u00e9 conveys what you would like it to is to have a friend read it for 15 seconds. After that time is up, take the r\u00e9sum\u00e9 and have them tell you what they remembered from it. This can be a company name, skill, or contact information. This is a great trial run to determine what grabs a person\u2019s eye when they scan your r\u00e9sum\u00e9.Here are some helpful tools to improve your r\u00e9sum\u00e9:GrammarlyGoogle Drive Resume Template (Serif)Google Drive Resume Template (Swiss)How to Conquer the Job Hunt\"By failing to prepare you are preparing to fail.\" - Benjamin FranklinLet\u2019s just face it: the job hunt is an exhausting and grueling affair for most. I have found that the best way to approach the job search is to have two important things before you start:Goals (daily and weekly)A plan of action (daily and weekly)Let's talk about how you can establish both.Set Goals and Create a PlanI know what you are thinking: ummm, my goal is to get a new job? Of course, this is the end goal. But, in my experience, spending the time to determine what your goals are early is a great way to feel productive and confident. The reason I break down these goals into two categories is that it is important to feel like you are being productive every day, even if you are not getting emails or calls back.Some examples I have used in the past for daily and weekly goals are:Daily Goals:Submit 10 applicationsSpend 30 minutes on a side projectWeekly Goals:Schedule a phone interviewSpend 2 hours on technical interview prepThese might seem overly simplified, and you\u2019re right! That is the idea. You want to make sure you make your daily and weekly goals are things that are easily measurable, and sustainable.Make the Most of Your TimeSo far we have talked about the importance of determining your ideal role, refining your r\u00e9sum\u00e9, and setting a schedule for yourself. To ensure that these tasks are not wasted effort, you want to make sure you are making the most of your time.What do I mean by that? Think of the old sayings Set yourself up for success or Put the right foot forward. Basically, you want to make sure you are equally balanced in your journey to getting more interviews and being successful at them.Besides doing the items mentioned above, a few others that can carry great importance are:Practice what you're learning (and what you already know)Work on side projectsDevelop an online presencePractice What You're LearningOut of all the things I mention in this post, this one should come as the least surprising.To get better at coding, problem-solving, interviewing, or underwater basket weaving, you have to practice. A LOT. There is no getting around this step. I, like many, have fallen victim to a cycle of planning too much, taking too many tutorials, or telling myself I\u2019ll start tomorrow.For me, this was, and still is the hardest part about preparing for interviews, or quite honestly just being in this industry in general. Things move really quickly, and no one wants to feel like they are falling behind. But, tech is a mentally draining profession. It is more than understandable that the thought of practicing coding interview questions in any capacity is exhausting. I have some good news, though. When you think about practicing, try to think of your current skills as water in a bucket. Each time you practice, even something you think is small or not enough, think of that as drops of water that fill your bucket.All experiences, good or bad, frustrating or rewarding, fill this bucket up and make you a stronger developer every day.I think a great way to get into the habit of practicing writing code is to give yourself a goal per week. Remember, the ultimate goal is to practice and stay consistent, so avoid setting the bar at an unrealistic level for yourself. All this will do is make you feel bad on days you just don\u2019t feel like coding.Remember, you are the only person like you. There will never be anyone else like you, and that is awesome. So be nice to yourself, this stuff is hard. If you make a habit to practice just a little bit, each time that bucket will fill up and you will surprise yourself after just a few weeks of staying consistent. You got this!Here are some helpful tools to get you in the habit of practicing consistently:freeCodeCampLeetcodeCode AcademyWork on Side ProjectsThis is something else that I am sure you have heard a million times. But I do think that working on a side project can really help you stand out as a candidate. And it'll also help you stay engaged on days you don\u2019t feel like practicing your coding skills.In my experience, it has been easier to get started when you can think of answers to both of these questions:What tech do I want to learn or get better at?What is a product I really like, or I wish existed?With the answer to these two questions, you have a framework for your project! Do you like the new look of Twitter? Pick a feature and try to recreate the look and feel of it. Can\u2019t find a habit tracker app you like? Try building one yourself.If you would prefer to contribute to a project that is already established, that\u2019s great as well. This can be a daunting task if it is your first time. But there is a great website that lists tons of projects on Github that are looking for first-time contributors. So check it out.Here are some other helpful tools:\u201c12 Great Ideas for Programming Projects That People Will Use\u201d by Filipe Silva\u201capp-ideas\u201d repo by Florin PopDevelop an Online PresenceI like to think of the web as another place that allows us to have our own \u201cpersonal billboard\u201d. There are many advantages to having a solid presence online, and some of them include:Networking / meeting other developersShowing off projectsGetting potential interest from other companiesPutting in the extra effort to make your online presence solid can take you a long way, and the ways you can achieve this are relatively straightforward. Here are a few things I suggest you do:Build a portfolio siteThis does not have to be an extravagant, complicated website if you do not want it to be. As long as it has contact information, links to your various profiles, and a blurb about yourself you should be good-to-go. This can be a great place to showcase your technical skills or talk about your passions and work history, too.Get a personalized URL A lot of common websites that developers use (like Github, LinkedIn, Medium, Dev.to, Twitter, and others) allow you to change your URL. I suggest you make it your user name. I would also suggest trying to use the same name for each website.Start a blogIf you are not interested in building projects and would prefer writing, this is a great way to show your skills and build an audience.Have a consistent profile photoIdeally you want to use a photo that is professional, but lets your personality shine through as well. Once you find one, try to use that same photo across all your sites/social media profiles.This is certainly not a requirement, but if you want to leverage social media as a platform for your development, I suggest that you post about things you learn and try to engage your audience often. Finding the balance between letting your personality show while also adding value via sharing your knowledge can be tricky, but your followers will appreciate it!In SummaryWhether you are new to the field and are looking for your first job, or you are an experienced developer looking for a new challenge, I hope these insights help. The job hunt can be a daunting, exhausting process. But remember, it is a marathon, not a race. You got this. Consistency is key. Every rejection is an opportunity to improve your skills for the job you were meant for. If you are struggling with any aspect of the job hunt, please feel free to send me an email.If you enjoyed this blog, please keep a lookout for the next entry in the Interview Insights series. My next article will be focused on preparing for technical interviews, look for that in 2 weeks. Thank you for reading!\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 14603, "excerpt": "In this article, I will share the steps you should take to increase your chances\nof getting an interview as a software developer. \n\nWhether you are just starting out, or looking for something new, I am confident\nthat you will find value in what I share below. \n\nI'll be sharing other interview insights in future articles, as well. So look\nout for them over the coming weeks.\n\nAlright, let\u2019s get started!\n\nHow to determine your ideal role\nThis might sound strange, but I think it is a question that i", "siteName": "freeCodeCamp.org", "publishedTime": "2020-11-30T19:43:00.000Z", "id": "243a06354ac9a07d23c518467ea35f394f038605", "url": "https://www.freecodecamp.org/news/how-to-get-an-interview-as-a-software-developer/", "domain": "freecodecamp.org", "date": "2023-12-27T18:06:26.810418", "resultUri": "http://localhost:3000/result/243a06354ac9a07d23c518467ea35f394f038605", "query": {"url": ["https://www.freecodecamp.org/news/how-to-get-an-interview-as-a-software-developer/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to Get an Interview as a Software Developer", "description": "In this article, I will share the steps you should take to increase your chances of getting an interview as a software developer.  Whether you are just starting out, or looking for something new, I am confident that you will find value in what I share below.  I'll", "url": "https://www.freecodecamp.org/news/how-to-get-an-interview-as-a-software-developer/", "image": "https://www.freecodecamp.org/news/content/images/2020/11/dog_at_beach-1.jpg", "image:width": "2000", "image:height": "1425"}, "twitter": {"card": "summary_large_image", "title": "How to Get an Interview as a Software Developer", "description": "In this article, I will share the steps you should take to increase your chances of getting an interview as a software developer.  Whether you are just starting out, or looking for something new, I am confident that you will find value in what I share below.  I'll", "url": "https://www.freecodecamp.org/news/how-to-get-an-interview-as-a-software-developer/", "image": "https://www.freecodecamp.org/news/content/images/2020/11/dog_at_beach-1.jpg", "label1": "Written by", "data1": "Martin Cartledge", "label2": "Filed under", "data2": "Interviews, Interview Tips, Careers, Self Improvement, Programming", "site": "@freecodecamp"}}}