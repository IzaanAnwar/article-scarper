{"title": "Java Programming Language Basics", "byline": "freeCodeCamp.org", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>Java Programming Language Basics</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p><a href=\"https://www.oracle.com/java/index.html\" rel=\"nofollow\">Java</a> is a programming language developed by <a href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" rel=\"nofollow\">Sun Microsystems</a> in 1995, which got later acquired by <a href=\"http://www.oracle.com/index.html\" rel=\"nofollow\">Oracle</a>. It\u2019s now a full platform with lots of standard APIs, open source APIs, tools, huge developer community and is used to build the most trusted enterprise solutions by big and small companies alike. <a href=\"https://www.android.com/\" rel=\"nofollow\">Android</a> application development is done fully with Java and its ecosystem. To know more about Java, read <a href=\"https://java.com/en/download/faq/whatis_java.xml\" rel=\"nofollow\">this</a> and <a href=\"http://tutorials.jenkov.com/java/what-is-java.html\" rel=\"nofollow\">this</a>.</p><h2 id=\"version\"><strong>Version</strong></h2><p>The latest version is <a href=\"http://www.oracle.com/technetwork/java/javase/overview\" rel=\"nofollow\">Java 11</a>, which was released in 2018 with <a href=\"https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html\" rel=\"nofollow\">various improvements</a> over the previous version, Java 10. But for all intents and purposes, we will use Java 8 in this wiki for all tutorials.</p><p>Java is also divided into several \u201cEditions\u201d :</p><ul><li><a href=\"http://www.oracle.com/technetwork/java/javase/overview/index.html\" rel=\"nofollow\">SE</a> - Standard Edition - for desktop and standalone server applications</li><li><a href=\"http://www.oracle.com/technetwork/java/javaee/overview/index.html\" rel=\"nofollow\">EE</a> - Enterprise Edition - for developing and executing Java components that run embedded in a Java server</li><li><a href=\"http://www.oracle.com/technetwork/java/embedded/javame/overview/index.html\" rel=\"nofollow\">ME</a> - Micro Edition - for developing and executing Java applications on mobile phones and embedded devices</li></ul><h2 id=\"installation-jdk-or-jre\"><strong>Installation : JDK or JRE ?</strong></h2><p>Download the latest Java binaries from the <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" rel=\"nofollow\">official website</a>. Here you may face a question, which one to download, JDK or JRE? JRE stands for Java Runtime Environment, which is the platform dependent Java Virtual Machine to run Java codes, and JDK stands for Java Development Kit, which consists of most of the development tools, most importantly the compiler <code>javac</code>, and also the JRE. So, for an average user JRE would be sufficient, but since we would be developing with Java, we would download the JDK.</p><h2 id=\"platform-specific-installation-instructions\"><strong>Platform specific installation instructions</strong></h2><h3 id=\"windows\"><strong>Windows</strong></h3><ul><li>Download the relevant <a href=\"https://en.wikipedia.org/wiki/Windows_Installer\" rel=\"nofollow\">.msi</a> file (x86 / i586 for 32bits, x64 for 64bits)</li><li>Run the .msi file. Its a self extracting executable file which will install Java in your system!</li></ul><h3 id=\"linux\"><strong>Linux</strong></h3><ul><li>Download the relevant <a href=\"http://www.cyberciti.biz/faq/linux-unix-bsd-extract-targz-file/\" rel=\"nofollow\">tar.gz</a> file for your system and install :</li></ul><p><code>bash $ tar zxvf jdk-8uversion-linux-x64.tar.gz</code></p><ul><li><a href=\"https://en.wikipedia.org/wiki/List_of_Linux_distributions#RPM-based\" rel=\"nofollow\">RPM based Linux platforms</a> download the relevant <a href=\"https://en.wikipedia.org/wiki/RPM_Package_Manager\" rel=\"nofollow\">.rpm</a> file and install :</li></ul><p><code>bash $ rpm -ivh jdk-8uversion-linux-x64.rpm</code></p><ul><li>Users have the choice to install an open source version of Java, OpenJDK or the Oracle JDK. While OpenJDK is in active development and in sync with Oracle JDK, they just differ in <a href=\"http://openjdk.java.net/faq/\" rel=\"nofollow\">licensing</a> stuff. However few developers complain of the stability of Open JDK. Instructions for <strong><strong>Ubuntu</strong></strong> :</li></ul><p>Open JDK installation :<br/><code>bash sudo apt-get install openjdk-8-jdk</code></p><p>Oracle JDK installation :<br/><code>bash sudo add-apt-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java8-installer</code></p><h3 id=\"mac\"><strong>Mac</strong></h3><ul><li>Either download Mac OSX .dmg executable from Oracle Downloads</li><li>Or use <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a> to <a href=\"http://stackoverflow.com/a/28635465/2861269\" rel=\"nofollow\">install</a> :</li></ul><pre tabindex=\"0\"><code>brew tap caskroom/cask  \nbrew install brew-cask  \nbrew cask install java</code></pre><h3 id=\"verify-installation\"><strong>Verify Installation</strong></h3><p>Verify Java has been properly installed in your system by opening Command Prompt (Windows) / Windows Powershell / Terminal (Mac OS and *Unix) and checking the versions of Java runtime and compiler :</p><pre tabindex=\"0\"><code>$ java -version\njava version \"1.8.0_66\"\nJava(TM) SE Runtime Environment (build 1.8.0_66-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)\n\n$ javac -version\njavac 1.8.0_66</code></pre><p><strong><strong>Tip</strong></strong> : If you get an error such as \u201cCommand Not Found\u201d on either <code>java</code> or <code>javac</code> or both, dont panic, its just your system PATH is not properly set. For Windows, see <a href=\"http://stackoverflow.com/questions/15796855/java-is-not-recognized-as-an-internal-or-external-command\" rel=\"nofollow\">this StackOverflow answer</a> or <a href=\"http://javaandme.com/\" rel=\"nofollow\">this article</a> on how to do it. Also there are guides for <a href=\"http://stackoverflow.com/questions/9612941/how-to-set-java-environment-path-in-ubuntu\" rel=\"nofollow\">Ubuntu</a> and <a href=\"http://www.mkyong.com/java/how-to-set-java_home-environment-variable-on-mac-os-x/\" rel=\"nofollow\">Mac</a> as well. If you still can\u2019t figure it out, dont worry, just ask us in our <a href=\"https://gitter.im/FreeCodeCamp/java\" rel=\"nofollow\">Gitter room</a>!</p><h2 id=\"jvm\"><strong>JVM</strong></h2><p>Ok now since we are done with the installations, let\u2019s begin to understand first the nitty gritty of the Java ecosystem. Java is an <a href=\"http://stackoverflow.com/questions/1326071/is-java-a-compiled-or-an-interpreted-programming-language\" rel=\"nofollow\">interpreted and compiled</a> language, that is the code we write gets compiled to bytecode and interpreted to run . We write the code in .java files, Java compiles them into <a href=\"https://en.wikipedia.org/wiki/Java_bytecode\" rel=\"nofollow\">bytecodes</a> which are run on a Java Virtual Machine or JVM for execution. These bytecodes typically has a .class extension.</p><p>Java is a pretty secure language as it doesn\u2019t let your program run directly on the machine. Instead, your program runs on a Virtual Machine called JVM. This Virtual Machine exposes several APIs for low level machine interactions you can make, but other than that you cannot play with machine instructions explicitely. This adds a huge bonus of security.</p><p>Also, once your bytecode is compiled it can run on any Java VM. This Virtual Machine is machine dependent, i.e it has different implementations for Windows, Linux and Mac. But your program is guranteed to run in any system thanks to this VM. This philosophy is called <a href=\"https://en.wikipedia.org/wiki/Write_once,_run_anywhere\" rel=\"nofollow\">\u201cWrite Once, Run Anywhere\u201d</a>.</p><h2 id=\"hello-world-\"><strong>Hello World!</strong></h2><p>Let\u2019s write a sample Hello World application. Open any editor / IDE of choice and create a file <code>HelloWorld.java</code>.</p><pre tabindex=\"0\"><code>public class HelloWorld {\n\n    public static void main(String[] args) {\n        // Prints \"Hello, World\" to the terminal window.\n        System.out.println(\"Hello, World\");\n    }\n\n}</code></pre><p><strong><strong>N.B.</strong></strong> Keep in mind in Java file name should be the <strong><strong>exact same name of the public class</strong></strong> in order to compile!</p><p>Now open the terminal / Command Prompt. Change your current directory in the terminal / Command Prompt to the directory where your file is located. And compile the file :</p><pre tabindex=\"0\"><code>$ javac HelloWorld.java</code></pre><p>Now run the file using <code>java</code> command!</p><pre tabindex=\"0\"><code>$ java HelloWorld\nHello, World</code></pre><p>Congrats! Your first Java program has run successfully. Here we are just printing a string passing it to the API <code>System.out.println</code>. We will cover all the concepts in the code, but you are welcome to take a <a href=\"https://docs.oracle.com/javase/tutorial/getStarted/application/\" rel=\"nofollow\">closer look</a>! If you have any doubt or need additional help, feel free to contact us anytime in our <a href=\"https://gitter.im/FreeCodeCamp/java\" rel=\"nofollow\">Gitter Chatroom</a>!</p><h2 id=\"documentation\"><strong>Documentation</strong></h2><p>Java is heavily <a href=\"https://docs.oracle.com/javase/8/docs/\" rel=\"nofollow\">documented</a>, as it supports huge amounts of API\u2019s. If you are using any major IDE such as Eclipse or IntelliJ IDEA, you would find the Java Documentation included within.</p><p>Also, here is a list of free IDEs for Java coding:</p><ul><li><a href=\"https://netbeans.org/\" rel=\"nofollow\">NetBeans</a></li><li><a href=\"https://eclipse.org/\" rel=\"nofollow\">Eclipse</a></li><li><a href=\"https://www.jetbrains.com/idea/features/\" rel=\"nofollow\">IntelliJ IDEA</a></li><li><a href=\"https://developer.android.com/studio/index.html\" rel=\"nofollow\">Android Studio</a></li><li><a href=\"https://www.bluej.org/\" rel=\"nofollow\">BlueJ</a></li><li><a href=\"http://www.jedit.org/\" rel=\"nofollow\">jEdit</a></li><li><a href=\"http://www.oracle.com/technetwork/developer-tools/jdev/overview/index-094652.html\" rel=\"nofollow\">Oracle JDeveloper</a></li></ul>\n</section>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nJava is a programming language developed by Sun Microsystems in 1995, which got later acquired by Oracle. It\u2019s now a full platform with lots of standard APIs, open source APIs, tools, huge developer community and is used to build the most trusted enterprise solutions by big and small companies alike. Android application development is done fully with Java and its ecosystem. To know more about Java, read this and this.VersionThe latest version is Java 11, which was released in 2018 with various improvements over the previous version, Java 10. But for all intents and purposes, we will use Java 8 in this wiki for all tutorials.Java is also divided into several \u201cEditions\u201d :SE - Standard Edition - for desktop and standalone server applicationsEE - Enterprise Edition - for developing and executing Java components that run embedded in a Java serverME - Micro Edition - for developing and executing Java applications on mobile phones and embedded devicesInstallation : JDK or JRE ?Download the latest Java binaries from the official website. Here you may face a question, which one to download, JDK or JRE? JRE stands for Java Runtime Environment, which is the platform dependent Java Virtual Machine to run Java codes, and JDK stands for Java Development Kit, which consists of most of the development tools, most importantly the compiler javac, and also the JRE. So, for an average user JRE would be sufficient, but since we would be developing with Java, we would download the JDK.Platform specific installation instructionsWindowsDownload the relevant .msi file (x86 / i586 for 32bits, x64 for 64bits)Run the .msi file. Its a self extracting executable file which will install Java in your system!LinuxDownload the relevant tar.gz file for your system and install :bash $ tar zxvf jdk-8uversion-linux-x64.tar.gzRPM based Linux platforms download the relevant .rpm file and install :bash $ rpm -ivh jdk-8uversion-linux-x64.rpmUsers have the choice to install an open source version of Java, OpenJDK or the Oracle JDK. While OpenJDK is in active development and in sync with Oracle JDK, they just differ in licensing stuff. However few developers complain of the stability of Open JDK. Instructions for Ubuntu :Open JDK installation :bash sudo apt-get install openjdk-8-jdkOracle JDK installation :bash sudo add-apt-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java8-installerMacEither download Mac OSX .dmg executable from Oracle DownloadsOr use Homebrew to install :brew tap caskroom/cask  \nbrew install brew-cask  \nbrew cask install javaVerify InstallationVerify Java has been properly installed in your system by opening Command Prompt (Windows) / Windows Powershell / Terminal (Mac OS and *Unix) and checking the versions of Java runtime and compiler :$ java -version\njava version \"1.8.0_66\"\nJava(TM) SE Runtime Environment (build 1.8.0_66-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)\n\n$ javac -version\njavac 1.8.0_66Tip : If you get an error such as \u201cCommand Not Found\u201d on either java or javac or both, dont panic, its just your system PATH is not properly set. For Windows, see this StackOverflow answer or this article on how to do it. Also there are guides for Ubuntu and Mac as well. If you still can\u2019t figure it out, dont worry, just ask us in our Gitter room!JVMOk now since we are done with the installations, let\u2019s begin to understand first the nitty gritty of the Java ecosystem. Java is an interpreted and compiled language, that is the code we write gets compiled to bytecode and interpreted to run . We write the code in .java files, Java compiles them into bytecodes which are run on a Java Virtual Machine or JVM for execution. These bytecodes typically has a .class extension.Java is a pretty secure language as it doesn\u2019t let your program run directly on the machine. Instead, your program runs on a Virtual Machine called JVM. This Virtual Machine exposes several APIs for low level machine interactions you can make, but other than that you cannot play with machine instructions explicitely. This adds a huge bonus of security.Also, once your bytecode is compiled it can run on any Java VM. This Virtual Machine is machine dependent, i.e it has different implementations for Windows, Linux and Mac. But your program is guranteed to run in any system thanks to this VM. This philosophy is called \u201cWrite Once, Run Anywhere\u201d.Hello World!Let\u2019s write a sample Hello World application. Open any editor / IDE of choice and create a file HelloWorld.java.public class HelloWorld {\n\n    public static void main(String[] args) {\n        // Prints \"Hello, World\" to the terminal window.\n        System.out.println(\"Hello, World\");\n    }\n\n}N.B. Keep in mind in Java file name should be the exact same name of the public class in order to compile!Now open the terminal / Command Prompt. Change your current directory in the terminal / Command Prompt to the directory where your file is located. And compile the file :$ javac HelloWorld.javaNow run the file using java command!$ java HelloWorld\nHello, WorldCongrats! Your first Java program has run successfully. Here we are just printing a string passing it to the API System.out.println. We will cover all the concepts in the code, but you are welcome to take a closer look! If you have any doubt or need additional help, feel free to contact us anytime in our Gitter Chatroom!DocumentationJava is heavily documented, as it supports huge amounts of API\u2019s. If you are using any major IDE such as Eclipse or IntelliJ IDEA, you would find the Java Documentation included within.Also, here is a list of free IDEs for Java coding:NetBeansEclipseIntelliJ IDEAAndroid StudioBlueJjEditOracle JDeveloper\n\n                        \n                    \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 6337, "excerpt": "Java [https://www.oracle.com/java/index.html] is a programming language\ndeveloped by Sun Microsystems [https://en.wikipedia.org/wiki/Sun_Microsystems] \nin 1995, which got later acquired by Oracle [http://www.oracle.com/index.html].\nIt\u2019s now a full platform with lots of standard APIs, open source APIs, tools,\nhuge developer community and is used to build the most trusted enterprise\nsolutions by big and small companies alike. Android [https://www.android.com/] \napplication development is done full", "siteName": "freeCodeCamp.org", "publishedTime": "2019-12-07T21:47:00.000Z", "id": "cb91c634195f2b23e248af1ca0cc938b86764452", "url": "https://www.freecodecamp.org/news/java-programming-language-basics/", "domain": "freecodecamp.org", "date": "2023-12-27T18:07:42.241721", "resultUri": "http://localhost:3000/result/cb91c634195f2b23e248af1ca0cc938b86764452", "query": {"url": ["https://www.freecodecamp.org/news/java-programming-language-basics/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "Java Programming Language Basics", "description": "Java [https://www.oracle.com/java/index.html] is a programming language developed by Sun Microsystems [https://en.wikipedia.org/wiki/Sun_Microsystems]  in 1995, which got later acquired by Oracle [http://www.oracle.com/index.html]. It\u2019s now a full platform with lots of standard APIs, open source APIs, tools, huge developer community and is used to build the most trusted enterprise solutions by big", "url": "https://www.freecodecamp.org/news/java-programming-language-basics/", "image": "https://cdn-media-2.freecodecamp.org/w1280/5f9c9ed2740569d1a4ca3f5d.jpg", "image:width": "1280", "image:height": "720"}, "twitter": {"card": "summary_large_image", "title": "Java Programming Language Basics", "description": "Java [https://www.oracle.com/java/index.html] is a programming language developed by Sun Microsystems [https://en.wikipedia.org/wiki/Sun_Microsystems]  in 1995, which got later acquired by Oracle [http://www.oracle.com/index.html]. It\u2019s now a full platform with lots of standard APIs, open source APIs, tools, huge developer community and is used to build the most trusted enterprise solutions by big", "url": "https://www.freecodecamp.org/news/java-programming-language-basics/", "image": "https://cdn-media-2.freecodecamp.org/w1280/5f9c9ed2740569d1a4ca3f5d.jpg", "label1": "Written by", "data1": "freeCodeCamp.org", "label2": "Filed under", "data2": "Java, Programming", "site": "@freecodecamp"}}}