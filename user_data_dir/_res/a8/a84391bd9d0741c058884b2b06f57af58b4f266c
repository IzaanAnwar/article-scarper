{"title": "5 Mistakes Beginner Web Developers Make \u2013 And How to Fix Them", "byline": "Dave Gray", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>5 Mistakes Beginner Web Developers Make \u2013 And How to Fix Them</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>This list is made up of the most common mistakes I've witnessed during nearly a decade of teaching beginning web development students.</p><p>My idea for writing this article is not to make fun of beginner mistakes or embarrass anyone who is beginner.</p><p>Rather, my goal is to educate beginners and hopefully save them from some of these common mistakes.</p><h2 id=\"we-were-all-beginners\">We Were All Beginners</h2><p>If you aren't a beginner, you may think the mistakes listed below are obvious... but remember, obviousness is relative to experience.</p><p>Once upon a time, those of us with experience struggled with some of these mistakes, too.</p><p>If you are a beginner, I hope this list saves you some time and anxiety in the near future.</p><p>Let the countdown begin!</p><h2 id=\"mistake-5-adding-spaces-in-file-names\">Mistake #5: Adding Spaces in File Names</h2><p>You may save your HTML file with the name \"my cool page.html\", but those spaces between words are a mistake.</p><p>Web addresses (aka URLs) cannot have spaces.</p><p>If you load this file into your browser, you are going to see \"my%20cool%20page.html\" in the browser address bar. Spaces must be encoded because they are not allowed in URLs.</p><p>If you want to see separation between the words in your file names, use an underscore (my_cool_page.html) or a hyphen (my-cool-page.html).</p><p>As a beginner, you probably aren't too worried about search engine optimization (SEO), but <a href=\"https://developers.google.com/search/docs/advanced/guidelines/url-structure\">Google has noted they prefer hyphens</a> in file names over underscores.</p><h2 id=\"mistake-4-ignoring-case-sensitivity\">Mistake #4: Ignoring cAsE sEnSiTiViTy</h2><p>If you are using Windows for your development environment, you might not notice a problem when you inconsistently use lowercase and capital letters. This is a mistake.</p><p>Let's say you created a CSS folder named \"Css\" and a file within it named \"Main.css\". But in your code, you link to it like this:</p><pre><code>&lt;link rel=\"stylesheet\" href=\"css/main.css\"&gt;\n</code></pre><p>While you're working on your project, there is no problem.</p><p>But when you load your project to a web server...<strong>Boom!</strong> No CSS is applied.</p><p>Many web servers have some version of Linux or Unix running instead of Windows. You may have heard of the LAMP stack. Linux is the L in LAMP.</p><p>These systems are case sensitive.</p><p>Therefore, it is best to use lowercase file names and directory names all the time unless there is a specific naming convention that uses a capital letter. At that point, the file names will still always be consistent. And consistency is what will prevent this mistake.</p><h2 id=\"mistake-3-not-understanding-file-paths\">Mistake #3: Not Understanding File Paths</h2><p>Students that do not understand how to link files within different directories often dump all their files in the root directory in order to access them. This is a mistake that leads to an unorganized file tree.</p><p>Not long after you start learning HTML, you start learning how to link to other HTML and CSS files.</p><p>This is fairly straightforward when the files are in the same directory. Even in the example above, we just looked inside the CSS directory for the main.css file.</p><p>It starts to get more complicated when we need to go up a directory instead of (or before) going down into one.</p><p>In the example below, we are setting the background-image for a web page in our main.css file. The main.css file is in the CSS directory. We are linking to an image in the img directory.</p><pre><code>body {\n     background-image: url(\"../img/moon.png\");\n}\n</code></pre><p>Both of these directories (aka folders) are in the root directory. Therefore, we need to go up and out of the CSS directory and then down into the img directory.</p><p>We go up one directory with two dots: \"..\"</p><p>From there, we go down into the img directory to link to the moon.png file.</p><p>If we needed to go up two directories, the file path would start like this: \"../../\"</p><p>Remember, one dot indicates the directory you are in. Two dots indicates the directory above where you currently are.</p><h2 id=\"mistake-2-not-naming-your-default-page-index\">Mistake #2: Not Naming Your Default Page Index</h2><p>Naming your default page something other than \"index\" is a mistake.</p><p>Web servers look for an index file.</p><p>When you're working with HTML, you should have an index.html file.</p><p>This file will load by default without showing the file name at the end of the URL.</p><p>That's why you can go to your favorite dot com or other web address and not see \"/index.html\" after their \".com\". The index file loads by default.</p><p>Granted, your favorite website may use more than just HTML, but this concept carries over to other technologies like PHP (index.php), React (index.js), and more.</p><p>As you continue to learn, you will find some developers choose other file names when utilizing other technologies, but as a beginner, stick with index.</p><h2 id=\"mistake-1-not-taking-a-break-\">Mistake #1: Not Taking A Break!</h2><p>I receive emails when students are frustrated.</p><p>They have poured over their project for hours and cannot find the error.</p><p>Often, the problem is a misspelled tag or variable, a missing semi-colon, or other small syntax error.</p><p><em>This happens to us all.</em></p><p>After staring at code for an extended time period, our vision blurs, our brains fizzle, and what would have been easy to see with fresh eyes becomes impossible.</p><p>Don't feel bad. Don't blame yourself. Just get up!</p><p>Take a walk. Get some coffee. Take a nap. Whatever snaps you out of the haziness and gives you fresh eyes and a clear head again.</p><p>Really, this mistake isn't just for beginners. It can happen to anyone.</p><p>I must remind myself to take breaks, too.</p><p>Come back to the code when you are refreshed and that error you couldn't find will often be obvious!</p><h2 id=\"conclusion\">Conclusion</h2><p>As you gain experience, you will quickly move past these common mistakes.</p><p>What was once difficult to understand will become clear.</p><p>If these common mistakes were obvious to you, congrats! You've already got some experience.</p><p>If you're just starting out, I hope this review of common beginner mistakes saves you both time and frustration in the near future.</p><p>I'll leave you with a video from my YouTube Channel that counts down the Top 10 Biggest Beginner Mistakes. Watch to see examples of the 5 mistakes I discussed in this article plus 5 additional common beginner mistakes:</p><figure data-test-label=\"fitted\">\n\n</figure>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nThis list is made up of the most common mistakes I've witnessed during nearly a decade of teaching beginning web development students.My idea for writing this article is not to make fun of beginner mistakes or embarrass anyone who is beginner.Rather, my goal is to educate beginners and hopefully save them from some of these common mistakes.We Were All BeginnersIf you aren't a beginner, you may think the mistakes listed below are obvious... but remember, obviousness is relative to experience.Once upon a time, those of us with experience struggled with some of these mistakes, too.If you are a beginner, I hope this list saves you some time and anxiety in the near future.Let the countdown begin!Mistake #5: Adding Spaces in File NamesYou may save your HTML file with the name \"my cool page.html\", but those spaces between words are a mistake.Web addresses (aka URLs) cannot have spaces.If you load this file into your browser, you are going to see \"my%20cool%20page.html\" in the browser address bar. Spaces must be encoded because they are not allowed in URLs.If you want to see separation between the words in your file names, use an underscore (my_cool_page.html) or a hyphen (my-cool-page.html).As a beginner, you probably aren't too worried about search engine optimization (SEO), but Google has noted they prefer hyphens in file names over underscores.Mistake #4: Ignoring cAsE sEnSiTiViTyIf you are using Windows for your development environment, you might not notice a problem when you inconsistently use lowercase and capital letters. This is a mistake.Let's say you created a CSS folder named \"Css\" and a file within it named \"Main.css\". But in your code, you link to it like this:<link rel=\"stylesheet\" href=\"css/main.css\">\nWhile you're working on your project, there is no problem.But when you load your project to a web server...Boom! No CSS is applied.Many web servers have some version of Linux or Unix running instead of Windows. You may have heard of the LAMP stack. Linux is the L in LAMP.These systems are case sensitive.Therefore, it is best to use lowercase file names and directory names all the time unless there is a specific naming convention that uses a capital letter. At that point, the file names will still always be consistent. And consistency is what will prevent this mistake.Mistake #3: Not Understanding File PathsStudents that do not understand how to link files within different directories often dump all their files in the root directory in order to access them. This is a mistake that leads to an unorganized file tree.Not long after you start learning HTML, you start learning how to link to other HTML and CSS files.This is fairly straightforward when the files are in the same directory. Even in the example above, we just looked inside the CSS directory for the main.css file.It starts to get more complicated when we need to go up a directory instead of (or before) going down into one.In the example below, we are setting the background-image for a web page in our main.css file. The main.css file is in the CSS directory. We are linking to an image in the img directory.body {\n     background-image: url(\"../img/moon.png\");\n}\nBoth of these directories (aka folders) are in the root directory. Therefore, we need to go up and out of the CSS directory and then down into the img directory.We go up one directory with two dots: \"..\"From there, we go down into the img directory to link to the moon.png file.If we needed to go up two directories, the file path would start like this: \"../../\"Remember, one dot indicates the directory you are in. Two dots indicates the directory above where you currently are.Mistake #2: Not Naming Your Default Page IndexNaming your default page something other than \"index\" is a mistake.Web servers look for an index file.When you're working with HTML, you should have an index.html file.This file will load by default without showing the file name at the end of the URL.That's why you can go to your favorite dot com or other web address and not see \"/index.html\" after their \".com\". The index file loads by default.Granted, your favorite website may use more than just HTML, but this concept carries over to other technologies like PHP (index.php), React (index.js), and more.As you continue to learn, you will find some developers choose other file names when utilizing other technologies, but as a beginner, stick with index.Mistake #1: Not Taking A Break!I receive emails when students are frustrated.They have poured over their project for hours and cannot find the error.Often, the problem is a misspelled tag or variable, a missing semi-colon, or other small syntax error.This happens to us all.After staring at code for an extended time period, our vision blurs, our brains fizzle, and what would have been easy to see with fresh eyes becomes impossible.Don't feel bad. Don't blame yourself. Just get up!Take a walk. Get some coffee. Take a nap. Whatever snaps you out of the haziness and gives you fresh eyes and a clear head again.Really, this mistake isn't just for beginners. It can happen to anyone.I must remind myself to take breaks, too.Come back to the code when you are refreshed and that error you couldn't find will often be obvious!ConclusionAs you gain experience, you will quickly move past these common mistakes.What was once difficult to understand will become clear.If these common mistakes were obvious to you, congrats! You've already got some experience.If you're just starting out, I hope this review of common beginner mistakes saves you both time and frustration in the near future.I'll leave you with a video from my YouTube Channel that counts down the Top 10 Biggest Beginner Mistakes. Watch to see examples of the 5 mistakes I discussed in this article plus 5 additional common beginner mistakes:\n        \n          \n            \n          \n        \n      \n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 6563, "excerpt": "This list is made up of the most common mistakes I've witnessed during nearly a\ndecade of teaching beginning web development students.\n\nMy idea for writing this article is not to make fun of beginner mistakes or\nembarrass anyone who is beginner.\n\nRather, my goal is to educate beginners and hopefully save them from some of\nthese common mistakes.\n\nWe Were All Beginners\nIf you aren't a beginner, you may think the mistakes listed below are obvious...\nbut remember, obviousness is relative to experien", "siteName": "freeCodeCamp.org", "publishedTime": "2021-04-05T16:48:42.000Z", "id": "a84391bd9d0741c058884b2b06f57af58b4f266c", "url": "https://www.freecodecamp.org/news/common-mistakes-beginning-web-development-students-make/", "domain": "freecodecamp.org", "date": "2023-12-27T18:06:02.769538", "resultUri": "http://localhost:3000/result/a84391bd9d0741c058884b2b06f57af58b4f266c", "query": {"url": ["https://www.freecodecamp.org/news/common-mistakes-beginning-web-development-students-make/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "5 Mistakes Beginner Web Developers Make \u2013 And How to Fix Them", "description": "This list is made up of the most common mistakes I've witnessed during nearly a decade of teaching beginning web development students. My idea for writing this article is not to make fun of beginner mistakes or embarrass anyone who is beginner. Rather, my goal is to educate beginners and", "url": "https://www.freecodecamp.org/news/common-mistakes-beginning-web-development-students-make/", "image": "https://www.freecodecamp.org/news/content/images/2021/04/varvara-grabova-NCSARCecw4U-unsplash-1.jpg", "image:width": "2000", "image:height": "1345"}, "twitter": {"card": "summary_large_image", "title": "5 Mistakes Beginner Web Developers Make \u2013 And How to Fix Them", "description": "This list is made up of the most common mistakes I've witnessed during nearly a decade of teaching beginning web development students. My idea for writing this article is not to make fun of beginner mistakes or embarrass anyone who is beginner. Rather, my goal is to educate beginners and", "url": "https://www.freecodecamp.org/news/common-mistakes-beginning-web-development-students-make/", "image": "https://www.freecodecamp.org/news/content/images/2021/04/varvara-grabova-NCSARCecw4U-unsplash-1.jpg", "label1": "Written by", "data1": "Dave Gray", "label2": "Filed under", "data2": "Web Development, Self Improvement, Beginners Guide, Lessons Learned, Programming, Coding", "site": "@freecodecamp", "creator": "@yesdavidgray"}}}