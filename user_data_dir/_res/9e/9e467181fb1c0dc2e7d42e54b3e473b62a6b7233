{"title": "Developer Checklist: What should you not miss from WWDC 2019?", "byline": "Boudhayan Biswas", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>Developer Checklist: What should you not miss from WWDC 2019?</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>So it\u2019s almost near about one month already since WWDC 2019 happened this year. All the developers are still busy what are new things Apple has added or updated for development. There were some big announcements and small announcements, but we, the developers need to make sure that we won\u2019t miss anything important. So I am just creating a quick checklist of the items what we should not miss. Let\u2019s make it short, concise and simple.</p><h3 id=\"ios-\">iOS:</h3><ol><li>iOS 13 will let you limit application location access to just once. Until now, there were three options\u200a\u2014\u200a\u201cAlways\u201d, \u201cWhile Using\u201d or \u201cNever\u201d. One more option has been added to this list \u201cJust Once\u201d. For the first time, you can share your location to an app\u200a\u2014\u200ajust once\u200a\u2014\u200aand then require it to ask you again next time it wants.</li><li>Might be one of the popular announcements and people are going crazy about this. Yes, I am talking about \u201cApple Sign-in\u201d. So it is a requirement from Apple that app developers must implement the company\u2019s new single sign-in solution if the app already offers another third party sign in.</li><li>You can dismiss modal view controllers interactively which may break some of the existing applications. On iOS 13, by default, the user can just swipe the modal down to dismiss it. So when you are developing a new application make sure to take this into consideration. You can disable this behaviour by <code><em>isModalRepresentation = false</em></code>.</li><li><code>UISegmentedControl</code> and <code>UIStepper</code> are different in iOS 13 with a whole new updated design.</li><li>A new update to <code>Localization</code> in iOS 13. From now, the user can set a different language to each of the application installed in your device. Developers have nothing to change or consider regarding the development, <code>Settings</code> application will take care on behalf of you.</li><li>iOS 13 has almost 1500 different system icons and <code>UIImage</code> got a new initializer <code>UIImage(systemName: )</code> with this you can now initialize any of the system icons.</li><li>Until now when you download something in Safari that directly goes into <code>downloads</code> folder, but this year Safari got an update and you can change the default download folder to any other folder you want, even you can choose USB drive also.</li><li>Improvements to <code>UIStoryboardSegue</code>. Apple has introduced a new <code>IBSegueAction</code> modifier. Now you can pass additional context and parameters directly to the destination view controller that should be initialized.</li><li>Your apps can provide reservation information to Siri with context and at specific times so the user can take relevant actions based on the circumstances. For example, they can confirm a hotel reservation, be reminded to check in for a flight and get help returning a rental car.</li><li>With Core NFC framework, your apps can now support tag writing, including writing to NDEF formatted tags. The framework also provides support for reading and writing tags using native protocols such as ISO 7816, MIFARE, ISO 15693, and FeliCa.</li><li>Synch your Core Data store with CloudKit, giving users of your app seamless access to their data across all their devices. Core Data with CloudKit combines the benefits of local persistence with cloud backup and distribution.</li><li>Metal gives the GPU even greater control of the graphics and compute pipeline, adds features that make it easier to perform advanced GPU processing, and simplifies the work you need to do to support different kinds of GPUs. New tools, including Metal support in Simulator, help you get started faster and understand whether your iOS app is using Metal correctly.</li><li>With the new VisionKit framework, your app can let users scan documents using the device\u2019s camera, like those you capture in the Notes app. Combine this feature with Vision\u2019s text recognition to extract text from scanned documents.</li><li>Core ML 3 now supports on-device model personalization, allowing you to update a model by retraining or fine-tuning it with user-specific data privately from within your app. Core ML has also greatly expanded its support for dynamic neural networks with over 100 layer types.</li><li>The new PencilKit framework makes it easy to incorporate hand-drawn content into your app quickly and easily. PencilKit provides a drawing environment for your iOS app that takes input from Apple Pencil, or the user\u2019s finger, and turns it into high-quality images you display in either iOS or macOS. The environment comes with tools for creating, erasing, and selecting lines.</li><li>MetricKit is a new framework that gives you on-device power and performance metrics about your app captured by the system, which you can use to improve the performance of your app.</li><li>The new Core Haptics framework that lets you compose and play haptic patterns to customize your app\u2019s haptic feedback.</li><li>Use the new Apple CryptoKit framework to perform common cryptographic operations securely and efficiently, such as Computing and comparing cryptographically secure digests, Using public-key cryptography to create and evaluate digital signatures, Generating symmetric keys, and using them in other operations like message authentication and encryption.</li><li>Combine is a new framework that provides a declarative Swift API for processing values over time. These values can represent user interface events, network responses, scheduled events, and many other kinds of asynchronous data. With Combine, you declare publishers that expose values that can change and subscribers that receive those values from the publishers. Combine makes your code easier to read and maintain, by centralizing your event-processing code and eliminating troublesome techniques like nested closures and convention-based callbacks.</li><li>Keep your app content up-to-date and perform long-running tasks while your app is in the background using the new BackgroundTasks framework.</li><li>RealityKit is a new Swift framework to simulate and render 3D content for use in your augmented reality apps including the ability to add animation, physics, and spatial audio to your AR experience. RealityKit leverages information provided by ARKit to seamlessly integrate virtual objects into the real world.</li><li>Symbol images give you a consistent set of icons to use in your app, and ensure that those icons adapt to different sizes and to app-specific content. Symbol images use the SVG format to implement vector-based shapes that scale without losing their sharpness. They also support many traits typically associated with the text, such as weight and baseline alignment.</li><li>With iOS 13, the user can create and manage multiple instances of your app\u2019s user interface simultaneously and switch between them using the app switcher. On iPad, the user can also display multiple instances of your app side by side. Each instance of your UI displays different content or displays content in a different way. For example, the Calendar app can display the appointments for a specific day and for an entire month side by side.</li><li>SwiftUI is a modern approach to building user interfaces for iOS, macOS, watchOS, and tvOS. You can build dynamic interfaces faster than ever before, using declarative, composition-based programming. The framework provides views, controls, and layout structures for declaring your app\u2019s user interface. It also provides event handlers for delivering taps, gestures, and other types of input to your app, and tools to manage the flow of data from your app\u2019s models down to the views and controls that users will see and interact with.</li><li>When the Voice Control Accessibility feature is turned on, there\u2019s a blue microphone icon at the top of the device to indicate that the iOS device is in Voice Control mode. The dimmed icon when the phone doesn\u2019t have your attention.</li><li>One of the new features in iOS 13 is an option in the Files app to connect to the server using SMB. This feature wasn\u2019t working in the first beta but is functional in beta 2, so iOS 13 users can do things like connecting to a home NAS.</li><li>When sharing a webpage from the Safari Share Sheet, there are new options to share it as a PDF or a Web Archive. There\u2019s also an \u201cAutomatic\u201d option that picks the most suitable format for each app or action.</li><li>No more spam callers. iOS 13 now supports strictly silencing unknown callers.</li><li>In iOS 13, we got a new method on <code>UIImageAsset</code> named <code>registerImage:withTraitCollection</code> that can be used to create dynamic images for light and dark programmatically.</li><li>Running on Low Mobile data? A new \u201cLow Data\u201d mode has been added to avoid running out of data when you\u2019re on a roaming plan.</li><li>When we do not have wifi then sometimes we face difficulty in downloading apps which are bigger in size. But after iOS 13, we can see a ray of light there. Now the limit has increased to 200 MB, still not enough? Then you can remove the restriction in Settings.</li><li>Share photo to others with original information in it. iOS 13 is giving you an option to add that original information when sharing.</li><li>Be happy to mute your iPhone. Apple has introduced a new completely redesigned mute indicator to match Apple pencil charging indicator.</li><li>Now you can initialize UIViewController subclasses with additional context and arguments (required for dependency injection).</li><li>If you are not a delegate fan then there are some good news for you. iOS 13 has updated some delegate based APIs to block based API.</li><li>You do not need to long press on any app and tap on the cross icon to delete. Now you can simply remove an app from AppStore update page by a left swipe.</li><li>Until now screenshot was taken only in image format. iOS 13 allows you to take a screenshot in pdf format also.</li><li>iOS 13 has a new <code>_visualRecursiveDescription</code> private API that can construct a visual representation of a view hierarchy. Very useful command for debugging in LLDB.</li><li>A new <code>UICollectionViewCompositionalLayout</code> class has been added to UIKit to make it easier to create compositional layouts without requiring a custom <code>UICollectionViewLayout</code>.</li><li>The <code>UITableViewStyle</code> enum gained a new public <code>UITableViewStyleInsetGrouped</code> case that can be used to create grouped style table views.</li><li>iOS apps using the File Management APIs can now be granted read/write access to an entire folder, rather than just a file.</li><li>Tired of swiping in scroll view? In iOS 13, you can drag the scroll indicator to go through a long document.</li><li>Apps intended for kids cannot include third-party advertising or analytics software and may not transmit data to third parties.</li><li>MDM provides access to sensitive data, MDM apps must request the mobile device management capability, and may only be offered by commercial enterprises, such as business organizations, educational institutions, or government agencies, and, in limited cases, companies utilizing MDM for parental controls. MDM apps may not sell, use, or disclose to third parties any data for any purpose, and must commit to this in their privacy policy. (referring to apps that abused MDM for Screen Time-like features).</li></ol><p>Yeah, it\u2019s quite a long list fully filled with new features. Developers can use all of them to make their application better and smoother. Now let\u2019s take a look at the new frameworks that are coming with iOS 13-</p><h3 id=\"frameworks-\">Frameworks:</h3><ol><li><strong><strong>BackgroundTasks</strong></strong>: Use the BackgroundTasks framework to keep your app content up to date and run tasks requiring minutes to complete while your app is in the background. Longer tasks can optionally require a powered device and network connectivity. Register launch handlers for tasks when the app launches and schedule them as required. The system will launch your app in the background and execute the tasks.</li><li><strong><strong>Combine: </strong></strong>The Combine framework provides a declarative Swift API for processing values over time. These values can represent user interface events, network responses, scheduled events, and many other kinds of asynchronous data. Combine declares <em>publishers</em> to expose values that can change over time, and <em>subscribers</em> to receive those values from the publishers.</li><li><strong><strong>CoreAudioTypes: </strong></strong>The CoreAudioTypes framework declares common data types and constants used by other Core Audio interfaces. This framework also includes a handful of convenience functions.</li><li><strong><strong>Core Haptics: </strong></strong>Core Haptics lets you add customized haptic and audio feedback to your app. Use haptics to engage users physically, with tactile and audio feedback that gets attention and reinforces actions. Some system-provided interface elements\u200a\u2014\u200alike pickers, switches, and sliders\u200a\u2014\u200aautomatically provide haptic feedback as users interact with them. With Core Haptics, you extend this functionality by composing and combining haptics beyond the default patterns.</li><li><strong><strong>QuickLookThumbnailing</strong></strong>: You may want to create a miniature representation, or <em>thumbnail</em>, of a file and its contents to display within your app, or to provide a thumbnail to the operating system. For example, macOS shows thumbnails as part of the Finder app and its Quick Look feature. The QuickLookThumbnailing framework provides an API to generate thumbnails for common file types using the <code>QLThumbnailGenerator</code> object.</li><li><strong><strong>PencilKit</strong></strong>: PencilKit makes it easy to incorporate hand-drawn content into your iOS or macOS apps quickly and easily. PencilKit provides a drawing environment for your iOS app that takes input from Apple Pencil, or the user\u2019s finger, and turns it into high-quality images you display in either iOS or macOS. The environment comes with tools for creating, erasing, and selecting lines.</li><li><strong><strong>RealityKit</strong></strong>: Use the RealityKit framework to implement high-performance 3D simulation and rendering. RealityKit leverages information provided by the ARKit framework to seamlessly integrate virtual objects into the real world.</li><li><strong><strong>VisionKit</strong></strong>: VisionKit is a small framework that lets your app use the system\u2019s document scanner. Present the document camera as a view controller, which covers the entire screen like the camera function in Notes.</li><li><strong><strong>SoundAnalysis</strong></strong>: Use the SoundAnalysis framework to analyze audio and recognize it as a particular type, such as laughter or applause. The framework performs its analysis using a Core ML model trained by an <code>MLSoundClassifier</code>. Using the framework\u2019s ability to analyze streamed or file-based audio lets you add intelligent audio recognition capabilities to your app.</li><li><strong><strong>CryptoKit</strong></strong>: Use Apple CryptoKit to perform common cryptographic operations: Compute and compare cryptographically secure digests. Use public-key cryptography to create and evaluate digital signatures, and to perform the key exchange. In addition to working with keys stored in memory, you can also use private keys stored in and managed by the Secure Enclave. Generate symmetric keys, and use them in operations like message authentication and encryption. Prefer CryptoKit over lower-level interfaces. CryptoKit frees your app from managing raw pointers, and automatically handles tasks that make your app more secure, like overwriting sensitive data during memory deallocation.</li><li><strong><strong>Maps Web Snapshots</strong></strong>: The Maps Web Snapshots service can be used to generate static map images from a URL. You can use Snapshots any time that an interactive map is not required, and in any place, you typically use an image URL\u200a\u2014\u200ain web pages, and in places where JavaScript is not available, such as email clients.</li><li><strong><strong>DriverKit</strong></strong>: Use DriverKit to create device drivers that the user installs on their Mac. Drivers built with DriverKit run in userspace, rather than as kernel extensions, for improved system security and stability.</li><li><strong><strong>MetricKit</strong></strong>: With MetricKit, you can receive on-device app power and performance metrics captured by the system. A registered app receives reports containing data about the previous 24 hours at most once per day. Use the data in the reports to help improve the performance of your app.</li><li><strong><strong>SystemExtensions</strong></strong>: Creating system extensions allow your app to enhance the capabilities of the user\u2019s Mac, without the associated risks of developing kernel extensions (KEXTs). System extensions run in userspace, where they can\u2019t compromise the security or stability of macOS. The system grants these extensions a high level of privilege, so they can perform the kinds of tasks previously reserved to KEXTs.</li><li><strong><strong>EndpointSecurity</strong></strong>: Use the Endpoint Security library to create security-related software. Endpoint Security clients monitor system events for potentially malicious activity. Your client registers with Endpoint Security to authorize pending events, or receive notifications of events that have already occurred. These events include process executions, mounting file systems, forking processes, and raising signals.</li><li><strong><strong>USBSerialDriverKit</strong></strong>: The USBSerialDriverKit framework provides an API for developing serial communication drivers for USB devices like modems and serial adapters. The framework builds on DriverKit by adding the ability to set attributes like baud rate and parity and work with a device\u2019s universal asynchronous receiver/transmitter (UART).</li><li><strong><strong>USBDriverKit</strong></strong>: Use the USBDriverKit framework to develop drivers for custom or non-class compliant USB devices for use with macOS. USBDriverKit provides C++ classes you can use to attach and configure your device and create USB message and stream pipes to exchange data. USBDriverKit devices work with the core types defined in the DriverKit framework.</li><li><strong><strong>HIDDriverKit</strong></strong>: The HIDDriverKit framework provides C++ classes for developing drivers for human interface devices: keyboards, pointing devices, and digitizers like pens and touchpads. HIDDriverKit uses the core types defined in DriverKit, and adds features specific to human interface device development.</li></ol><p>That\u2019s all for today. Happy coding!!</p><p><strong><strong><em>???Thank you for reading???</em></strong></strong></p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nSo it\u2019s almost near about one month already since WWDC 2019 happened this year. All the developers are still busy what are new things Apple has added or updated for development. There were some big announcements and small announcements, but we, the developers need to make sure that we won\u2019t miss anything important. So I am just creating a quick checklist of the items what we should not miss. Let\u2019s make it short, concise and simple.iOS:iOS 13 will let you limit application location access to just once. Until now, there were three options\u200a\u2014\u200a\u201cAlways\u201d, \u201cWhile Using\u201d or \u201cNever\u201d. One more option has been added to this list \u201cJust Once\u201d. For the first time, you can share your location to an app\u200a\u2014\u200ajust once\u200a\u2014\u200aand then require it to ask you again next time it wants.Might be one of the popular announcements and people are going crazy about this. Yes, I am talking about \u201cApple Sign-in\u201d. So it is a requirement from Apple that app developers must implement the company\u2019s new single sign-in solution if the app already offers another third party sign in.You can dismiss modal view controllers interactively which may break some of the existing applications. On iOS 13, by default, the user can just swipe the modal down to dismiss it. So when you are developing a new application make sure to take this into consideration. You can disable this behaviour by isModalRepresentation = false.UISegmentedControl and UIStepper are different in iOS 13 with a whole new updated design.A new update to Localization in iOS 13. From now, the user can set a different language to each of the application installed in your device. Developers have nothing to change or consider regarding the development, Settings application will take care on behalf of you.iOS 13 has almost 1500 different system icons and UIImage got a new initializer UIImage(systemName: ) with this you can now initialize any of the system icons.Until now when you download something in Safari that directly goes into downloads folder, but this year Safari got an update and you can change the default download folder to any other folder you want, even you can choose USB drive also.Improvements to UIStoryboardSegue. Apple has introduced a new IBSegueAction modifier. Now you can pass additional context and parameters directly to the destination view controller that should be initialized.Your apps can provide reservation information to Siri with context and at specific times so the user can take relevant actions based on the circumstances. For example, they can confirm a hotel reservation, be reminded to check in for a flight and get help returning a rental car.With Core NFC framework, your apps can now support tag writing, including writing to NDEF formatted tags. The framework also provides support for reading and writing tags using native protocols such as ISO 7816, MIFARE, ISO 15693, and FeliCa.Synch your Core Data store with CloudKit, giving users of your app seamless access to their data across all their devices. Core Data with CloudKit combines the benefits of local persistence with cloud backup and distribution.Metal gives the GPU even greater control of the graphics and compute pipeline, adds features that make it easier to perform advanced GPU processing, and simplifies the work you need to do to support different kinds of GPUs. New tools, including Metal support in Simulator, help you get started faster and understand whether your iOS app is using Metal correctly.With the new VisionKit framework, your app can let users scan documents using the device\u2019s camera, like those you capture in the Notes app. Combine this feature with Vision\u2019s text recognition to extract text from scanned documents.Core ML 3 now supports on-device model personalization, allowing you to update a model by retraining or fine-tuning it with user-specific data privately from within your app. Core ML has also greatly expanded its support for dynamic neural networks with over 100 layer types.The new PencilKit framework makes it easy to incorporate hand-drawn content into your app quickly and easily. PencilKit provides a drawing environment for your iOS app that takes input from Apple Pencil, or the user\u2019s finger, and turns it into high-quality images you display in either iOS or macOS. The environment comes with tools for creating, erasing, and selecting lines.MetricKit is a new framework that gives you on-device power and performance metrics about your app captured by the system, which you can use to improve the performance of your app.The new Core Haptics framework that lets you compose and play haptic patterns to customize your app\u2019s haptic feedback.Use the new Apple CryptoKit framework to perform common cryptographic operations securely and efficiently, such as Computing and comparing cryptographically secure digests, Using public-key cryptography to create and evaluate digital signatures, Generating symmetric keys, and using them in other operations like message authentication and encryption.Combine is a new framework that provides a declarative Swift API for processing values over time. These values can represent user interface events, network responses, scheduled events, and many other kinds of asynchronous data. With Combine, you declare publishers that expose values that can change and subscribers that receive those values from the publishers. Combine makes your code easier to read and maintain, by centralizing your event-processing code and eliminating troublesome techniques like nested closures and convention-based callbacks.Keep your app content up-to-date and perform long-running tasks while your app is in the background using the new BackgroundTasks framework.RealityKit is a new Swift framework to simulate and render 3D content for use in your augmented reality apps including the ability to add animation, physics, and spatial audio to your AR experience. RealityKit leverages information provided by ARKit to seamlessly integrate virtual objects into the real world.Symbol images give you a consistent set of icons to use in your app, and ensure that those icons adapt to different sizes and to app-specific content. Symbol images use the SVG format to implement vector-based shapes that scale without losing their sharpness. They also support many traits typically associated with the text, such as weight and baseline alignment.With iOS 13, the user can create and manage multiple instances of your app\u2019s user interface simultaneously and switch between them using the app switcher. On iPad, the user can also display multiple instances of your app side by side. Each instance of your UI displays different content or displays content in a different way. For example, the Calendar app can display the appointments for a specific day and for an entire month side by side.SwiftUI is a modern approach to building user interfaces for iOS, macOS, watchOS, and tvOS. You can build dynamic interfaces faster than ever before, using declarative, composition-based programming. The framework provides views, controls, and layout structures for declaring your app\u2019s user interface. It also provides event handlers for delivering taps, gestures, and other types of input to your app, and tools to manage the flow of data from your app\u2019s models down to the views and controls that users will see and interact with.When the Voice Control Accessibility feature is turned on, there\u2019s a blue microphone icon at the top of the device to indicate that the iOS device is in Voice Control mode. The dimmed icon when the phone doesn\u2019t have your attention.One of the new features in iOS 13 is an option in the Files app to connect to the server using SMB. This feature wasn\u2019t working in the first beta but is functional in beta 2, so iOS 13 users can do things like connecting to a home NAS.When sharing a webpage from the Safari Share Sheet, there are new options to share it as a PDF or a Web Archive. There\u2019s also an \u201cAutomatic\u201d option that picks the most suitable format for each app or action.No more spam callers. iOS 13 now supports strictly silencing unknown callers.In iOS 13, we got a new method on UIImageAsset named registerImage:withTraitCollection that can be used to create dynamic images for light and dark programmatically.Running on Low Mobile data? A new \u201cLow Data\u201d mode has been added to avoid running out of data when you\u2019re on a roaming plan.When we do not have wifi then sometimes we face difficulty in downloading apps which are bigger in size. But after iOS 13, we can see a ray of light there. Now the limit has increased to 200 MB, still not enough? Then you can remove the restriction in Settings.Share photo to others with original information in it. iOS 13 is giving you an option to add that original information when sharing.Be happy to mute your iPhone. Apple has introduced a new completely redesigned mute indicator to match Apple pencil charging indicator.Now you can initialize UIViewController subclasses with additional context and arguments (required for dependency injection).If you are not a delegate fan then there are some good news for you. iOS 13 has updated some delegate based APIs to block based API.You do not need to long press on any app and tap on the cross icon to delete. Now you can simply remove an app from AppStore update page by a left swipe.Until now screenshot was taken only in image format. iOS 13 allows you to take a screenshot in pdf format also.iOS 13 has a new _visualRecursiveDescription private API that can construct a visual representation of a view hierarchy. Very useful command for debugging in LLDB.A new UICollectionViewCompositionalLayout class has been added to UIKit to make it easier to create compositional layouts without requiring a custom UICollectionViewLayout.The UITableViewStyle enum gained a new public UITableViewStyleInsetGrouped case that can be used to create grouped style table views.iOS apps using the File Management APIs can now be granted read/write access to an entire folder, rather than just a file.Tired of swiping in scroll view? In iOS 13, you can drag the scroll indicator to go through a long document.Apps intended for kids cannot include third-party advertising or analytics software and may not transmit data to third parties.MDM provides access to sensitive data, MDM apps must request the mobile device management capability, and may only be offered by commercial enterprises, such as business organizations, educational institutions, or government agencies, and, in limited cases, companies utilizing MDM for parental controls. MDM apps may not sell, use, or disclose to third parties any data for any purpose, and must commit to this in their privacy policy. (referring to apps that abused MDM for Screen Time-like features).Yeah, it\u2019s quite a long list fully filled with new features. Developers can use all of them to make their application better and smoother. Now let\u2019s take a look at the new frameworks that are coming with iOS 13-Frameworks:BackgroundTasks: Use the BackgroundTasks framework to keep your app content up to date and run tasks requiring minutes to complete while your app is in the background. Longer tasks can optionally require a powered device and network connectivity. Register launch handlers for tasks when the app launches and schedule them as required. The system will launch your app in the background and execute the tasks.Combine: The Combine framework provides a declarative Swift API for processing values over time. These values can represent user interface events, network responses, scheduled events, and many other kinds of asynchronous data. Combine declares publishers to expose values that can change over time, and subscribers to receive those values from the publishers.CoreAudioTypes: The CoreAudioTypes framework declares common data types and constants used by other Core Audio interfaces. This framework also includes a handful of convenience functions.Core Haptics: Core Haptics lets you add customized haptic and audio feedback to your app. Use haptics to engage users physically, with tactile and audio feedback that gets attention and reinforces actions. Some system-provided interface elements\u200a\u2014\u200alike pickers, switches, and sliders\u200a\u2014\u200aautomatically provide haptic feedback as users interact with them. With Core Haptics, you extend this functionality by composing and combining haptics beyond the default patterns.QuickLookThumbnailing: You may want to create a miniature representation, or thumbnail, of a file and its contents to display within your app, or to provide a thumbnail to the operating system. For example, macOS shows thumbnails as part of the Finder app and its Quick Look feature. The QuickLookThumbnailing framework provides an API to generate thumbnails for common file types using the QLThumbnailGenerator object.PencilKit: PencilKit makes it easy to incorporate hand-drawn content into your iOS or macOS apps quickly and easily. PencilKit provides a drawing environment for your iOS app that takes input from Apple Pencil, or the user\u2019s finger, and turns it into high-quality images you display in either iOS or macOS. The environment comes with tools for creating, erasing, and selecting lines.RealityKit: Use the RealityKit framework to implement high-performance 3D simulation and rendering. RealityKit leverages information provided by the ARKit framework to seamlessly integrate virtual objects into the real world.VisionKit: VisionKit is a small framework that lets your app use the system\u2019s document scanner. Present the document camera as a view controller, which covers the entire screen like the camera function in Notes.SoundAnalysis: Use the SoundAnalysis framework to analyze audio and recognize it as a particular type, such as laughter or applause. The framework performs its analysis using a Core ML model trained by an MLSoundClassifier. Using the framework\u2019s ability to analyze streamed or file-based audio lets you add intelligent audio recognition capabilities to your app.CryptoKit: Use Apple CryptoKit to perform common cryptographic operations: Compute and compare cryptographically secure digests. Use public-key cryptography to create and evaluate digital signatures, and to perform the key exchange. In addition to working with keys stored in memory, you can also use private keys stored in and managed by the Secure Enclave. Generate symmetric keys, and use them in operations like message authentication and encryption. Prefer CryptoKit over lower-level interfaces. CryptoKit frees your app from managing raw pointers, and automatically handles tasks that make your app more secure, like overwriting sensitive data during memory deallocation.Maps Web Snapshots: The Maps Web Snapshots service can be used to generate static map images from a URL. You can use Snapshots any time that an interactive map is not required, and in any place, you typically use an image URL\u200a\u2014\u200ain web pages, and in places where JavaScript is not available, such as email clients.DriverKit: Use DriverKit to create device drivers that the user installs on their Mac. Drivers built with DriverKit run in userspace, rather than as kernel extensions, for improved system security and stability.MetricKit: With MetricKit, you can receive on-device app power and performance metrics captured by the system. A registered app receives reports containing data about the previous 24 hours at most once per day. Use the data in the reports to help improve the performance of your app.SystemExtensions: Creating system extensions allow your app to enhance the capabilities of the user\u2019s Mac, without the associated risks of developing kernel extensions (KEXTs). System extensions run in userspace, where they can\u2019t compromise the security or stability of macOS. The system grants these extensions a high level of privilege, so they can perform the kinds of tasks previously reserved to KEXTs.EndpointSecurity: Use the Endpoint Security library to create security-related software. Endpoint Security clients monitor system events for potentially malicious activity. Your client registers with Endpoint Security to authorize pending events, or receive notifications of events that have already occurred. These events include process executions, mounting file systems, forking processes, and raising signals.USBSerialDriverKit: The USBSerialDriverKit framework provides an API for developing serial communication drivers for USB devices like modems and serial adapters. The framework builds on DriverKit by adding the ability to set attributes like baud rate and parity and work with a device\u2019s universal asynchronous receiver/transmitter (UART).USBDriverKit: Use the USBDriverKit framework to develop drivers for custom or non-class compliant USB devices for use with macOS. USBDriverKit provides C++ classes you can use to attach and configure your device and create USB message and stream pipes to exchange data. USBDriverKit devices work with the core types defined in the DriverKit framework.HIDDriverKit: The HIDDriverKit framework provides C++ classes for developing drivers for human interface devices: keyboards, pointing devices, and digitizers like pens and touchpads. HIDDriverKit uses the core types defined in DriverKit, and adds features specific to human interface device development.That\u2019s all for today. Happy coding!!???Thank you for reading???\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 18028, "excerpt": "So it\u2019s almost near about one month already since WWDC 2019 happened this year.\nAll the developers are still busy what are new things Apple has added or updated\nfor development. There were some big announcements and small announcements, but\nwe, the developers need to make sure that we won\u2019t miss anything important. So I\nam just creating a quick checklist of the items what we should not miss. Let\u2019s\nmake it short, concise and simple.\n\niOS:\n 1.  iOS 13 will let you limit application location access", "siteName": "freeCodeCamp.org", "publishedTime": "2019-06-30T03:50:31.000Z", "id": "9e467181fb1c0dc2e7d42e54b3e473b62a6b7233", "url": "https://www.freecodecamp.org/news/developer-checklist-what-should-you-not-miss-from-wwdc-2019/", "domain": "freecodecamp.org", "date": "2023-12-27T18:09:03.762945", "resultUri": "http://localhost:3000/result/9e467181fb1c0dc2e7d42e54b3e473b62a6b7233", "query": {"url": ["https://www.freecodecamp.org/news/developer-checklist-what-should-you-not-miss-from-wwdc-2019/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "Developer Checklist: What should you not miss from WWDC 2019?", "description": "So it\u2019s almost near about one month already since WWDC 2019 happened this year. All the developers are still busy what are new things Apple has added or updated for development. There were some big announcements and small announcements, but we, the developers need to make sure that we won\u2019t", "url": "https://www.freecodecamp.org/news/developer-checklist-what-should-you-not-miss-from-wwdc-2019/", "image": "https://www.freecodecamp.org/news/content/images/2019/06/danielle-macinnes-222441-unsplash.jpg", "image:width": "2000", "image:height": "1333"}, "twitter": {"card": "summary_large_image", "title": "Developer Checklist: What should you not miss from WWDC 2019?", "description": "So it\u2019s almost near about one month already since WWDC 2019 happened this year. All the developers are still busy what are new things Apple has added or updated for development. There were some big announcements and small announcements, but we, the developers need to make sure that we won\u2019t", "url": "https://www.freecodecamp.org/news/developer-checklist-what-should-you-not-miss-from-wwdc-2019/", "image": "https://www.freecodecamp.org/news/content/images/2019/06/danielle-macinnes-222441-unsplash.jpg", "label1": "Written by", "data1": "Boudhayan Biswas", "label2": "Filed under", "data2": "Technology, iOS App Development, iOS, Swift, wwdc, Programming", "site": "@freecodecamp", "creator": "@_boudhayan_"}}}