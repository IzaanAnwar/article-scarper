{"title": "Programming is Really Hard \u2013 But Don't Give Up", "byline": "Kealan Parr", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>Programming is Really Hard \u2013 But Don't Give Up</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>Learning to do something new is hard.</p><p>Whether it's a physical feat like reaching a new best lift or a mental challenge like learning a new language \u2013 both entail months of work, multiple setbacks, and hundreds of hours of time put in. And then you still might just be at an intermediate level.</p><p>Spending <strong>hours </strong>failing over and over again, before finally being able to do it effortlessly, is the route ahead for any beginner.</p><div><p>But being bad at something isn't fun.</p><p>It's hard to continue doing something you're struggling to do.</p><p>It's hard to keep coding regularly when you feel like you're making no progress with your buggy code and worse yet, <em>aren't sure </em>how to improve your situation. </p></div><p>The only way to get better is to...keep getting stuck and just persevering? That doesn't sounds very encouraging.</p><div><p>But that is exactly what is necessary for you to become great.</p><p>I think learning to code is <strong>especially</strong> hard, as it is so different from most other activities, and sometimes it's hard to see which of your other skills might be transferrable to programming.</p></div><p>But because coding is challenging to do and can be so frustrating is exactly why you should do it.</p><h2 id=\"why-it-s-good-to-do-hard-things\">Why it's good to do hard things</h2><blockquote>Strangely, life gets harder when you try to make it easy. Exercising might be hard, but never moving makes life harder. Uncomfortable conversations are hard, but avoiding every conflict is harder. Mastering your craft is hard, but having no skills is harder. Easy has a cost. \u00a0\u2013 <strong>James Clear</strong></blockquote><p>I have found that the biggest leaps in my character, technical skills, and personal development normally come from something difficult I have to face.</p><p>There's this false idea amongst new developers that generally experienced developers know exactly what to do, and just \"do it\".</p><div><p>I haven't found that to be the case at all.</p><p>I have been coding for 4 years and recently wanted to create an automated job that would run a Node script monthly. Then at the end of the Node script running, it would commit the file with all results to a repository on GitHub.</p></div><p>I got it all wired up pretty quick, but couldn't work out for days why this script wasn't committing anything into my repository.</p><p>I was trying to work out if the Node script wasn't running, or if it was running but wasn't committing.</p><div><p>I tried what felt like everything. I contacted developer friends. But they had no idea what was wrong either.</p><p>Everything worked on my machine, why was this so hard?</p><p>I finally solved it. The machine that was running my Node script was a different OS than what I was using (it used Ubuntu) and was a case-sensitive shell, whilst my shell wasn't case-sensitive.</p></div><p>So although it worked on my machine it \"blew up\" on the other machine as I had the casing of the file (that I wanted to commit with all the results in it) wrong.</p><div><p><a href=\"https://github.com/kealanparr/Every-link-I-wish-I-had-as-a-beginner/commit/e34fccd74d39b34ec196cac272aa759f335f4c51#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346\">Here's</a> the commit where I fixed it.</p><p>In that moment I just wanted the bug fixed.</p><p>I was sick of not being able to properly debug the issue, as I didn't have access to the machine that was running my code. I felt like I was guessing as the feedback loop was so slow.</p></div><p>But now that I have experience doing this, I know how to optimally debug these types of situations again.</p><p>The only thing I'm trying to show you is that the only way to improve is to struggle and work things out. No matter how slow it feels.</p><p>In my experience, the only difference between the state I was in as a newbie coder who \"didn't get it\" and the state I'm currently in is that I just didn't quit.</p><h2 id=\"investing-in-loss\">Investing in Loss</h2><p>There's an excellent way to frame \"getting better means struggling, persevering and not giving up\" called <strong>Investing In Loss</strong>.</p><p>If you want to get good at something, <a href=\"https://bjjmentalmodels.com/investing-in-loss/\">you need to spend a lot of time being bad at it.</a> View loss <em>as an investment</em>, <strong>rather than something to avoid</strong>.</p><p>This concept is from the book <a href=\"http://www.joshwaitzkin.com/the-art-of-learning/\">The Art of Learning</a>. </p><p>To master any new skill, you need to go through a prolonged period of being bad before you can be good. </p><p>Each new part of software feels like a whole new world you have no experience with: deployments, networks, coding, data-structures, documentation, the list goes on. And there are multiple times \u2013 even when you're experienced \u2013 that you'll feel like you're a beginner again.</p><p>Often times the thing holding us back is our expectations of where we <em>should be </em>and losing patience with the process before we have finished it.</p><p>If you're good at other things, going back to being a beginner is jarring.</p><p>But you need to focus on <strong>viewing the loss as an investment </strong>\u2013 and not giving up too soon.</p><h2 id=\"don-t-quit-\">Don't quit!</h2><blockquote><em><em>I have not failed 10,000 times. I have not failed once. I have succeeded in proving that those 10,000 ways will not work. When I have eliminated the ways that will not work, I will find the way that will work.</em> \u2013 </em><strong>Thomas Edison</strong></blockquote><p>There are always times to cut your losses, but if programming is something you sincerely want to improve in, either for a new career or for pleasure \u2013 don't give up.</p><p>When I first started learning JavaScript, I spent time coding in the <strong>Eclipse </strong>code editor as I thought Java was the shorthand name for JavaScript.</p><div><p>If you aren't aware, they're not the same, and that editor doesn't (natively) work with JavaScript!</p><p>There have been countless times when I was a newbie, where I have gone through interviews and felt like I completely failed them, only to be surprised later when I got a job offer.</p></div><p>Remember the reason you first started learning and just keep going. Any progress no matter how small, is valuable.</p><h2 id=\"conclusion\"><strong>Conclusion</strong></h2><div><p>I remember so clearly years ago a time when I was coding on freeCodeCamp and was very disheartened about how stuck I was on a particular problem.</p><p>I read <a href=\"https://www.freecodecamp.org/news/make-your-hobby-harder-programming-is-difficult-thats-why-you-should-learn-it-e4627aee41a1/\">this</a> article, and it was one of the many articles that formed my opinion on this topic, inspired me to keep going, and to write my thoughts in this article.</p></div><p>If you're a newbie coder, I wrote about steps I took to improve as a developer <a href=\"https://www.freecodecamp.org/news/how-to-become-a-better-developer/\">here</a> and maintain a list of high quality coding resources <a href=\"https://github.com/kealanparr/Every-link-I-wish-I-had-as-a-beginner\">here</a>.</p><p>I tweet my articles <a href=\"https://twitter.com/kealanparr\">here</a> if you would like to read more of my writing.</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nLearning to do something new is hard.Whether it's a physical feat like reaching a new best lift or a mental challenge like learning a new language \u2013 both entail months of work, multiple setbacks, and hundreds of hours of time put in. And then you still might just be at an intermediate level.Spending hours failing over and over again, before finally being able to do it effortlessly, is the route ahead for any beginner.But being bad at something isn't fun.It's hard to continue doing something you're struggling to do.It's hard to keep coding regularly when you feel like you're making no progress with your buggy code and worse yet, aren't sure how to improve your situation. The only way to get better is to...keep getting stuck and just persevering? That doesn't sounds very encouraging.But that is exactly what is necessary for you to become great.I think learning to code is especially hard, as it is so different from most other activities, and sometimes it's hard to see which of your other skills might be transferrable to programming.But because coding is challenging to do and can be so frustrating is exactly why you should do it.Why it's good to do hard thingsStrangely, life gets harder when you try to make it easy. Exercising might be hard, but never moving makes life harder. Uncomfortable conversations are hard, but avoiding every conflict is harder. Mastering your craft is hard, but having no skills is harder. Easy has a cost. \u00a0\u2013 James ClearI have found that the biggest leaps in my character, technical skills, and personal development normally come from something difficult I have to face.There's this false idea amongst new developers that generally experienced developers know exactly what to do, and just \"do it\".I haven't found that to be the case at all.I have been coding for 4 years and recently wanted to create an automated job that would run a Node script monthly. Then at the end of the Node script running, it would commit the file with all results to a repository on GitHub.I got it all wired up pretty quick, but couldn't work out for days why this script wasn't committing anything into my repository.I was trying to work out if the Node script wasn't running, or if it was running but wasn't committing.I tried what felt like everything. I contacted developer friends. But they had no idea what was wrong either.Everything worked on my machine, why was this so hard?I finally solved it. The machine that was running my Node script was a different OS than what I was using (it used Ubuntu) and was a case-sensitive shell, whilst my shell wasn't case-sensitive.So although it worked on my machine it \"blew up\" on the other machine as I had the casing of the file (that I wanted to commit with all the results in it) wrong.Here's the commit where I fixed it.In that moment I just wanted the bug fixed.I was sick of not being able to properly debug the issue, as I didn't have access to the machine that was running my code. I felt like I was guessing as the feedback loop was so slow.But now that I have experience doing this, I know how to optimally debug these types of situations again.The only thing I'm trying to show you is that the only way to improve is to struggle and work things out. No matter how slow it feels.In my experience, the only difference between the state I was in as a newbie coder who \"didn't get it\" and the state I'm currently in is that I just didn't quit.Investing in LossThere's an excellent way to frame \"getting better means struggling, persevering and not giving up\" called Investing In Loss.If you want to get good at something, you need to spend a lot of time being bad at it. View loss as an investment, rather than something to avoid.This concept is from the book The Art of Learning. To master any new skill, you need to go through a prolonged period of being bad before you can be good. Each new part of software feels like a whole new world you have no experience with: deployments, networks, coding, data-structures, documentation, the list goes on. And there are multiple times \u2013 even when you're experienced \u2013 that you'll feel like you're a beginner again.Often times the thing holding us back is our expectations of where we should be and losing patience with the process before we have finished it.If you're good at other things, going back to being a beginner is jarring.But you need to focus on viewing the loss as an investment \u2013 and not giving up too soon.Don't quit!I have not failed 10,000 times. I have not failed once. I have succeeded in proving that those 10,000 ways will not work. When I have eliminated the ways that will not work, I will find the way that will work. \u2013 Thomas EdisonThere are always times to cut your losses, but if programming is something you sincerely want to improve in, either for a new career or for pleasure \u2013 don't give up.When I first started learning JavaScript, I spent time coding in the Eclipse code editor as I thought Java was the shorthand name for JavaScript.If you aren't aware, they're not the same, and that editor doesn't (natively) work with JavaScript!There have been countless times when I was a newbie, where I have gone through interviews and felt like I completely failed them, only to be surprised later when I got a job offer.Remember the reason you first started learning and just keep going. Any progress no matter how small, is valuable.ConclusionI remember so clearly years ago a time when I was coding on freeCodeCamp and was very disheartened about how stuck I was on a particular problem.I read this article, and it was one of the many articles that formed my opinion on this topic, inspired me to keep going, and to write my thoughts in this article.If you're a newbie coder, I wrote about steps I took to improve as a developer here and maintain a list of high quality coding resources here.I tweet my articles here if you would like to read more of my writing.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 6600, "excerpt": "Learning to do something new is hard.\n\nWhether it's a physical feat like reaching a new best lift or a mental challenge\nlike learning a new language \u2013 both entail months of work, multiple setbacks,\nand hundreds of hours of time put in. And then you still might just be at an\nintermediate level.\n\nSpending hours failing over and over again, before finally being able to do it\neffortlessly, is the route ahead for any beginner.\n\nBut being bad at something isn't fun.\n\nIt's hard to continue doing someth", "siteName": "freeCodeCamp.org", "publishedTime": "2021-10-25T21:43:19.000Z", "id": "b8f009a13e65e20087cc9655cd9390453d98051f", "url": "https://www.freecodecamp.org/news/how-to-get-better-at-programming-even-when-its-hard/", "domain": "freecodecamp.org", "date": "2023-12-27T18:05:44.434663", "resultUri": "http://localhost:3000/result/b8f009a13e65e20087cc9655cd9390453d98051f", "query": {"url": ["https://www.freecodecamp.org/news/how-to-get-better-at-programming-even-when-its-hard/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "Programming is Really Hard \u2013 But Don't Give Up", "description": "Learning to do something new is hard. Whether it's a physical feat like reaching a new best lift or a mental challenge like learning a new language \u2013 both entail months of work, multiple setbacks, and hundreds of hours of time put in. And then you still might just be", "url": "https://www.freecodecamp.org/news/how-to-get-better-at-programming-even-when-its-hard/", "image": "https://www.freecodecamp.org/news/content/images/2021/10/ProgrammingIsHard.png", "image:width": "1200", "image:height": "630"}, "twitter": {"card": "summary_large_image", "title": "Programming is Really Hard \u2013 But Don't Give Up", "description": "Learning to do something new is hard. Whether it's a physical feat like reaching a new best lift or a mental challenge like learning a new language \u2013 both entail months of work, multiple setbacks, and hundreds of hours of time put in. And then you still might just be", "url": "https://www.freecodecamp.org/news/how-to-get-better-at-programming-even-when-its-hard/", "image": "https://www.freecodecamp.org/news/content/images/2021/10/ProgrammingIsHard.png", "label1": "Written by", "data1": "Kealan Parr", "label2": "Filed under", "data2": "Self Improvement, Programming", "site": "@freecodecamp", "creator": "@kealanparr"}}}