{"title": "Learn to Code", "byline": "Quincy Larson", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>Learn to Code</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>This morning I woke up to dozens of messages from students who had read an article titled \u201cPlease Don\u2019t Learn to Code.\u201d</p><p>At first, I assumed Jeff Atwood\u2019s 2012 article had spontaneously reappeared on Reddit. But no \u2014 this was a brand new Tech Crunch article of the same name, which echoed Atwood\u2019s assertion that encouraging everyone to learn programming is like encouraging everyone to learn plumbing.</p><p>Here\u2019s why programming \u2014 unlike plumbing \u2014 is an important skill that everyone should learn: <strong>programming is how humans talk to machines</strong>.</p><figure><img alt=\"1*iET2rwyHLe8ZfXBO9NYHqA\" height=\"506\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/1*iET2rwyHLe8ZfXBO9NYHqA.png\" width=\"542\"/><figcaption>John McCarthy, the computer scientist who invented the Lisp language and coined the term \u201cArtificial Intelligence\u201d</figcaption></figure><blockquote>\u201cEveryone needs computer programming. It will be the way we speak to the servants.\u201d \u2014 John McCarthy</blockquote><h4 id=\"people-have-been-managing-other-people-for-thousands-of-years-\">People have been managing other people for thousands of years.</h4><p>The ancient Romans built their empire on the backs of defeated soldiers. The British built their empire by imposing their will on the residents of dozens of colonies. And the US became the economic force it is today thanks in part to cheap immigrant labor during the industrial revolution.</p><p>But here in the 21st century, we no longer get work done by managing people who tend grain fields, import spices from Asian colonies, or install railroads across the Rocky Mountains.</p><p>Now we get work done by managing machines.</p><h2 id=\"learn-to-code-because-the-nature-of-work-has-fundamentally-changed\">Learn to Code \u2013 Because the Nature of Work has Fundamentally Changed</h2><p>Today, it is no longer humans who do most of the work \u2014 it\u2019s machines.</p><p>Think about it \u2014 every day, humans make 3.5 billion Google searches. It\u2019s machines that carry out that work \u2014 not humans.</p><p>Think about how many man-hours it would take for humans to conduct even a single Google search manually. Can you imagine a bunch of PhD\u2019s phoning each other around the clock deliberating about which documents they should recommend to whom? This work is only even remotely practical if it\u2019s done by machines.</p><p>Trip Advisor helps you decide where to go for vacation. Expedia helps you book the right flight to get there. Google Maps directs you to the airport. All of these services are within the reach of average consumers thanks to the hard work of machines.</p><p>But machines are only able to do all this work because humans tell them exactly what to do. And the only way for humans to do this is by writing software.</p><p>That\u2019s right \u2014 computers are not nearly as smart as humans. For computers to succeed at the jobs we\u2019ve assigned them, they need us humans to give them extremely clear instructions.</p><p>That means coding.</p><h2 id=\"coding-isn-t-some-niche-skill-it-really-is-the-new-literacy-\">Coding isn\u2019t Some Niche Skill. It really is \u201cthe new literacy.\u201d</h2><p>It\u2019s the essential 21st century skill that every ambitious person needs to learn if they want to succeed.</p><p>Don\u2019t believe me? Just look at the legal profession. Software is turning it inside out, and <a href=\"http://www.abajournal.com/magazine/article/whos_eating_law_firms_lunch\" rel=\"noopener\">causing mass unemployment</a> for the lawyers who can\u2019t code.</p><p>The same is increasingly true for managers, marketers, accountants, doctors, and pretty much every white-collar job in between.</p><p>And that\u2019s to say nothing of the 3 million Americans whose jobs primarily involve driving a car, and billions of people world-wide who do other repetitive tasks that will soon be handled more inexpensively and effectively by machines.</p><p>I\u2019m hopeful that these displaced workers will be able to retrain for new jobs through inexpensive education programs like Starbuck\u2019s partnership with Arizona State University \u2014 where all of its employees get a free college education (hopefully picking up relevant new skills like software development) \u2014 or government-sponsored equivalents.</p><p>At the very least, they\u2019ll have access to a free math and computer science education through initiatives like EdX, and a free programming education through Free Code Camp.</p><h2 id=\"program-or-be-programmed\">Program or be Programmed</h2><p>We have a concept in software development called \u201cthe technology steamroller\u201d.</p><figure><img alt=\"1*UArvqBFDkaQGysgMEFhKjw\" height=\"390\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/1*UArvqBFDkaQGysgMEFhKjw.jpeg\" width=\"500\"/><figcaption>Stewart Brand, founder of the Whole Earth Catalog and the Long Now Foundation</figcaption></figure><blockquote>\u201cOnce a new technology rolls over you, if you\u2019re not part of the steamroller, you\u2019re part of the road.\u201d \u2014 Stewart Brand</blockquote><p>You can\u2019t stop technology. You can only adapt to it.</p><p>Once a history-shaping new technology comes out of the genie bottle, you can\u2019t put it back. This was true for airplanes, antibiotics, and nuclear warheads. And it\u2019s true for microprocessors, the internet, and machine learning.</p><p>Those who adapt to these permanent waves of changes flourish. Those who shrug them off \u2014 or fail to even realize they exist \u2014 asymptotically approach irrelevance.</p><p>Coding is the new literacy. Like reading was in the 12th century, writing was in the 16th century, arithmetic was in the 18th century, and driving a car was in the 20th century.</p><p>And just like how not everyone who learns to write will go on to become a professional writer \u2014 nor everyone who learns arithmetic will go on to become a professional mathematician \u2014 not everyone who learns to code will go on to become a software developer. But all people who learn these things will be immensely better off as a result of their efforts.</p><p>Think of your ability to read the labels on your prescription drugs, or your ability to count the money that a banker hands you when you make a withdrawal. There\u2019s something equally important that you can do if you can code: take tedious parts of your daily life and automate them.</p><p>And some people take this basic skill much further, as a way to <a href=\"http://www.businessinsider.com/a-google-programmer-blew-off-a-500000-salary-at-startup--because-hes-already-making-3-million-every-year-2014-1\" rel=\"noopener\">amass great personal wealth</a>, or to <a href=\"https://www.youtube.com/watch?v=G7UHzdvkd-Q&amp;index=3&amp;list=PLWKjhJtqVAbnQ048Pa8sAqJoVRhx8TJtM\" rel=\"noopener\">make the world a better place</a>.</p><h2 id=\"ships-are-meant-for-sailing\">Ships are meant for sailing</h2><figure><img alt=\"1*k0fUEL6Kuy9GMOgmWsKoBw\" height=\"430\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/1*k0fUEL6Kuy9GMOgmWsKoBw.png\" width=\"640\"/><figcaption>Rear Admiral Grace Hopper invented the first compiler and pioneered high-level programming languages.</figcaption></figure><blockquote>A ship in port is safe, but that is not what ships are for. Sail out to sea and do new things. \u2014 Grace Hopper</blockquote><p>Computers, at their core, are number crunching machines.</p><p>Human brains, at their core, are learning machines.</p><p>It may seem like you\u2019ll never be able to code. It may seem like you\u2019re just not wired for it.</p><p>And there will probably be a parade of people behind you who\u2019ve tried to learn to code, given up, and are eager to commiserate with you.</p><p>And these people will read articles like the Tech Crunch article, and share them on Facebook \u2014 like 14,000 people did yesterday \u2014 further discouraging the millions of people around the world who are working hard to achieve this new literacy.</p><p>But coding detractors are probably incorrect about their inability to learn coding. There\u2019s a growing sentiment among educators and cognitive scientists that any able-minded person can learn to code \u2014 just like you can learn to read, write, do arithmetic, or drive a car.</p><p>Sure, people with dyslexia have a harder time reading, people with dyscalculia have a harder time doing math, and both have a harder time programming. But even these are limitations that can be overcome, and <a href=\"https://www.quora.com/Can-anyone-learn-how-to-code/answer/Quincy-Larson\" rel=\"noopener\">programmers overcome limitations every day</a>.</p><p>So heed Grace Hopper\u2019s advice. Sail out to sea and learn new things. Put that learning machine in your head to use.</p><p>Learn to code. Learn to talk to machines. And flourish.</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nThis morning I woke up to dozens of messages from students who had read an article titled \u201cPlease Don\u2019t Learn to Code.\u201dAt first, I assumed Jeff Atwood\u2019s 2012 article had spontaneously reappeared on Reddit. But no \u2014 this was a brand new Tech Crunch article of the same name, which echoed Atwood\u2019s assertion that encouraging everyone to learn programming is like encouraging everyone to learn plumbing.Here\u2019s why programming \u2014 unlike plumbing \u2014 is an important skill that everyone should learn: programming is how humans talk to machines.John McCarthy, the computer scientist who invented the Lisp language and coined the term \u201cArtificial Intelligence\u201d\u201cEveryone needs computer programming. It will be the way we speak to the servants.\u201d \u2014 John McCarthyPeople have been managing other people for thousands of years.The ancient Romans built their empire on the backs of defeated soldiers. The British built their empire by imposing their will on the residents of dozens of colonies. And the US became the economic force it is today thanks in part to cheap immigrant labor during the industrial revolution.But here in the 21st century, we no longer get work done by managing people who tend grain fields, import spices from Asian colonies, or install railroads across the Rocky Mountains.Now we get work done by managing machines.Learn to Code \u2013 Because the Nature of Work has Fundamentally ChangedToday, it is no longer humans who do most of the work \u2014 it\u2019s machines.Think about it \u2014 every day, humans make 3.5 billion Google searches. It\u2019s machines that carry out that work \u2014 not humans.Think about how many man-hours it would take for humans to conduct even a single Google search manually. Can you imagine a bunch of PhD\u2019s phoning each other around the clock deliberating about which documents they should recommend to whom? This work is only even remotely practical if it\u2019s done by machines.Trip Advisor helps you decide where to go for vacation. Expedia helps you book the right flight to get there. Google Maps directs you to the airport. All of these services are within the reach of average consumers thanks to the hard work of machines.But machines are only able to do all this work because humans tell them exactly what to do. And the only way for humans to do this is by writing software.That\u2019s right \u2014 computers are not nearly as smart as humans. For computers to succeed at the jobs we\u2019ve assigned them, they need us humans to give them extremely clear instructions.That means coding.Coding isn\u2019t Some Niche Skill. It really is \u201cthe new literacy.\u201dIt\u2019s the essential 21st century skill that every ambitious person needs to learn if they want to succeed.Don\u2019t believe me? Just look at the legal profession. Software is turning it inside out, and causing mass unemployment for the lawyers who can\u2019t code.The same is increasingly true for managers, marketers, accountants, doctors, and pretty much every white-collar job in between.And that\u2019s to say nothing of the 3 million Americans whose jobs primarily involve driving a car, and billions of people world-wide who do other repetitive tasks that will soon be handled more inexpensively and effectively by machines.I\u2019m hopeful that these displaced workers will be able to retrain for new jobs through inexpensive education programs like Starbuck\u2019s partnership with Arizona State University \u2014 where all of its employees get a free college education (hopefully picking up relevant new skills like software development) \u2014 or government-sponsored equivalents.At the very least, they\u2019ll have access to a free math and computer science education through initiatives like EdX, and a free programming education through Free Code Camp.Program or be ProgrammedWe have a concept in software development called \u201cthe technology steamroller\u201d.Stewart Brand, founder of the Whole Earth Catalog and the Long Now Foundation\u201cOnce a new technology rolls over you, if you\u2019re not part of the steamroller, you\u2019re part of the road.\u201d \u2014 Stewart BrandYou can\u2019t stop technology. You can only adapt to it.Once a history-shaping new technology comes out of the genie bottle, you can\u2019t put it back. This was true for airplanes, antibiotics, and nuclear warheads. And it\u2019s true for microprocessors, the internet, and machine learning.Those who adapt to these permanent waves of changes flourish. Those who shrug them off \u2014 or fail to even realize they exist \u2014 asymptotically approach irrelevance.Coding is the new literacy. Like reading was in the 12th century, writing was in the 16th century, arithmetic was in the 18th century, and driving a car was in the 20th century.And just like how not everyone who learns to write will go on to become a professional writer \u2014 nor everyone who learns arithmetic will go on to become a professional mathematician \u2014 not everyone who learns to code will go on to become a software developer. But all people who learn these things will be immensely better off as a result of their efforts.Think of your ability to read the labels on your prescription drugs, or your ability to count the money that a banker hands you when you make a withdrawal. There\u2019s something equally important that you can do if you can code: take tedious parts of your daily life and automate them.And some people take this basic skill much further, as a way to amass great personal wealth, or to make the world a better place.Ships are meant for sailingRear Admiral Grace Hopper invented the first compiler and pioneered high-level programming languages.A ship in port is safe, but that is not what ships are for. Sail out to sea and do new things. \u2014 Grace HopperComputers, at their core, are number crunching machines.Human brains, at their core, are learning machines.It may seem like you\u2019ll never be able to code. It may seem like you\u2019re just not wired for it.And there will probably be a parade of people behind you who\u2019ve tried to learn to code, given up, and are eager to commiserate with you.And these people will read articles like the Tech Crunch article, and share them on Facebook \u2014 like 14,000 people did yesterday \u2014 further discouraging the millions of people around the world who are working hard to achieve this new literacy.But coding detractors are probably incorrect about their inability to learn coding. There\u2019s a growing sentiment among educators and cognitive scientists that any able-minded person can learn to code \u2014 just like you can learn to read, write, do arithmetic, or drive a car.Sure, people with dyslexia have a harder time reading, people with dyscalculia have a harder time doing math, and both have a harder time programming. But even these are limitations that can be overcome, and programmers overcome limitations every day.So heed Grace Hopper\u2019s advice. Sail out to sea and learn new things. Put that learning machine in your head to use.Learn to code. Learn to talk to machines. And flourish.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 7554, "excerpt": "This morning I woke up to dozens of messages from students who had read an\narticle titled \u201cPlease Don\u2019t Learn to Code.\u201d\n\nAt first, I assumed Jeff Atwood\u2019s 2012 article had spontaneously reappeared on\nReddit. But no \u2014 this was a brand new Tech Crunch article of the same name,\nwhich echoed Atwood\u2019s assertion that encouraging everyone to learn programming\nis like encouraging everyone to learn plumbing.\n\nHere\u2019s why programming \u2014 unlike plumbing \u2014 is an important skill that everyone\nshould learn: pro", "siteName": "freeCodeCamp.org", "publishedTime": "2021-03-01T07:43:00.000Z", "id": "2f8fb8de214b5c1e9eb5e25d2d6427b84d79b669", "url": "https://www.freecodecamp.org/news/please-do-learn-to-code-233597dd141c/", "domain": "freecodecamp.org", "date": "2023-12-27T18:06:11.100585", "resultUri": "http://localhost:3000/result/2f8fb8de214b5c1e9eb5e25d2d6427b84d79b669", "query": {"url": ["https://www.freecodecamp.org/news/please-do-learn-to-code-233597dd141c/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "Learn to Code", "description": "This morning I woke up to dozens of messages from students who had read an article titled \u201cPlease Don\u2019t Learn to Code.\u201d At first, I assumed Jeff Atwood\u2019s 2012 article had spontaneously reappeared on Reddit. But no \u2014 this was a brand new Tech Crunch article of the same name,", "url": "https://www.freecodecamp.org/news/please-do-learn-to-code-233597dd141c/", "image": "https://cdn-media-1.freecodecamp.org/images/1*euZOtdFE4rCo0GNq0yOofQ.jpeg", "image:width": "800", "image:height": "450"}, "twitter": {"card": "summary_large_image", "title": "Learn to Code", "description": "This morning I woke up to dozens of messages from students who had read an article titled \u201cPlease Don\u2019t Learn to Code.\u201d At first, I assumed Jeff Atwood\u2019s 2012 article had spontaneously reappeared on Reddit. But no \u2014 this was a brand new Tech Crunch article of the same name,", "url": "https://www.freecodecamp.org/news/please-do-learn-to-code-233597dd141c/", "image": "https://cdn-media-1.freecodecamp.org/images/1*euZOtdFE4rCo0GNq0yOofQ.jpeg", "label1": "Written by", "data1": "Quincy Larson", "label2": "Filed under", "data2": "Programming, Education, Technology, Design, Social Media", "site": "@freecodecamp", "creator": "@ossia"}}}