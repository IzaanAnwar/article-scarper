{"title": "How to integrate your iOS Flutter App with Firebase on MacOS", "byline": "Shen Huang", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to integrate your iOS Flutter App with Firebase on MacOS</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>Firebase is a mobile app development platform developed by Firebase, Inc. in 2011, and then Acquired by Google in 2014. It provides various features such as Cloud Storage, Authentication and an ML kit, which are essential to developing modern mobile applications. </p><p>Additionally, it provides services such as Performance Monitoring, Crashlytics and Google Analytics to help you improve the quality of your applications.</p><figure><img alt=\"rdJbjlOjN0qrQOz1vVGAhz5Ndy3JltvhJWIt\" height=\"376\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/rdJbjlOjN0qrQOz1vVGAhz5Ndy3JltvhJWIt\" width=\"670\"/><figcaption>App Success Made Simple with Firebase</figcaption></figure><p>In this tutorial I am going to show you how to connect your Flutter iOS application to the Firebase Platform on a Mac Computer, so you can utilize the powerful services provided by the firebase API in your future endeavors\u2026</p><h3 id=\"1-readying-a-gmail-account-and-a-flutter-project\">1. Readying a Gmail Account and a Flutter Project</h3><p>In order to utilize services from Firebase and Google Cloud Platform, you will need a Google Account. If you do not have one, simply following the page instructions <a href=\"https://accounts.google.com/signup/v2/webcreateaccount?hl=en-GB&amp;flowName=GlifWebSignIn&amp;flowEntry=SignUp\" rel=\"noopener\"><strong>here</strong></a> to register for one.</p><p>This tutorial is going to show you how to connect your existing Flutter application to the Firebase platform. If you are interested in how to create your first Flutter application, I have a tutorial on <a href=\"https://medium.com/front-end-weekly/how-to-create-your-first-ios-flutter-app-on-macos-7dfa9c3e1962\" rel=\"noopener\"><strong>How to create your first iOS Flutter app on MacOS</strong></a>. By the end of that tutorial, you should have a <strong><em>hello_world</em></strong> application ready in the simulator and understand how to alter the application by modifying the <strong><em>main.dart</em></strong> file.</p><h3 id=\"2-creating-a-firebase-project\">2. Creating a Firebase Project</h3><p>In order to integrate your Flutter application with the Firebase Platform, first you have to create a Firebase Project. And here are the steps.</p><p>1. Go to the <a href=\"https://console.firebase.google.com/\" rel=\"noopener\"><strong>Firebase Console</strong></a>.</p><p>2. Click on the big <strong>Add project</strong> button.</p><figure><img alt=\"bBzkYgbreUqtXjaF8gHm459WoBGG2iFVJ8zq\" height=\"836\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/bBzkYgbreUqtXjaF8gHm459WoBGG2iFVJ8zq\" width=\"800\"/></figure><p>3. Enter your <strong>Project name</strong>.</p><ul><li>I used <strong><em>hello-world</em></strong> for this example. Firebase automatically appends a unique ID to your project name \u2014 for example, the project I created ended up with the name <strong><em>hello-world-f2206</em></strong>.</li></ul><p>4. You can pick a <strong><em>Cloud Firestore</em></strong> Location.</p><ul><li>I left it as <em>nam5 (us-central)</em> because I live in Los Angeles, but the Cloud Functions are not available on <em>us-west2</em>, and the traffic in between will create additional charges. You can find more about service availabilities and server locations <a href=\"https://cloud.google.com/about/locations/\" rel=\"noopener\"><strong>here</strong></a>.</li></ul><p>5. Accept the <strong>Terms and Conditions</strong>.</p><figure><img alt=\"B5rzqO7YzxBfcTPpL0-SpWj-Opi1dF0FH0h2\" height=\"962\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/B5rzqO7YzxBfcTPpL0-SpWj-Opi1dF0FH0h2\" width=\"800\"/></figure><p>5. Once you are done, scroll to the bottom and click <strong>Create Project</strong>.</p><figure><img alt=\"vEG0IraiNoAedcBgHK8T-Iixohwr4-Jvfete\" height=\"962\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/vEG0IraiNoAedcBgHK8T-Iixohwr4-Jvfete\" width=\"800\"/></figure><ul><li>See <strong>3.1 Switching to Administrator Account</strong> in the appendix at the end of this article if you encountered an error message asking for an administrator account.</li></ul><p>Firebase will take some time to ready your application. Once done, click on the <strong>Continue</strong> button to open up the <strong>Firebase Project Overview Page</strong>.</p><figure><img alt=\"juqNs74YCpoCTwiGiwLfNwIhfcwHUsBS7K7D\" height=\"666\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/juqNs74YCpoCTwiGiwLfNwIhfcwHUsBS7K7D\" width=\"554\"/></figure><h4 id=\"4-configure-an-ios-application\">4. Configure an iOS Application</h4><p>1. In your <strong>Firebase Project Overview Page</strong>, launch the setup wizard for <strong>iOS</strong>.</p><figure><img alt=\"0oBCTTpEkwEKdWeJx0q8L3eFiUFBbzQj8BPj\" height=\"457\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/0oBCTTpEkwEKdWeJx0q8L3eFiUFBbzQj8BPj\" width=\"800\"/></figure><p>2. Inside the setup wizard, put in the <strong>iOS bundle ID.</strong> The <strong>Register app</strong> button should then light up, click on it.</p><ul><li>A guide on how to find the iOS bundle ID can be found the below in section <strong>4.1 Finding iOS Project root folder &amp; Acquiring Bundle ID</strong> of the appendix.</li></ul><figure><img alt=\"AC5HOfe1A3qBExHbEAi3quD3BI7-5FUU9Em5\" height=\"513\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/AC5HOfe1A3qBExHbEAi3quD3BI7-5FUU9Em5\" width=\"800\"/></figure><p>3. Download the <strong><em>GoogleService-Info.plist</em></strong> configuration file and put it into the iOS Project root folder, then click <strong>Next</strong>.</p><ul><li>A guide on how to find the iOS bundle ID can be found below in section <strong>4.1 Finding iOS Project root folder &amp; Acquiring Bundle ID</strong> of the appendix.</li></ul><figure><img alt=\"DgXQCKfCZ84AZL5gwAiitFHrpzhw1Jkw4ftA\" height=\"683\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/DgXQCKfCZ84AZL5gwAiitFHrpzhw1Jkw4ftA\" width=\"800\"/></figure><p>4. Follow the instructions to add the <strong>Firebase SDK</strong>, then click <strong>Next</strong>.</p><figure><img alt=\"cBV0KNA7yJOUqXZltFjA7NvIJ1gnYIed64dI\" height=\"649\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/cBV0KNA7yJOUqXZltFjA7NvIJ1gnYIed64dI\" width=\"800\"/></figure><ul><li>A detailed guide on how to install <strong>CocoaPods</strong> and <strong>Firebase SDK</strong> can be found below in section <strong>4.2 Installing CocoaPods and Firebase SDK</strong>.</li></ul><p>5. Modify the code inside the main <strong>AppDelegate</strong> as instructed by the setup wizard then click <strong>Next</strong>. For this example, I used <strong>Objective-C</strong>, and therefore replaced the contents inside <strong><em>AppDelegate.m</em></strong> with the following code.</p><pre tabindex=\"0\"><code>#include \"AppDelegate.h\"\n#include \"GeneratedPluginRegistrant.h\"\n\n@import UIKit;\n@import Firebase;\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application\ndidFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n[FIRApp configure];\nreturn YES;\n}\n\n@end</code></pre><figure><img alt=\"5agXkDqo0aAGpa6N9ZLWgn3oN710M9c5Z2fj\" height=\"268\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/5agXkDqo0aAGpa6N9ZLWgn3oN710M9c5Z2fj\" width=\"800\"/></figure><p>6. Get back to the root folder and run your app, after a while you should see the setup wizard showing that your app is added to Firebase. Click <strong>Continue to the Console</strong> to finish the setup.</p><figure><img alt=\"p5ODqX7TTswka1QMpu4r93k5G9AVHr0Si2kg\" height=\"464\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/p5ODqX7TTswka1QMpu4r93k5G9AVHr0Si2kg\" width=\"810\"/></figure><figure><img alt=\"oBZf6Nqo-nvZTUORtvybrVv8Ia2aldKXnJq6\" height=\"299\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/oBZf6Nqo-nvZTUORtvybrVv8Ia2aldKXnJq6\" width=\"800\"/></figure><p>Congratulations! You have successful added Firebase to your Flutter application. Despite the fact that having both Firebase and Flutter from Google is supper cool, it is actually a good Software Engineering practice to always have a plan B, as well as plan C, D,E, F, and G. In the future I will write another guide on an example application utilizing Firebase, and more on Flutter.</p><p>Have fun coding!!!</p><h3 id=\"appendices-\">Appendices:</h3><h4 id=\"3-1-switching-to-administrator-account\">3.1 Switching to Administrator Account</h4><p>If you ran into the following message, it means that you need to contact the organization of your Gmail account to grant you access to <strong>Google Developers Console</strong>.</p><figure><img alt=\"OCEEJckD9203lGfiVrwQavZ26GPzGdKIjscK\" height=\"339\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/OCEEJckD9203lGfiVrwQavZ26GPzGdKIjscK\" width=\"800\"/><figcaption>Request for Administrator Account</figcaption></figure><h4 id=\"4-1-finding-ios-project-root-folder-acquiring-bundle-id\">4.1 Finding iOS Project root folder &amp; Acquiring Bundle ID</h4><p>1. Launch <strong>Xcode</strong> from the<strong> Launchpad</strong>.</p><p>2. Select <strong>\u201cOpen another project\u2026\u201d</strong> at the bottom of the prompt screen.</p><figure><img alt=\"Wlr2j9zKkVEHwNQYdTI9wxWriKAMIvkmp8IQ\" height=\"473\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/Wlr2j9zKkVEHwNQYdTI9wxWriKAMIvkmp8IQ\" width=\"800\"/></figure><p>3. Navigate to your Flutter project folder, open the <strong>\u201cios\u201d</strong> folder and select <strong>\u201cRunner.xcodeproj\u201d</strong>. This should automatically open up the project in Xcode.</p><figure><img alt=\"oFjvHMqE4YtJiwfuSP55thHvD0GUjxEwY01x\" height=\"476\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/oFjvHMqE4YtJiwfuSP55thHvD0GUjxEwY01x\" width=\"800\"/></figure><p>4. Select the <strong>Runner</strong> project on the left, you should now see the <strong>Bundle Identifier</strong> under <strong>Identity</strong>.</p><figure><img alt=\"kl55NJhmnZH74ihBKE-3fdrXeMmBysovfJ96\" height=\"325\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/kl55NJhmnZH74ihBKE-3fdrXeMmBysovfJ96\" width=\"800\"/></figure><h4 id=\"4-2-installing-cocoapods-and-firebase-sdk\"><strong>4.2 Installing CocoaPods and Firebase SDK</strong></h4><p>In case the instructions inside the setup wizard did not work out, you will have to remove the existing Podfile in order to reinstall them correctly.</p><figure><img alt=\"o6kODHbEcH9JMV5gbf7FlBQKOVQnYlGPEuQn\" height=\"436\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/o6kODHbEcH9JMV5gbf7FlBQKOVQnYlGPEuQn\" width=\"800\"/></figure><p>1. <strong>CocoaPods</strong> is built with <strong>Ruby</strong> and is installable with the default <strong>Ruby</strong> available on <strong>MacOS</strong>. Use the following commands to install it.</p><pre tabindex=\"0\"><code>sudo gem install cocoapods</code></pre><figure><img alt=\"EgRhnJPf9kSRicH5fKajuXeMcPOdKnVerKvw\" height=\"398\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/EgRhnJPf9kSRicH5fKajuXeMcPOdKnVerKvw\" width=\"640\"/></figure><p>2. Initialize the <strong><em>Podfile</em></strong> with the following command.</p><pre tabindex=\"0\"><code>pod init</code></pre><p>3. Then, add the following code to the initialized <strong><em>Podfile</em></strong>.</p><pre tabindex=\"0\"><code>pod 'Firebase/Core'</code></pre><figure><img alt=\"zemw1-5IZvI5VkGO7mGO0aSySoY-t5KMQruW\" height=\"688\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/zemw1-5IZvI5VkGO7mGO0aSySoY-t5KMQruW\" width=\"1052\"/></figure><p>4. Once done, save the changes made to the <strong><em>Podfile</em></strong>, and install the <strong>Firebase SDK</strong> with the following command.</p><pre tabindex=\"0\"><code>pod install</code></pre><figure><img alt=\"VuguYbQEDy6r9EcMXQ2vDaeOcvgHBcumNllL\" height=\"368\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/VuguYbQEDy6r9EcMXQ2vDaeOcvgHBcumNllL\" width=\"590\"/></figure><p>5. After the installation, you will likely have to configure the <strong>.<em>xcconfig</em></strong> files. First you will have to copy the files from the <strong><em>Pods/Target Support Files/Pods-Runner</em></strong> folder to <strong><em>Flutter</em></strong> folder.</p><figure><img alt=\"3amfUm5sWKDF9bf-ed9tsbknTggn0vVCwxwf\" height=\"405\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/3amfUm5sWKDF9bf-ed9tsbknTggn0vVCwxwf\" width=\"800\"/></figure><p>6. Then you will have to include them into the <strong><em>Debug.xcconfig</em></strong> and <strong><em>Release.xcconfig</em></strong> files inside the <strong><em>Flutter</em></strong> folder.</p><pre><code>#include \"Pods-Runner.debug.xcconfig\"</code></pre><figure><img alt=\"9zJj8Nyvi1mIWq7y3cfsa2uhBMbw4qOz6zm1\" height=\"286\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/9zJj8Nyvi1mIWq7y3cfsa2uhBMbw4qOz6zm1\" width=\"800\"/></figure><pre><code>#include \"Pods-Runner.profile.xcconfig\"\n#include \"Pods-Runner.release.xcconfig\"</code></pre><figure><img alt=\"BlQuedQwnCZmIQl9PLgBhJL1ugr8VLoqDfPu\" height=\"209\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/BlQuedQwnCZmIQl9PLgBhJL1ugr8VLoqDfPu\" width=\"800\"/></figure>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nFirebase is a mobile app development platform developed by Firebase, Inc. in 2011, and then Acquired by Google in 2014. It provides various features such as Cloud Storage, Authentication and an ML kit, which are essential to developing modern mobile applications. Additionally, it provides services such as Performance Monitoring, Crashlytics and Google Analytics to help you improve the quality of your applications.App Success Made Simple with FirebaseIn this tutorial I am going to show you how to connect your Flutter iOS application to the Firebase Platform on a Mac Computer, so you can utilize the powerful services provided by the firebase API in your future endeavors\u20261. Readying a Gmail Account and a Flutter ProjectIn order to utilize services from Firebase and Google Cloud Platform, you will need a Google Account. If you do not have one, simply following the page instructions here to register for one.This tutorial is going to show you how to connect your existing Flutter application to the Firebase platform. If you are interested in how to create your first Flutter application, I have a tutorial on How to create your first iOS Flutter app on MacOS. By the end of that tutorial, you should have a hello_world application ready in the simulator and understand how to alter the application by modifying the main.dart file.2. Creating a Firebase ProjectIn order to integrate your Flutter application with the Firebase Platform, first you have to create a Firebase Project. And here are the steps.1. Go to the Firebase Console.2. Click on the big Add project button.3. Enter your Project name.I used hello-world for this example. Firebase automatically appends a unique ID to your project name \u2014 for example, the project I created ended up with the name hello-world-f2206.4. You can pick a Cloud Firestore Location.I left it as nam5 (us-central) because I live in Los Angeles, but the Cloud Functions are not available on us-west2, and the traffic in between will create additional charges. You can find more about service availabilities and server locations here.5. Accept the Terms and Conditions.5. Once you are done, scroll to the bottom and click Create Project.See 3.1 Switching to Administrator Account in the appendix at the end of this article if you encountered an error message asking for an administrator account.Firebase will take some time to ready your application. Once done, click on the Continue button to open up the Firebase Project Overview Page.4. Configure an iOS Application1. In your Firebase Project Overview Page, launch the setup wizard for iOS.2. Inside the setup wizard, put in the iOS bundle ID. The Register app button should then light up, click on it.A guide on how to find the iOS bundle ID can be found the below in section 4.1 Finding iOS Project root folder & Acquiring Bundle ID of the appendix.3. Download the GoogleService-Info.plist configuration file and put it into the iOS Project root folder, then click Next.A guide on how to find the iOS bundle ID can be found below in section 4.1 Finding iOS Project root folder & Acquiring Bundle ID of the appendix.4. Follow the instructions to add the Firebase SDK, then click Next.A detailed guide on how to install CocoaPods and Firebase SDK can be found below in section 4.2 Installing CocoaPods and Firebase SDK.5. Modify the code inside the main AppDelegate as instructed by the setup wizard then click Next. For this example, I used Objective-C, and therefore replaced the contents inside AppDelegate.m with the following code.#include \"AppDelegate.h\"\n#include \"GeneratedPluginRegistrant.h\"\n\n@import UIKit;\n@import Firebase;\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application\ndidFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n[FIRApp configure];\nreturn YES;\n}\n\n@end6. Get back to the root folder and run your app, after a while you should see the setup wizard showing that your app is added to Firebase. Click Continue to the Console to finish the setup.Congratulations! You have successful added Firebase to your Flutter application. Despite the fact that having both Firebase and Flutter from Google is supper cool, it is actually a good Software Engineering practice to always have a plan B, as well as plan C, D,E, F, and G. In the future I will write another guide on an example application utilizing Firebase, and more on Flutter.Have fun coding!!!Appendices:3.1 Switching to Administrator AccountIf you ran into the following message, it means that you need to contact the organization of your Gmail account to grant you access to Google Developers Console.Request for Administrator Account4.1 Finding iOS Project root folder & Acquiring Bundle ID1. Launch Xcode from the Launchpad.2. Select \u201cOpen another project\u2026\u201d at the bottom of the prompt screen.3. Navigate to your Flutter project folder, open the \u201cios\u201d folder and select \u201cRunner.xcodeproj\u201d. This should automatically open up the project in Xcode.4. Select the Runner project on the left, you should now see the Bundle Identifier under Identity.4.2 Installing CocoaPods and Firebase SDKIn case the instructions inside the setup wizard did not work out, you will have to remove the existing Podfile in order to reinstall them correctly.1. CocoaPods is built with Ruby and is installable with the default Ruby available on MacOS. Use the following commands to install it.sudo gem install cocoapods2. Initialize the Podfile with the following command.pod init3. Then, add the following code to the initialized Podfile.pod 'Firebase/Core'4. Once done, save the changes made to the Podfile, and install the Firebase SDK with the following command.pod install5. After the installation, you will likely have to configure the .xcconfig files. First you will have to copy the files from the Pods/Target Support Files/Pods-Runner folder to Flutter folder.6. Then you will have to include them into the Debug.xcconfig and Release.xcconfig files inside the Flutter folder.In Debug.xcconfig:#include \"Pods-Runner.debug.xcconfig\"In Release.xcconfig:#include \"Pods-Runner.profile.xcconfig\"\n#include \"Pods-Runner.release.xcconfig\"\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 6812, "excerpt": "Firebase is a mobile app development platform developed by Firebase, Inc. in\n2011, and then Acquired by Google in 2014. It provides various features such as\nCloud Storage, Authentication and an ML kit, which are essential to developing\nmodern mobile applications. \n\nAdditionally, it provides services such as Performance Monitoring, Crashlytics\nand Google Analytics to help you improve the quality of your applications.\n\nApp Success Made Simple with FirebaseIn this tutorial I am going to show you ho", "siteName": "freeCodeCamp.org", "publishedTime": "2019-12-28T18:06:00.000Z", "id": "5a09b04ded58f4c649d108217868a3068bd45fde", "url": "https://www.freecodecamp.org/news/how-to-integrate-your-ios-flutter-app-with-firebase-on-macos-6ad08e2714f0/", "domain": "freecodecamp.org", "date": "2023-12-27T18:07:31.795252", "resultUri": "http://localhost:3000/result/5a09b04ded58f4c649d108217868a3068bd45fde", "query": {"url": ["https://www.freecodecamp.org/news/how-to-integrate-your-ios-flutter-app-with-firebase-on-macos-6ad08e2714f0/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to integrate your iOS Flutter App with Firebase on MacOS", "description": "Firebase is a mobile app development platform developed by Firebase, Inc. in 2011, and then Acquired by Google in 2014. It provides various features such as Cloud Storage, Authentication and an ML kit, which are essential to developing modern mobile applications.  Additionally, it provides services such as Performance Monitoring,", "url": "https://www.freecodecamp.org/news/how-to-integrate-your-ios-flutter-app-with-firebase-on-macos-6ad08e2714f0/", "image": "https://cdn-media-2.freecodecamp.org/w1280/5f9c9e6d740569d1a4ca3d06.jpg", "image:width": "1280", "image:height": "854"}, "twitter": {"card": "summary_large_image", "title": "How to integrate your iOS Flutter App with Firebase on MacOS", "description": "Firebase is a mobile app development platform developed by Firebase, Inc. in 2011, and then Acquired by Google in 2014. It provides various features such as Cloud Storage, Authentication and an ML kit, which are essential to developing modern mobile applications.  Additionally, it provides services such as Performance Monitoring,", "url": "https://www.freecodecamp.org/news/how-to-integrate-your-ios-flutter-app-with-firebase-on-macos-6ad08e2714f0/", "image": "https://cdn-media-2.freecodecamp.org/w1280/5f9c9e6d740569d1a4ca3d06.jpg", "label1": "Written by", "data1": "Shen Huang", "label2": "Filed under", "data2": "Flutter, Firebase, Mobile App Development, Tech, Programming", "site": "@freecodecamp"}}}