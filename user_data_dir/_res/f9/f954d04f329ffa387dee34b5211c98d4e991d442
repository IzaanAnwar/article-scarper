{"title": "How to Build a Programming Project Step by Step", "byline": "Ogundiran Ayobami", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to Build a Programming Project Step by Step</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>This tweet about building projects really resonated with me: </p><figure><img alt=\"projects-tweet\" height=\"287\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2021/03/projects-tweet.png\" width=\"596\"/></figure><p>It says a lot about how programmers build the projects we all admire. It pin-points the less glamorous parts of our activities which beginners don't always pay attention to, probably because of their lack of experience.</p><p>And that reminds me of my recent experience building a VSCode extension. The extension is meant to make me look like a genius in video tutorials and reduce my recording challenges. (But hey \u2013 I am really not a genius \ud83d\ude1c).</p><p>The extension displays the content of a file per character whenever any key is pressed. It simulates a real-coding experience while I only pay attention to the voice recording. Wow! How did I build that? Well, let's see how it went.</p><p>It might go without saying, but you don't know how to build a new project until you've actually built it. Before I started, I didn't feel like I knew what to do and what to bring together. But I was sure of one thing \u2013 I knew how to find what I needed. Boom! The research began.</p><p>So let me tell you how I did it, so you can get better at building your own projects, too.</p><h2 id=\"break-the-project-down-into-smaller-units\">Break the Project Down into Smaller Units</h2><figure><img alt=\"image-310\" height=\"1333\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-310.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-310.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-310.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-310.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-310.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@markusspiske?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Markus Spiske</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>I knew it would be hard to find a complete tutorial about what I wanted to build. But it was relatively easy to find tutorial related to each unit of the project. So, I broke the project down into these parts:</p><ol><li>Installing the VSCode extension.</li><li>Getting the content of an active file.</li><li>Breaking down the content of the file into characters. (Word =&gt; w, o, r, d).</li><li>Listening to key-presses.</li><li>Displaying the character one by one whenever any key was pressed.</li></ol><p>Those are the basic things I expected the extension to be able to handle.</p><p>But wait! What if I am building a whole website? Don't worry \u2013 it's still the same process. This is what I would have done if I wanted to build a website, too.</p><h3 id=\"step-1-break-everything-up-into-sections\">Step 1: Break everything up into sections</h3><p>For a website, your manageable sections might look like this:</p><ol><li>Header</li><li>Main</li><li>SideBars</li><li>Footer</li></ol><h3 id=\"step-2-break-the-sections-down-into-components\">Step 2: Break the sections down into components</h3><p>To do this, I would ask myself what I wanted in each section. And then I would list those elements out one by one.</p><p>\u2705 Header: I want a logo, search-box, signup/login button (or other navigation buttons) and settings in the header.</p><p>\u2705 Main: How many column(s) do I need? Does it have to include a left or right sidebar or a list?</p><p>\u2705 Footer: Do I want copyright information and navigation in the footer? Anything else?</p><p>Then I'd ask myself what other things I wanted and note them down as I thought of them.</p><p>In short, you have to list out everything you want in each section and component. But don't waste too much time on planning, because execution is key. Do it as quickly as possible because once you have a job, you'll probably hardly have any spare time to plan out your projects. </p><p>But you might be thinking, Oh, no! I am confused. How do I know all the sections and components I need as a beginner? </p><p>That is a good observation because I am not a beginner and I have had experience with of all of these components. That is why I can list them easily. </p><p>But it's ok. You will learn all these things along the line. You just need to pay attention to my VSCode extension story. :)</p><h2 id=\"write-your-first-line-of-code-and-get-stuck-\">Write Your First Line of Code and Get Stuck\u200c </h2><figure><img alt=\"image-311\" height=\"2667\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-311.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-311.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-311.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-311.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-311.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@fx24?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Fernando Jorge</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>After having a clear picture of what to build, I believe the most important thing to kick-start a project is to write you first line of code and get stuck. It is pessimistic, but it helps you to become solution driven. </p><p>Instead of being worried unnecessarily because you're not sure of how to start, open you code editor of choice and write your first line of code \u2013 even if you get stuck right after that.</p><p>You first line of code will probably get deleted or improved upon several times, and that is fine. It is meant to help you overcome procrastination. </p><p>In reality, you will always be confused about how to start and what to do. Don't procrastinate because of such feelings, especially after you understand how the project should work in your head or on paper.</p><p>Don't try to understand everything before writing your first line of code. You will never understand everything. At least, no one has ever understood everything yet.</p><h2 id=\"no-project-is-perfect-including-google-\">No Project is Perfect \u2013 Including Google\u200c</h2><figure><img alt=\"image-312\" height=\"1500\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-312.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-312.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-312.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-312.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-312.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@brett_jordan?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Brett Jordan</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>It is easy to want your project to be the best ever built, especially when you are a beginner. I have been there, so I know how it feels. </p><p>I was just an art student trying to solve a problem by using web technology. After I failed to hire a web developer to build the project for me because I couldn't afford the price they quoted, I decided to learn how to build it by myself.</p><p>Silly me tried to build almost every feature on the internet to make sure my project had all the features others didn't have. Anyway, I killed the project eventually.</p><p>The point I am making is don't try to build a project that can't be criticized \u2013 there is nothing like that. You need to focus on core features, not extra features that might make the project unusable. </p><p>Don't try to make a perfect project or feature \u2013 make usable and lovable projects and features instead.</p><h2 id=\"every-project-is-built-on-other-projects\">Every Project is Built on Other Projects</h2><figure><img alt=\"image-313\" height=\"3000\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-313.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-313.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-313.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-313.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-313.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@lidyanada?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Lidya Nada</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>After I had a clear picture of what I needed to build the VSCode extension, I had to look into related projects. I opened the source code of vscode-hacker-typer to study how the project handles some of the things I wanted to implement. By doing that, I learnt a bit about VSCode extension APIs.</p><p>As I was totally inexperienced in making VSCode extensions, looking into vscode-hacker-typer helped me move from being totally clueless to knowing what to research. </p><p>Knowing the name of what you want to deal with is the greatest first step to solving any problem in programming. </p><p>For instance, say that there is a feature you like on a related website but you don't know what it is called. How will you research the feature? Well, it is not rocket science.</p><p>You can take a picture of the feature and ask for its name in programming groups or ask someone. Or you can discover it name or API by diving into a related project's source code like I did. So check out projects that are similar to your project, learn from them, and copy their features.</p><h2 id=\"don-t-be-afraid-to-google\">Don't Be Afraid to Google</h2><figure><img alt=\"image-314\" height=\"1252\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-314.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-314.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-314.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-314.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-314.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@mitchel3uo?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Mitchell Luo</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>Before I dove into creating the VSCode extension, I didn't even know where to start \u2013 but I was sure I would be able to research my way to something reasonable. I started googling different questions:</p><p>\u2705 How to get the content of a VSCode active editor?</p><p>\u2705 How to use VSCode activeTextEditor?</p><p>\u2705 How to use VSCode onDidTextDocumentChange?</p><p>And so on.</p><p>Understanding what you want to build is the first step to having relevant search results especially when building a project you have never built. You need to conceptualize the idea or features you want to implement so that you can find solutions you need.</p><h3 id=\"basic-googling-tips-that-can-help-you-get-better-results\">Basic googling tips that can help you get better results</h3><h4 id=\"know-the-keywords-you-care-about-\">Know the keywords you care about. </h4><p>For example, if I want to built a landing page with HTML and CSS only, I won't search for something like \"How to build a landing page\". That will be bring a lot of things I don't want. It has to include the keywords I care about. </p><p>Below are examples to study:</p><ul><li>How to build a landing page with HTML and CSS?</li><li>How to make a VSCode extension with Typescript (If I want Typescript)?</li><li>How to make a VSCode extension with JavaScript?</li></ul><p>Make sure your expected keywords are included \u2013 be specific.</p><p>Googling (How to build a landing page with HTML and CSS?) may yield a generic result. That is an issue. But it can be fixed with exact matches.</p><h4 id=\"use-quotes-to-get-exact-matches-in-google\">Use quotes to get exact matches in Google</h4><p>For example, \"How to build a landing page with HTML and CSS\" will give you an outcome with the exact words in that search. </p><p>If you want to explore general ideas about building a landing page, remove the quotes.</p><h4 id=\"exclude-a-search-term-with-\">Exclude a search term with (-)</h4><p>Sometimes, you only want a result with HTML and CSS, but you're getting those with HTML, CSS and JavaScript. </p><p>You can use \"- JavaScript\" to exclude JavaScript. For instance, you can search \"How to build a landing page with HTML and CSS - JavaScript.</p><p>This is useful when you want to exclude certain keywords.</p><h4 id=\"switch-out-your-terms\">Switch out your terms</h4><p>When you want to move from one language, library, or framework to another, you need to use all you know from the first language or framework. </p><p>For instance, you want to move from JavaScript to Python and you know how JavaScript works. All your previous search terms or approaches for JavaScript will still be very useful while using Python. </p><p>You only need to switch out your specific terms \u2013 replace JavaScript with Python in all your searches. Then, you can google \"Array in Python\" instead of \"Array in JavaScript\".</p><h2 id=\"you-ll-always-get-stuck-and-that-s-ok\">You'll Always Get Stuck \u2013 and That's OK</h2><figure><img alt=\"image-315\" height=\"2500\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2021/04/image-315.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2021/04/image-315.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2021/04/image-315.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2021/04/image-315.png 1600w, https://www.freecodecamp.org/news/content/images/2021/04/image-315.png 2000w\" width=\"2000\"/><figcaption>Photo by <a href=\"https://unsplash.com/@ianstauffer?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Ian Stauffer</a> / <a href=\"https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit\">Unsplash</a></figcaption></figure><p>\u200cThe problem with \"How to\" tutorials is that they don't always inform you that getting stuck is a part of the process. The VSCode extension I have been working on is still not working because I am stuck. After thinking through every part, I was stuck while implementing the features.</p><p>The VSCode extension API I was using can't be iterated, so I have to find a way to do that. Also, vscode-hacker-typer doesn't use the approach I am using. It records keystrokes and replays them. I want to avoid recording keystrokes. I only want to display the content of an activeTextEditor character by character whenever any key is pressed.</p><p>You will always be stuck, and that is why you have to learn <a href=\"https://www.freecodecamp.org/news/how-to-improve-your-debugging-skills/\">How to improve your debugging skills</a>. Getting stuck is a significant part of the process. Your ability to overcome the challenges of getting stuck will determine how far you go in making projects.</p><h2 id=\"conclusion\">Conclusion</h2><p>It can be tempting to want to quit because you feel you are not as good as everyone else. The reality is that we all struggle behind the scenes. We've all solved a lot of problems through trial and error. We all feel dumb and fake because we are always building on the projects of others. </p><p>But don't forget that every amazing project has a less glamorous story you know nothing about behind it. What matters, above all, is making sure you build the project in the end.</p><p>Don't forget:</p><blockquote>\"The genius thing that we did was, we didn't give up\" - Jay Z.</blockquote><p><a href=\"https://twitter.com/codingnninja\"><strong><strong>Ayobami</strong></strong></a> loves writing history with software development and is currently helping those who are struggling to understand and build projects with HTML, CSS and JavaScript <a href=\"https://aw194b5a.aweb.page/p/5c07dec9-f1bd-4a8f-a788-87e4f0a6a6a1\">here</a>.</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nThis tweet about building projects really resonated with me: It says a lot about how programmers build the projects we all admire. It pin-points the less glamorous parts of our activities which beginners don't always pay attention to, probably because of their lack of experience.And that reminds me of my recent experience building a VSCode extension. The extension is meant to make me look like a genius in video tutorials and reduce my recording challenges. (But hey \u2013 I am really not a genius \ud83d\ude1c).The extension displays the content of a file per character whenever any key is pressed. It simulates a real-coding experience while I only pay attention to the voice recording. Wow! How did I build that? Well, let's see how it went.It might go without saying, but you don't know how to build a new project until you've actually built it. Before I started, I didn't feel like I knew what to do and what to bring together. But I was sure of one thing \u2013 I knew how to find what I needed. Boom! The research began.So let me tell you how I did it, so you can get better at building your own projects, too.Break the Project Down into Smaller UnitsPhoto by Markus Spiske / UnsplashI knew it would be hard to find a complete tutorial about what I wanted to build. But it was relatively easy to find tutorial related to each unit of the project. So, I broke the project down into these parts:Installing the VSCode extension.Getting the content of an active file.Breaking down the content of the file into characters. (Word => w, o, r, d).Listening to key-presses.Displaying the character one by one whenever any key was pressed.Those are the basic things I expected the extension to be able to handle.But wait! What if I am building a whole website? Don't worry \u2013 it's still the same process. This is what I would have done if I wanted to build a website, too.Step 1: Break everything up into sectionsFor a website, your manageable sections might look like this:HeaderMainSideBarsFooterStep 2: Break the sections down into componentsTo do this, I would ask myself what I wanted in each section. And then I would list those elements out one by one.\u2705 Header: I want a logo, search-box, signup/login button (or other navigation buttons) and settings in the header.\u2705 Main: How many column(s) do I need? Does it have to include a left or right sidebar or a list?\u2705 Footer: Do I want copyright information and navigation in the footer? Anything else?Then I'd ask myself what other things I wanted and note them down as I thought of them.In short, you have to list out everything you want in each section and component. But don't waste too much time on planning, because execution is key. Do it as quickly as possible because once you have a job, you'll probably hardly have any spare time to plan out your projects. But you might be thinking, Oh, no! I am confused. How do I know all the sections and components I need as a beginner? That is a good observation because I am not a beginner and I have had experience with of all of these components. That is why I can list them easily. But it's ok. You will learn all these things along the line. You just need to pay attention to my VSCode extension story. :)Write Your First Line of Code and Get Stuck\u200c Photo by Fernando Jorge / UnsplashAfter having a clear picture of what to build, I believe the most important thing to kick-start a project is to write you first line of code and get stuck. It is pessimistic, but it helps you to become solution driven. Instead of being worried unnecessarily because you're not sure of how to start, open you code editor of choice and write your first line of code \u2013 even if you get stuck right after that.You first line of code will probably get deleted or improved upon several times, and that is fine. It is meant to help you overcome procrastination. In reality, you will always be confused about how to start and what to do. Don't procrastinate because of such feelings, especially after you understand how the project should work in your head or on paper.Don't try to understand everything before writing your first line of code. You will never understand everything. At least, no one has ever understood everything yet.No Project is Perfect \u2013 Including Google\u200cPhoto by Brett Jordan / UnsplashIt is easy to want your project to be the best ever built, especially when you are a beginner. I have been there, so I know how it feels. I was just an art student trying to solve a problem by using web technology. After I failed to hire a web developer to build the project for me because I couldn't afford the price they quoted, I decided to learn how to build it by myself.Silly me tried to build almost every feature on the internet to make sure my project had all the features others didn't have. Anyway, I killed the project eventually.The point I am making is don't try to build a project that can't be criticized \u2013 there is nothing like that. You need to focus on core features, not extra features that might make the project unusable. Don't try to make a perfect project or feature \u2013 make usable and lovable projects and features instead.Every Project is Built on Other ProjectsPhoto by Lidya Nada / UnsplashAfter I had a clear picture of what I needed to build the VSCode extension, I had to look into related projects. I opened the source code of vscode-hacker-typer to study how the project handles some of the things I wanted to implement. By doing that, I learnt a bit about VSCode extension APIs.As I was totally inexperienced in making VSCode extensions, looking into vscode-hacker-typer helped me move from being totally clueless to knowing what to research. Knowing the name of what you want to deal with is the greatest first step to solving any problem in programming. For instance, say that there is a feature you like on a related website but you don't know what it is called. How will you research the feature? Well, it is not rocket science.You can take a picture of the feature and ask for its name in programming groups or ask someone. Or you can discover it name or API by diving into a related project's source code like I did. So check out projects that are similar to your project, learn from them, and copy their features.Don't Be Afraid to GooglePhoto by Mitchell Luo / UnsplashBefore I dove into creating the VSCode extension, I didn't even know where to start \u2013 but I was sure I would be able to research my way to something reasonable. I started googling different questions:\u2705 How to get the content of a VSCode active editor?\u2705 How to use VSCode activeTextEditor?\u2705 How to use VSCode onDidTextDocumentChange?And so on.Understanding what you want to build is the first step to having relevant search results especially when building a project you have never built. You need to conceptualize the idea or features you want to implement so that you can find solutions you need.Basic googling tips that can help you get better resultsKnow the keywords you care about. For example, if I want to built a landing page with HTML and CSS only, I won't search for something like \"How to build a landing page\". That will be bring a lot of things I don't want. It has to include the keywords I care about. Below are examples to study:How to build a landing page with HTML and CSS?How to make a VSCode extension with Typescript (If I want Typescript)?How to make a VSCode extension with JavaScript?Make sure your expected keywords are included \u2013 be specific.Googling (How to build a landing page with HTML and CSS?) may yield a generic result. That is an issue. But it can be fixed with exact matches.Use quotes to get exact matches in GoogleFor example, \"How to build a landing page with HTML and CSS\" will give you an outcome with the exact words in that search. If you want to explore general ideas about building a landing page, remove the quotes.Exclude a search term with (-)Sometimes, you only want a result with HTML and CSS, but you're getting those with HTML, CSS and JavaScript. You can use \"- JavaScript\" to exclude JavaScript. For instance, you can search \"How to build a landing page with HTML and CSS - JavaScript.This is useful when you want to exclude certain keywords.Switch out your termsWhen you want to move from one language, library, or framework to another, you need to use all you know from the first language or framework. For instance, you want to move from JavaScript to Python and you know how JavaScript works. All your previous search terms or approaches for JavaScript will still be very useful while using Python. You only need to switch out your specific terms \u2013 replace JavaScript with Python in all your searches. Then, you can google \"Array in Python\" instead of \"Array in JavaScript\".You'll Always Get Stuck \u2013 and That's OKPhoto by Ian Stauffer / Unsplash\u200cThe problem with \"How to\" tutorials is that they don't always inform you that getting stuck is a part of the process. The VSCode extension I have been working on is still not working because I am stuck. After thinking through every part, I was stuck while implementing the features.The VSCode extension API I was using can't be iterated, so I have to find a way to do that. Also, vscode-hacker-typer doesn't use the approach I am using. It records keystrokes and replays them. I want to avoid recording keystrokes. I only want to display the content of an activeTextEditor character by character whenever any key is pressed.You will always be stuck, and that is why you have to learn How to improve your debugging skills. Getting stuck is a significant part of the process. Your ability to overcome the challenges of getting stuck will determine how far you go in making projects.ConclusionIt can be tempting to want to quit because you feel you are not as good as everyone else. The reality is that we all struggle behind the scenes. We've all solved a lot of problems through trial and error. We all feel dumb and fake because we are always building on the projects of others. But don't forget that every amazing project has a less glamorous story you know nothing about behind it. What matters, above all, is making sure you build the project in the end.Don't forget:\"The genius thing that we did was, we didn't give up\" - Jay Z.Ayobami loves writing history with software development and is currently helping those who are struggling to understand and build projects with HTML, CSS and JavaScript here.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 11078, "excerpt": "This tweet about building projects really resonated with me: \n\nIt says a lot about how programmers build the projects we all admire. It\npin-points the less glamorous parts of our activities which beginners don't\nalways pay attention to, probably because of their lack of experience.\n\nAnd that reminds me of my recent experience building a VSCode extension. The\nextension is meant to make me look like a genius in video tutorials and reduce\nmy recording challenges. (But hey \u2013 I am really not a genius", "siteName": "freeCodeCamp.org", "publishedTime": "2021-03-30T22:08:44.000Z", "id": "f954d04f329ffa387dee34b5211c98d4e991d442", "url": "https://www.freecodecamp.org/news/how-to-build-programming-projects/", "domain": "freecodecamp.org", "date": "2023-12-27T18:06:04.051826", "resultUri": "http://localhost:3000/result/f954d04f329ffa387dee34b5211c98d4e991d442", "query": {"url": ["https://www.freecodecamp.org/news/how-to-build-programming-projects/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to Build a Programming Project Step by Step", "description": "This tweet about building projects really resonated with me:  It says a lot about how programmers build the projects we all admire. It pin-points the less glamorous parts of our activities which beginners don't always pay attention to, probably because of their lack of experience. And that reminds me", "url": "https://www.freecodecamp.org/news/how-to-build-programming-projects/", "image": "https://cdn-media-2.freecodecamp.org/w1280/6040a754a7946308b7681492.jpg", "image:width": "1280", "image:height": "853"}, "twitter": {"card": "summary_large_image", "title": "How to Build a Programming Project Step by Step", "description": "This tweet about building projects really resonated with me:  It says a lot about how programmers build the projects we all admire. It pin-points the less glamorous parts of our activities which beginners don't always pay attention to, probably because of their lack of experience. And that reminds me", "url": "https://www.freecodecamp.org/news/how-to-build-programming-projects/", "image": "https://cdn-media-2.freecodecamp.org/w1280/6040a754a7946308b7681492.jpg", "label1": "Written by", "data1": "Ogundiran Ayobami", "label2": "Filed under", "data2": "Self Improvement, Projects, Programming, Problem Solving", "site": "@freecodecamp", "creator": "@codingnninja"}}}