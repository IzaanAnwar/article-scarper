{"title": "What is Abstraction in Programming \u2013 And Why is it Useful?", "byline": "Tiago Monteiro", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>What is Abstraction in Programming \u2013 And Why is it Useful?</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>Did you know that abstraction is one of the most important concepts for any software engineer to know?</p><p>That's right!</p><p>Without the use of abstraction when developing new technologies and concepts, we would never have been able to invent most software or even most things.</p><p>So, understanding this concept is truly important for software development.</p><p>You have used abstraction in many ways but you might not have known it. </p><p>Abstraction thinking is one of the things humans do in so many areas:</p><ul><li>Philosophy</li><li>Art</li><li>Mathematics</li><li>Computer science</li><li>and so much more \u2026</li></ul><p>But what is it truly? You'll learn all about it in this article.</p><h2 id=\"what-we-ll-cover-\">What We'll Cover:</h2><ol><li>Abstraction Analogy</li><li>Python Example of Abstraction</li><li>General Electronics Example of Abstraction</li><li>Embedded Systems Example of Abstraction</li><li>Why is Understanding Abstraction Useful?</li></ol><h2 id=\"abstraction-analogy\">Abstraction Analogy</h2><figure><img alt=\"pexels-torsten-dettlaff-70912\" height=\"1250\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2022/07/pexels-torsten-dettlaff-70912.jpg\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/07/pexels-torsten-dettlaff-70912.jpg 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2022/07/pexels-torsten-dettlaff-70912.jpg 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2022/07/pexels-torsten-dettlaff-70912.jpg 1600w, https://www.freecodecamp.org/news/content/images/size/w2400/2022/07/pexels-torsten-dettlaff-70912.jpg 2400w\" width=\"2000\"/><figcaption>Photo by Torsten Dettlaff from Pexels: https://www.pexels.com/photo/black-coupes-70912/</figcaption></figure><p>Let's say you are in a driving school to get your driver's license.</p><p>In the school, you learn how the main car components work:</p><ul><li>Brakes</li><li>Transmission</li><li>Suspension system</li><li>Battery</li></ul><p>You don't need to understand at a technical level each component to learn how to drive.</p><p>You just need a mental image as of what the brakes do when you press your foot down. Or what happens in the transmission when you change gears...and so on.</p><p>You only need a <strong>basic mental representation</strong> of the component you are using.</p><p>This means that you only need an <strong>abstraction</strong> of the car component.</p><p>Our use of abstractions to learn and use things is everywhere:</p><ul><li>You don't need to know the inner parts of a car to drive it. But knowing how they work can make you a <strong>better driver.</strong></li><li>You don't need to know the inner parts of a bicycle to know how to ride it. But knowing how that works can make you a <strong>better rider.</strong></li><li>You don't need to know the inner parts of a function or framework in programming to use it. But knowing how those things work can make you a <strong>better programmer.</strong></li></ul><h2 id=\"python-example-of-abstraction\">Python Example of Abstraction</h2><figure><img alt=\"code\" height=\"212\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2022/03/code.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/03/code.png 600w, https://www.freecodecamp.org/news/content/images/2022/03/code.png 716w\" width=\"716\"/></figure><p>This is code written in Python. We are just using the print function to output the text \u201cHello world\u201d on the screen.</p><p>To do this, you just need to know how to use the print function. </p><p>You don't need to understand how it works under the hood.</p><p>But it is good sometimes to understand how a certain function works in the background in order to use it more effectively. </p><p>By knowing how it works:</p><ul><li>You will become a better programmer by understanding other people's code</li><li>You will understand bugs in any libraries you use more easily</li><li>Instead of importing a whole library, you can copy the code you need from another project. A project with fewer dependencies will be easier to manage</li></ul><p>For example, let's say you want to use the <a href=\"https://docs.python.org/3/library/statistics.html\">Python statistics module</a>, which is a build-in module in Python. This means that Python already comes with the module in its library.</p><p>You don't need to <a href=\"https://www.freecodecamp.org/news/how-to-use-pip-install-in-python/\">import it with PIP</a>.</p><p>Let's say I want to use the <a href=\"https://docs.python.org/3/library/statistics.html#statistics.mean\">mean function</a>:</p><figure><pre><code>from statistics import mean \n\nrandomList = [-1.0, 2.5, 3.25, 5.75]\n\nprint(mean(randomList))</code></pre><figcaption>main.py</figcaption></figure><figure><img alt=\"python-example\" height=\"446\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2022/05/python-example.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/05/python-example.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2022/05/python-example.png 1000w, https://www.freecodecamp.org/news/content/images/2022/05/python-example.png 1040w\" width=\"1040\"/></figure><p>If there is no data, the <a href=\"https://docs.python.org/3/library/statistics.html#statistics.StatisticsError\">Statistics.error</a> will be raised.</p><p>This will print out 2,625.</p><p>But how does that work inside?</p><p>If you go to <a href=\"https://github.com/python/cpython/blob/main/Lib/statistics.py\">https://github.com/python/cpython/blob/main/Lib/statistics.py</a>, you will find at line 414 the code for the mean function:</p><pre tabindex=\"0\"><code>def mean(data):\n    \"\"\"\n    Return the sample arithmetic mean of data.\n    &gt;&gt;&gt; mean([1, 2, 3, 4, 4])\n    2.8\n    &gt;&gt;&gt; from fractions import Fraction as F\n    &gt;&gt;&gt; mean([F(3, 7), F(1, 21), F(5, 3), F(1, 3)])\n    Fraction(13, 21)\n    &gt;&gt;&gt; from decimal import Decimal as D\n    &gt;&gt;&gt; mean([D(\"0.5\"), D(\"0.75\"), D(\"0.625\"), D(\"0.375\")])\n    Decimal('0.5625')\n    If ``data`` is empty, StatisticsError will be raised.\n    \"\"\"\n    T, total, n = _sum(data)\n    if n &lt; 1:\n        raise StatisticsError('mean requires at least one data point')\n    return _convert(total / n, T)\n    \n    \n </code></pre><figure><img alt=\"https-__github.com_python_cpython_blob_main_Lib_statistics.py\" height=\"986\" loading=\"lazy\" sizes=\"(min-width: 720px) 720px\" src=\"https://www.freecodecamp.org/news/content/images/2022/05/https-__github.com_python_cpython_blob_main_Lib_statistics.py.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/05/https-__github.com_python_cpython_blob_main_Lib_statistics.py.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2022/05/https-__github.com_python_cpython_blob_main_Lib_statistics.py.png 1000w, https://www.freecodecamp.org/news/content/images/2022/05/https-__github.com_python_cpython_blob_main_Lib_statistics.py.png 1418w\" width=\"1418\"/></figure><p>This is the inside code that runs when you use the statistics built in module Python gives you.</p><h2 id=\"general-electronics-example-of-abstraction\">General Electronics Example of Abstraction</h2><p>Any embedded system or electronic device requires circuits.</p><p>Circuits are made up of many wires and components. Electronics engineers design these devices.</p><p>In any electrical engineering or related program, college student not only learn how to design circuits, but also learn the actual physics behind each component that makes up the circuit.</p><p>After college, many electrical engineers <em>work </em>on small circuits to develop electronics for calculators, microwaves, printers, and other devices.</p><p>While electrical engineers work to make the circuits, who works to make the components?</p><p>Well, some electrical engineers, materials engineers, applied physicists, and others.</p><p>In this example, we will use applied physicists \u2013 scientists that apply physics to solve hard technical problems.</p><p>Some applied physicists focus on the study and creation of the components used in a circuit.</p><p>Some applied physicists bother with developing stuff that will become the building blocks of circuits like:</p><ul><li>LED's</li><li>LCD displays</li><li>Capacitors</li><li>Photo resistors</li></ul><p>Electrical engineers develop the circuits and electronics applications with these components.</p><p>They don't care at the same level of detail as applied physics about the composition of these components.</p><p>What they care about is using this materials to solve problems with electronics.</p><p>That is abstraction!</p><p>The applied physicists focus on the level of abstraction where components are created, with what materials, with the time to create them...</p><p>The electrical engineer focuses on the level of abstraction where components are used to create circuits and devices.</p><figure><img alt=\"abstraction.drawio\" height=\"642\" loading=\"lazy\" src=\"https://www.freecodecamp.org/news/content/images/2022/05/abstraction.drawio.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/05/abstraction.drawio.png 600w, https://www.freecodecamp.org/news/content/images/2022/05/abstraction.drawio.png 735w\" width=\"735\"/><figcaption><strong><em>What each professional works in?</em></strong></figcaption></figure><h2 id=\"embedded-systems-example-of-abstraction\">Embedded Systems Example of Abstraction</h2><p>An embedded systems engineer (engineers that create small computer systems with a dedicated function, like a toaster, scientific calculator, mouse, keyboard, and so on) needs to know how to code close to the hardware.</p><p>To do that, they needs to have a good understanding of C and assembly language, since they are closely related to one another.</p><p>For example, in critical embedded systems (real-time applications that process data and events that have critically defined time constraints) like:</p><ul><li>Medical devices</li><li>Airplane control systems</li><li>Missile guidance systems</li></ul><p>An engineer needs to be able to understand the C code and assembly. Assembly normally is used in very specific functions when pure assembly runs better than compiled C code.</p><figure><img alt=\"abstraction.drawio-2\" height=\"1343\" loading=\"lazy\" sizes=\"(min-width: 1200px) 1200px\" src=\"https://www.freecodecamp.org/news/content/images/2022/05/abstraction.drawio-2.png\" srcset=\"https://www.freecodecamp.org/news/content/images/size/w600/2022/05/abstraction.drawio-2.png 600w, https://www.freecodecamp.org/news/content/images/size/w1000/2022/05/abstraction.drawio-2.png 1000w, https://www.freecodecamp.org/news/content/images/size/w1600/2022/05/abstraction.drawio-2.png 1600w, https://www.freecodecamp.org/news/content/images/2022/05/abstraction.drawio-2.png 1872w\" width=\"1872\"/><figcaption><strong><em>Example of different levels of abstraction</em></strong></figcaption></figure><p>Each box is a different level of abstraction.</p><p>Those electrical components are made and studied by applied physics, material engineers, and some electrical engineers.</p><p>Those software components (functions, classes) are used and created by the embedded systems programmers.</p><h2 id=\"why-is-understanding-abstraction-useful\">Why is Understanding Abstraction Useful?</h2><p>Understanding abstraction will enable you to understand when you need to know something technical or just how to use it.</p><p>Another reason to understand abstraction well is when you start learning a framework outside your work area.</p><p>When you first learn a framework, you learn how to use it. As you learn how the framework works, you start understanding its limits. </p><p>As a result, you learn how classes and functions are actually written.</p><p>By understanding libraries, frameworks, and other aspects of programming, at an advanced level, you will be able to create your own libraries and frameworks.</p><p>This way, you will be able to progress in your career and you may even be able to solve some hard work problems.</p><p>Reducing dependencies in a project is another reason to understand abstraction.</p><p>When you use a few functions from an outside library, you can see how the code is written and simply add your own function or class.</p><p>That way, your project has fewer dependencies. This makes it easier for people to run your code without having to install other dependencies.</p><h2 id=\"wrapping-up\">Wrapping up</h2><p>Thanks for reading! Now you know:</p><ul><li>What abstraction is</li><li>Three abstraction examples: Python, general electronics, and embedded systems</li><li>Why understanding abstraction is useful</li></ul>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nDid you know that abstraction is one of the most important concepts for any software engineer to know?That's right!Without the use of abstraction when developing new technologies and concepts, we would never have been able to invent most software or even most things.So, understanding this concept is truly important for software development.You have used abstraction in many ways but you might not have known it. Abstraction thinking is one of the things humans do in so many areas:PhilosophyArtMathematicsComputer scienceand so much more \u2026But what is it truly? You'll learn all about it in this article.What We'll Cover:Abstraction AnalogyPython Example of AbstractionGeneral Electronics Example of AbstractionEmbedded Systems Example of AbstractionWhy is Understanding Abstraction Useful?Abstraction AnalogyPhoto by Torsten Dettlaff from Pexels: https://www.pexels.com/photo/black-coupes-70912/Let's say you are in a driving school to get your driver's license.In the school, you learn how the main car components work:BrakesTransmissionSuspension systemBatteryYou don't need to understand at a technical level each component to learn how to drive.You just need a mental image as of what the brakes do when you press your foot down. Or what happens in the transmission when you change gears...and so on.You only need a basic mental representation of the component you are using.This means that you only need an abstraction of the car component.Our use of abstractions to learn and use things is everywhere:You don't need to know the inner parts of a car to drive it. But knowing how they work can make you a better driver.You don't need to know the inner parts of a bicycle to know how to ride it. But knowing how that works can make you a better rider.You don't need to know the inner parts of a function or framework in programming to use it. But knowing how those things work can make you a better programmer.Python Example of AbstractionThis is code written in Python. We are just using the print function to output the text \u201cHello world\u201d on the screen.To do this, you just need to know how to use the print function. You don't need to understand how it works under the hood.But it is good sometimes to understand how a certain function works in the background in order to use it more effectively. By knowing how it works:You will become a better programmer by understanding other people's codeYou will understand bugs in any libraries you use more easilyInstead of importing a whole library, you can copy the code you need from another project. A project with fewer dependencies will be easier to manageFor example, let's say you want to use the Python statistics module, which is a build-in module in Python. This means that Python already comes with the module in its library.You don't need to import it with PIP.Let's say I want to use the mean function:from statistics import mean \n\nrandomList = [-1.0, 2.5, 3.25, 5.75]\n\nprint(mean(randomList))main.pyIf there is no data, the Statistics.error will be raised.This will print out 2,625.But how does that work inside?If you go to https://github.com/python/cpython/blob/main/Lib/statistics.py, you will find at line 414 the code for the mean function:def mean(data):\n    \"\"\"\n    Return the sample arithmetic mean of data.\n    >>> mean([1, 2, 3, 4, 4])\n    2.8\n    >>> from fractions import Fraction as F\n    >>> mean([F(3, 7), F(1, 21), F(5, 3), F(1, 3)])\n    Fraction(13, 21)\n    >>> from decimal import Decimal as D\n    >>> mean([D(\"0.5\"), D(\"0.75\"), D(\"0.625\"), D(\"0.375\")])\n    Decimal('0.5625')\n    If ``data`` is empty, StatisticsError will be raised.\n    \"\"\"\n    T, total, n = _sum(data)\n    if n < 1:\n        raise StatisticsError('mean requires at least one data point')\n    return _convert(total / n, T)\n    \n    \n This is the inside code that runs when you use the statistics built in module Python gives you.General Electronics Example of AbstractionAny embedded system or electronic device requires circuits.Circuits are made up of many wires and components. Electronics engineers design these devices.In any electrical engineering or related program, college student not only learn how to design circuits, but also learn the actual physics behind each component that makes up the circuit.After college, many electrical engineers work on small circuits to develop electronics for calculators, microwaves, printers, and other devices.While electrical engineers work to make the circuits, who works to make the components?Well, some electrical engineers, materials engineers, applied physicists, and others.In this example, we will use applied physicists \u2013 scientists that apply physics to solve hard technical problems.Some applied physicists focus on the study and creation of the components used in a circuit.Some applied physicists bother with developing stuff that will become the building blocks of circuits like:LED'sLCD displaysCapacitorsPhoto resistorsElectrical engineers develop the circuits and electronics applications with these components.They don't care at the same level of detail as applied physics about the composition of these components.What they care about is using this materials to solve problems with electronics.That is abstraction!The applied physicists focus on the level of abstraction where components are created, with what materials, with the time to create them...The electrical engineer focuses on the level of abstraction where components are used to create circuits and devices.What each professional works in?Embedded Systems Example of AbstractionAn embedded systems engineer (engineers that create small computer systems with a dedicated function, like a toaster, scientific calculator, mouse, keyboard, and so on) needs to know how to code close to the hardware.To do that, they needs to have a good understanding of C and assembly language, since they are closely related to one another.For example, in critical embedded systems (real-time applications that process data and events that have critically defined time constraints) like:Medical devicesAirplane control systemsMissile guidance systemsAn engineer needs to be able to understand the C code and assembly. Assembly normally is used in very specific functions when pure assembly runs better than compiled C code.Example of different levels of abstractionEach box is a different level of abstraction.Those electrical components are made and studied by applied physics, material engineers, and some electrical engineers.Those software components (functions, classes) are used and created by the embedded systems programmers.Why is Understanding Abstraction Useful?Understanding abstraction will enable you to understand when you need to know something technical or just how to use it.Another reason to understand abstraction well is when you start learning a framework outside your work area.When you first learn a framework, you learn how to use it. As you learn how the framework works, you start understanding its limits. As a result, you learn how classes and functions are actually written.By understanding libraries, frameworks, and other aspects of programming, at an advanced level, you will be able to create your own libraries and frameworks.This way, you will be able to progress in your career and you may even be able to solve some hard work problems.Reducing dependencies in a project is another reason to understand abstraction.When you use a few functions from an outside library, you can see how the code is written and simply add your own function or class.That way, your project has fewer dependencies. This makes it easier for people to run your code without having to install other dependencies.Wrapping upThanks for reading! Now you know:What abstraction isThree abstraction examples: Python, general electronics, and embedded systemsWhy understanding abstraction is useful\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 8550, "excerpt": "Did you know that abstraction is one of the most important concepts for any\nsoftware engineer to know?\n\nThat's right!\n\nWithout the use of abstraction when developing new technologies and concepts, we\nwould never have been able to invent most software or even most things.\n\nSo, understanding this concept is truly important for software development.\n\nWhat is Abstraction in Programming?\nYou have used abstraction in many ways but you might not have known it. \n\nAbstraction thinking is one of the thing", "siteName": "freeCodeCamp.org", "publishedTime": "2022-07-13T22:54:18.000Z", "id": "285e4b36bccd7ca6e46bc3915601aeae8637db52", "url": "https://www.freecodecamp.org/news/what-is-abstraction-in-programming/", "domain": "freecodecamp.org", "date": "2023-12-27T18:05:24.311081", "resultUri": "http://localhost:3000/result/285e4b36bccd7ca6e46bc3915601aeae8637db52", "query": {"url": ["https://www.freecodecamp.org/news/what-is-abstraction-in-programming/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "What is Abstraction in Programming \u2013 And Why is it Useful?", "description": "Did you know that abstraction is one of the most important concepts for any software engineer to know? That's right! Without the use of abstraction when developing new technologies and concepts, we would never have been able to invent most software or even most things. So, understanding this concept is", "url": "https://www.freecodecamp.org/news/what-is-abstraction-in-programming/", "image": "https://www.freecodecamp.org/news/content/images/2022/07/Screenshot--518-.png", "image:width": "1177", "image:height": "672"}, "twitter": {"card": "summary_large_image", "title": "What is Abstraction in Programming \u2013 And Why is it Useful?", "description": "Did you know that abstraction is one of the most important concepts for any software engineer to know? That's right! Without the use of abstraction when developing new technologies and concepts, we would never have been able to invent most software or even most things. So, understanding this concept is", "url": "https://www.freecodecamp.org/news/what-is-abstraction-in-programming/", "image": "https://www.freecodecamp.org/news/content/images/2022/07/Screenshot--518-.png", "label1": "Written by", "data1": "Tiago Monteiro", "label2": "Filed under", "data2": "Programming, Coding, Python", "site": "@freecodecamp", "creator": "@TiagoMo53450790"}}}