{"title": "The key to learning fast is looking dumb", "byline": "freeCodeCamp.org", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>The key to learning fast is looking dumb</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>by Sun-Li Beatteay</p><p>A common trait I see in new developers is the fear of looking dumb. I know because I had the same concern. I thought that seeming stupid would cause others to question my capabilities and affect my career progression.</p><p>Nothing could have been further from the truth. To explain why let me tell a quick story.</p><p>One of my first tasks as a software engineer was to investigate a bug for an important customer. They were experiencing timeouts from one of our API endpoints and it was impacting their workload. Since I was still new to the company, I wanted to prove to my team that I didn\u2019t need hand-holding. To show them that they had hired the right person.</p><p>I spent hours parsing through the source code until I found the root of the problem: an inefficient SQL query. To fix the timeouts, I would need to optimize it. Unfortunately, the query was complex and took some time to understand what it did. But I determined to fix the issue myself. I wasn\u2019t a SQL expert by any means, but I knew enough. After all, how hard could it be to optimize one SQL query?</p><p>Very hard.</p><p>I spent the rest of that day and the next attempting to improve it. I got stuck and beat my head against the wall several times. But eventually, using Stack Overflow and lots of manual testing, I was able to hack together a solution. It was even more complicated than the original, but it did the job. I felt satisfied and elated as I put together my Pull Request and sent it to my teammate to review.</p><p>The happy feeling didn\u2019t last long.</p><p>Upon opening my Pull Request, my teammate noted that there was a much simpler solution. My face immediately flushed beet red. All that hard work only to end up with egg on my face.</p><p>Reluctantly, I asked if he could explain his simpler solution. I worried that he was going to scoff at my ineptitude, but he was more than happy to walk me through it. When we benchmarked it, it executed much faster than my Frankenstein solution.</p><p>My teammate was patient and understanding. He even gave me some resources I could use to follow up and learn more. Still, I was embarrassed to have wasted two days of work. What made it worse was I had considered asking for his help several times over those two days. I had decided against it each time because I didn\u2019t want to look dumb. I ended up looking even dumber as a result.</p><p>When I expressed this to him, he was sympathetic and said something that stuck with me.</p><blockquote>Next time, don\u2019t hesitate to ask about anything you don\u2019t understand \u2014 we don\u2019t expect you to know everything. It\u2019s better for me to spend 10 minutes explaining something than to have you running in circles for hours. It\u2019ll save everyone time in the end.</blockquote><figure><img alt=\"AbP1tV-KvbMI7A24L1GRVoWMGDDhaN9k5yfk\" height=\"533\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/AbP1tV-KvbMI7A24L1GRVoWMGDDhaN9k5yfk\" width=\"800\"/><figcaption>Photo by <a href=\"https://unsplash.com/photos/3V8xo5Gbusk?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\" target=\"_blank\" title=\"\">Kaleidico</a> on <a href=\"https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\" target=\"_blank\" title=\"\">Unsplash</a></figcaption></figure><p>While this story is specific to me, many new developers are going through similar ordeals. And it\u2019s understandable. When I started my first job, everyone around me seemed like an expert. It was intimidating as hell. I thought the best way to get to their level was to persist and struggle on my own. After all, as a self-taught developer, that\u2019s what I was used to.</p><p>The truth is, if you want to get to the level of your peers, you need to ask for their help. If this sounds like obvious advice, it\u2019s because it is. Many of us already know this intuitively. But it\u2019s important to be reminded of it. Common knowledge is rarely turned into common practice.</p><p>Have you ever stopped yourself from asking for help? Have you refused to ask for assistance even when the situation kept getting worse? <a href=\"https://www.goodtherapy.org/blog/why-is-it-so-hard-to-ask-for-help-0616164\" rel=\"noopener\">There\u2019s a good chance that you have</a>.</p><p>And why did you stop yourself? Maybe it wasn\u2019t a good time to ask. Maybe you didn\u2019t want to be bothersome. Or maybe, if you\u2019re like me, fear played a big factor. However, this fear is holding us from back from an essential part of learning: <strong>feedback</strong>.</p><figure><img alt=\"YU6sPYgBEzQ1Ttd6zPHvBzeAE3eCYfPfIOe8\" height=\"533\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/YU6sPYgBEzQ1Ttd6zPHvBzeAE3eCYfPfIOe8\" width=\"800\"/><figcaption>Photo by <a href=\"https://unsplash.com/photos/Lks7vei-eAg?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\" target=\"_blank\" title=\"\">Charles ?? o</a>n Un<a href=\"https://unsplash.com/search/photos/feedback?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\" target=\"_blank\" title=\"\">splash  </a></figcaption></figure><h3 id=\"feedback-is-crucial\"><a href=\"https://unsplash.com/search/photos/feedback?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\">Feedback is crucial</a></h3><p><a href=\"https://unsplash.com/search/photos/feedback?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\">In this context, I define feedback as any advice you get from a peer. It can come in the form of a teammate reviewing your code, brainstorming together about a particular bug, or simply asking them, \u201cWhat does this do?\u201d</a></p><p><a href=\"https://unsplash.com/search/photos/feedback?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" rel=\"noopener\">While it\u2019s true that self-study is important, it\u2019s only one aspect of learning. </a><a href=\"https://books.google.com/books?hl=en&amp;lr=&amp;id=Yy9EBgAAQBAJ&amp;oi=fnd&amp;pg=PA67&amp;dq=student+feedback+learning+development&amp;ots=bsl5g1jIci&amp;sig=q_FrdMcI-I4Gp4BC87eB7ZbT1pw#v=onepage&amp;q=student%20feedback%20learning%20development&amp;f=false\" rel=\"noopener\">Feedback is another vital piece of the puzzle</a>:</p><blockquote>It has long been recognized, by researchers and practitioners alike, that feedback plays a decisive role in learning and development [\u2026] We learn faster, and much more effectively, when we have a clear sense of how well we are doing, and what we might need to do in order to improve.</blockquote><p>And yet, it\u2019s tough to ask for feedback. Receiving negative criticism can feel like a personal insult. You may feel like you \u201cshould know this already\u201d and asking for help will be an admission of your naivety. But struggling with a task in isolation leads to stress, and <a href=\"http://business.time.com/2007/08/06/stress_makes_you_stupid/\" rel=\"noopener\">stress makes you stupid</a>.</p><p>Being unwilling to look stupid in the short term will only make you appear more foolish in the long run. So instead of ruminating on the momentary unease, focus on your long term goal of mastery. The sting of negative comments are fleeting but the benefits of learning are timeless.</p><h3 id=\"immediate-results\">Immediate Results</h3><p>The best thing about feedback is that the results are immediate. You will instantly know more than you did before. Consistently asking for feedback will make the pace of your learning skyrocket. You\u2019ll find yourself asking questions much more often.</p><p>Take it from me. Searching for the phrases <em>What does that do? </em>or <em>What does that mean? </em>in my Slack search reveals the litany of \u201cstupid\u201d questions I\u2019ve asked.</p><figure><img alt=\"o4ZhonNwlK0JeVpx5GLItFoPt9AIroFivh08\" height=\"400\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/o4ZhonNwlK0JeVpx5GLItFoPt9AIroFivh08\" width=\"600\"/></figure><p>Did I feel dumb asking those questions? Oh yeah. Did I learn a lot because of it? Absolutely.</p><h3 id=\"asking-questions-makes-you-look-smarter\">Asking questions makes you look smarter</h3><p>If I haven\u2019t convinced you yet, then I\u2019ve saved the best for last. The truth is that asking questions won\u2019t make you stupid. <a href=\"https://hbr.org/ideacast/2016/06/asking-for-advice-makes-people-think-youre-smarter.html\" rel=\"noopener\">Quite the opposite</a>:</p><blockquote>We actually view people who seek our advice as much more competent than people who forego the opportunity to seek advice. This is because being asked for advice is flattering, it feels good. They\u2019re asking for my advice because they think I\u2019m smart and I know the answer. I think they\u2019re smart because I\u2019m going to tell them things that will be useful and help them do the task better.</blockquote><p>Asking peers for their input makes them feel important and needed. It turns out, people like to feel that way. And in return, they view you as competent for having the courage to ask. It\u2019s a page straight out of Dale Carnegie\u2019s <a href=\"https://en.wikipedia.org/wiki/How_to_Win_Friends_and_Influence_People\" rel=\"noopener\"><em>How to Make Friends and Influence People</em></a><em>.</em></p><figure><img alt=\"Fw541hcTedVRaugTlQwFoU6lgO4QhdXAf52A\" height=\"400\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/Fw541hcTedVRaugTlQwFoU6lgO4QhdXAf52A\" width=\"600\"/></figure><p>Lastly, you will be a godsend to those who are struggling with the same problems. More than once have I asked for help on a specific issue only to have another engineer privately thank me for asking. They had been struggling with the same issue but were too self-conscious to ask. Everybody is a \u201cjunior\u201d in something.</p><p>In the end, the fear of seeming stupid is exactly that: a baseless fear propped up by insecurity. Not only will asking for feedback and showing vulnerability make you appear more competent, but it will also <em>make </em>you competent.</p><p>So the next time you find yourself stuck, do yourself a favor and ask for help. You may feel dumb now but give it time. They\u2019ll be one seeking your advice soon enough.</p><h3 id=\"more-from-me-\">More From Me:</h3><p><a href=\"https://medium.freecodecamp.org/am-i-a-real-software-engineer-yet-a0f38a2248c0\" rel=\"noopener\"><strong><em>Am I a \u201creal\u201d Software Engineer yet?</em></strong></a><br/><a href=\"https://medium.freecodecamp.org/am-i-a-real-software-engineer-yet-a0f38a2248c0\" rel=\"noopener\">medium.freecodecamp.org</a><a href=\"https://medium.freecodecamp.org/a-tale-of-two-websites-the-importance-of-slow-progress-and-self-reflection-4a09ffcbd059\" rel=\"noopener\"><strong>A Tale of Two Websites</strong></a><br/><a href=\"https://medium.freecodecamp.org/a-tale-of-two-websites-the-importance-of-slow-progress-and-self-reflection-4a09ffcbd059\" rel=\"noopener\"><em>The importance of slow progress and self-reflection</em>medium.freecodecamp.org</a><a href=\"https://hackernoon.com/what-it-took-to-land-my-dream-software-engineering-job-17c01240266b\" rel=\"noopener\"><strong>What it took to land my dream software engineering job</strong></a><br/><a href=\"https://hackernoon.com/what-it-took-to-land-my-dream-software-engineering-job-17c01240266b\" rel=\"noopener\"><em>Even before I started my job search in January 2018, I knew I wanted to work at DigitalOcean. The culture, the learning\u2026</em>hackernoon.com</a></p>\n</section>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nby Sun-Li BeatteayA common trait I see in new developers is the fear of looking dumb. I know because I had the same concern. I thought that seeming stupid would cause others to question my capabilities and affect my career progression.Nothing could have been further from the truth. To explain why let me tell a quick story.One of my first tasks as a software engineer was to investigate a bug for an important customer. They were experiencing timeouts from one of our API endpoints and it was impacting their workload. Since I was still new to the company, I wanted to prove to my team that I didn\u2019t need hand-holding. To show them that they had hired the right person.I spent hours parsing through the source code until I found the root of the problem: an inefficient SQL query. To fix the timeouts, I would need to optimize it. Unfortunately, the query was complex and took some time to understand what it did. But I determined to fix the issue myself. I wasn\u2019t a SQL expert by any means, but I knew enough. After all, how hard could it be to optimize one SQL query?Very hard.I spent the rest of that day and the next attempting to improve it. I got stuck and beat my head against the wall several times. But eventually, using Stack Overflow and lots of manual testing, I was able to hack together a solution. It was even more complicated than the original, but it did the job. I felt satisfied and elated as I put together my Pull Request and sent it to my teammate to review.The happy feeling didn\u2019t last long.Upon opening my Pull Request, my teammate noted that there was a much simpler solution. My face immediately flushed beet red. All that hard work only to end up with egg on my face.Reluctantly, I asked if he could explain his simpler solution. I worried that he was going to scoff at my ineptitude, but he was more than happy to walk me through it. When we benchmarked it, it executed much faster than my Frankenstein solution.My teammate was patient and understanding. He even gave me some resources I could use to follow up and learn more. Still, I was embarrassed to have wasted two days of work. What made it worse was I had considered asking for his help several times over those two days. I had decided against it each time because I didn\u2019t want to look dumb. I ended up looking even dumber as a result.When I expressed this to him, he was sympathetic and said something that stuck with me.Next time, don\u2019t hesitate to ask about anything you don\u2019t understand \u2014 we don\u2019t expect you to know everything. It\u2019s better for me to spend 10 minutes explaining something than to have you running in circles for hours. It\u2019ll save everyone time in the end.Photo by Kaleidico on UnsplashWhile this story is specific to me, many new developers are going through similar ordeals. And it\u2019s understandable. When I started my first job, everyone around me seemed like an expert. It was intimidating as hell. I thought the best way to get to their level was to persist and struggle on my own. After all, as a self-taught developer, that\u2019s what I was used to.The truth is, if you want to get to the level of your peers, you need to ask for their help. If this sounds like obvious advice, it\u2019s because it is. Many of us already know this intuitively. But it\u2019s important to be reminded of it. Common knowledge is rarely turned into common practice.Have you ever stopped yourself from asking for help? Have you refused to ask for assistance even when the situation kept getting worse? There\u2019s a good chance that you have.And why did you stop yourself? Maybe it wasn\u2019t a good time to ask. Maybe you didn\u2019t want to be bothersome. Or maybe, if you\u2019re like me, fear played a big factor. However, this fear is holding us from back from an essential part of learning: feedback.Photo by Charles ?? on Unsplash  Feedback is crucialIn this context, I define feedback as any advice you get from a peer. It can come in the form of a teammate reviewing your code, brainstorming together about a particular bug, or simply asking them, \u201cWhat does this do?\u201dWhile it\u2019s true that self-study is important, it\u2019s only one aspect of learning. Feedback is another vital piece of the puzzle:It has long been recognized, by researchers and practitioners alike, that feedback plays a decisive role in learning and development [\u2026] We learn faster, and much more effectively, when we have a clear sense of how well we are doing, and what we might need to do in order to improve.And yet, it\u2019s tough to ask for feedback. Receiving negative criticism can feel like a personal insult. You may feel like you \u201cshould know this already\u201d and asking for help will be an admission of your naivety. But struggling with a task in isolation leads to stress, and stress makes you stupid.Being unwilling to look stupid in the short term will only make you appear more foolish in the long run. So instead of ruminating on the momentary unease, focus on your long term goal of mastery. The sting of negative comments are fleeting but the benefits of learning are timeless.Immediate ResultsThe best thing about feedback is that the results are immediate. You will instantly know more than you did before. Consistently asking for feedback will make the pace of your learning skyrocket. You\u2019ll find yourself asking questions much more often.Take it from me. Searching for the phrases What does that do? or What does that mean? in my Slack search reveals the litany of \u201cstupid\u201d questions I\u2019ve asked.Did I feel dumb asking those questions? Oh yeah. Did I learn a lot because of it? Absolutely.Asking questions makes you look smarterIf I haven\u2019t convinced you yet, then I\u2019ve saved the best for last. The truth is that asking questions won\u2019t make you stupid. Quite the opposite:We actually view people who seek our advice as much more competent than people who forego the opportunity to seek advice. This is because being asked for advice is flattering, it feels good. They\u2019re asking for my advice because they think I\u2019m smart and I know the answer. I think they\u2019re smart because I\u2019m going to tell them things that will be useful and help them do the task better.Asking peers for their input makes them feel important and needed. It turns out, people like to feel that way. And in return, they view you as competent for having the courage to ask. It\u2019s a page straight out of Dale Carnegie\u2019s How to Make Friends and Influence People.Lastly, you will be a godsend to those who are struggling with the same problems. More than once have I asked for help on a specific issue only to have another engineer privately thank me for asking. They had been struggling with the same issue but were too self-conscious to ask. Everybody is a \u201cjunior\u201d in something.In the end, the fear of seeming stupid is exactly that: a baseless fear propped up by insecurity. Not only will asking for feedback and showing vulnerability make you appear more competent, but it will also make you competent.So the next time you find yourself stuck, do yourself a favor and ask for help. You may feel dumb now but give it time. They\u2019ll be one seeking your advice soon enough.More From Me:Am I a \u201creal\u201d Software Engineer yet?medium.freecodecamp.orgA Tale of Two WebsitesThe importance of slow progress and self-reflectionmedium.freecodecamp.orgWhat it took to land my dream software engineering jobEven before I started my job search in January 2018, I knew I wanted to work at DigitalOcean. The culture, the learning\u2026hackernoon.com\n\n                        \n                    \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 8062, "excerpt": "by Sun-Li Beatteay\n\nThe key to learning fast is looking dumb\nPhoto by Nick Fewings\n[https://unsplash.com/photos/1iesvNXsuZs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText] \non Unsplash\n[https://unsplash.com/search/photos/stupid?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\nA common trait I see in new developers is the fear of looking dumb. I know\nbecause I had the same concern. I thought that seeming stupid would cause others\nto question my capabilities", "siteName": "freeCodeCamp.org", "publishedTime": "2019-05-06T15:53:41.000Z", "id": "d618f7d576fd6840bf1943fde8507ae7be329646", "url": "https://www.freecodecamp.org/news/sometimes-the-key-to-learning-fast-is-looking-dumb-9166fb78c234/", "domain": "freecodecamp.org", "date": "2023-12-27T18:10:36.317084", "resultUri": "http://localhost:3000/result/d618f7d576fd6840bf1943fde8507ae7be329646", "query": {"url": ["https://www.freecodecamp.org/news/sometimes-the-key-to-learning-fast-is-looking-dumb-9166fb78c234/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "The key to learning fast is looking dumb", "description": "by Sun-Li Beatteay The key to learning fast is looking dumb Photo by Nick Fewings [https://unsplash.com/photos/1iesvNXsuZs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]  on Unsplash [https://unsplash.com/search/photos/stupid?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText] A common trait I see in new developers is the fear of looking dumb. I know because I had the same concern. I thought that seeming stupid would cause others", "url": "https://www.freecodecamp.org/news/sometimes-the-key-to-learning-fast-is-looking-dumb-9166fb78c234/", "image": "https://cdn-media-1.freecodecamp.org/images/1*ZlARZfqv1GrsBKLu5ZGZBw.jpeg", "image:width": "800", "image:height": "533"}, "twitter": {"card": "summary_large_image", "title": "The key to learning fast is looking dumb", "description": "by Sun-Li Beatteay The key to learning fast is looking dumb Photo by Nick Fewings [https://unsplash.com/photos/1iesvNXsuZs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]  on Unsplash [https://unsplash.com/search/photos/stupid?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText] A common trait I see in new developers is the fear of looking dumb. I know because I had the same concern. I thought that seeming stupid would cause others", "url": "https://www.freecodecamp.org/news/sometimes-the-key-to-learning-fast-is-looking-dumb-9166fb78c234/", "image": "https://cdn-media-1.freecodecamp.org/images/1*ZlARZfqv1GrsBKLu5ZGZBw.jpeg", "label1": "Written by", "data1": "freeCodeCamp.org", "label2": "Filed under", "data2": "Programming, Learning, Software Development, Technology, Software Engineering", "site": "@freecodecamp"}}}