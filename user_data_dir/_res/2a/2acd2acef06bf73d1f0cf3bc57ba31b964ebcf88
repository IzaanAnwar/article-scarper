{"title": "How to automate Anaconda installs on AWS EC2 with CloudFormation", "byline": "freeCodeCamp.org", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to automate Anaconda installs on AWS EC2 with CloudFormation</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>by Daniel Barker</p><h4 id=\"tl-dr\"><strong>TL;DR</strong></h4><p><em>Are you struggling to automate the install of Anaconda on AWS (Amazon Web Services) EC2 instances and install necessary Python packages for your project? I was \u2014 so I wrote a simple bash script to handle it.</em></p><p><em>Read on for a quick tutorial or check out the <a href=\"https://github.com/dcbark01/AnacondaInstallEC2\" rel=\"noopener\">Github repo</a> containing the script and CloudFormation template.</em></p><p>For some reason I don\u2019t understand, Amazon insists on using Python 2 on their standard Amazon Linux 2 EC2 instances. Of course, on a project I\u2019ve recently been working on, I needed Python3. Per usual, virtual environments to the rescue.</p><p>Normally, I would just install Anaconda and be good-to-go. However, my project also makes heavy use of AWS\u2019s CloudFormation tools to automatically deploy stacks of resources from a template, so I needed a way of automating the install. I also wanted the freshly-minted EC2 instances to have the AWS CLI and Boto3 Python package installed.</p><p>Fortunately, AWS provides a \u2018UserData\u2019 key when provisioning EC2 instances that can run user defined bash commands and run shell scripts.</p><p>As often is the case, something that I thought would be simple ended up taking up several hours, but hopefully this script will help save you the same headache. Here\u2019s a quick tutorial on how to use the script and template, which you can get at this link:</p><p><a href=\"https://github.com/dcbark01/AnacondaInstallEC2\" rel=\"noopener\">** Github Repo Link Here **</a></p><h4 id=\"step-1-open-the-cloudformation-template-in-the-aws-console\"><strong>Step 1: Open the CloudFormation Template in the AWS Console</strong></h4><p>Get the template file from the repo link above, and open it in the CloudFormation designer.</p><figure><img alt=\"1R9-HVEE0hQiZFOeCjl9Op6Mj3aTt1PVNcGb\" height=\"465\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/1R9-HVEE0hQiZFOeCjl9Op6Mj3aTt1PVNcGb\" width=\"800\"/></figure><p>Click \u2018create stack\u2019 in the upper left corner, and input the necessary parameters (your AWS API key/secret, SSH Key Name, etc.)</p><figure><img alt=\"9oYgo6OW0m3E4mqdVIt5YuVv61bGETIEUc13\" height=\"324\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/9oYgo6OW0m3E4mqdVIt5YuVv61bGETIEUc13\" width=\"800\"/></figure><p>Click through the rest of the prompts with \u2018next\u2019 and then create the stack. You should get a \u2018CREATE_IN_PROGRESS\u2019 message like the one below\u2026</p><figure><img alt=\"MiDJzfDTTLXGaqAAwJcPP2zRSOArTHrAbHKP\" height=\"32\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/MiDJzfDTTLXGaqAAwJcPP2zRSOArTHrAbHKP\" width=\"800\"/></figure><p>\u2026And then a \u2018CREATE_COMPLETE\u2019 when finished (this can take quite a bit of time \u2014 10 minutes often \u2014 Anaconda is quite a hefty install):</p><figure><img alt=\"djulPCKTa9rphsAof0nNJDZ2g4HLn4l87xZ0\" height=\"31\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/djulPCKTa9rphsAof0nNJDZ2g4HLn4l87xZ0\" width=\"800\"/></figure><h4 id=\"step-2-ssh-into-your-new-instance-to-verify-the-install\"><strong>Step 2: SSH into your new instance to verify the install</strong></h4><p>Using your favorite SSH client, log in to your new instance. You should be able to quickly check that Anaconda successfully installed by typing:</p><pre><code>conda activate python3</code></pre><p>Verify that the prompt on the SSH client changes to show the \u2018python3\u2019 activate being active. Also, you can verify that the AWS CLI properly installed by typing:</p><pre><code>cd ~/.awsls</code></pre><p>You should see the \u2018credentials\u2019 file created in that directory.</p><p>If you meet the above checks, you should be done. Good luck with the rest of your project!</p>\n</section>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nby Daniel BarkerTL;DRAre you struggling to automate the install of Anaconda on AWS (Amazon Web Services) EC2 instances and install necessary Python packages for your project? I was \u2014 so I wrote a simple bash script to handle it.Read on for a quick tutorial or check out the Github repo containing the script and CloudFormation template.For some reason I don\u2019t understand, Amazon insists on using Python 2 on their standard Amazon Linux 2 EC2 instances. Of course, on a project I\u2019ve recently been working on, I needed Python3. Per usual, virtual environments to the rescue.Normally, I would just install Anaconda and be good-to-go. However, my project also makes heavy use of AWS\u2019s CloudFormation tools to automatically deploy stacks of resources from a template, so I needed a way of automating the install. I also wanted the freshly-minted EC2 instances to have the AWS CLI and Boto3 Python package installed.Fortunately, AWS provides a \u2018UserData\u2019 key when provisioning EC2 instances that can run user defined bash commands and run shell scripts.As often is the case, something that I thought would be simple ended up taking up several hours, but hopefully this script will help save you the same headache. Here\u2019s a quick tutorial on how to use the script and template, which you can get at this link:** Github Repo Link Here **Step 1: Open the CloudFormation Template in the AWS ConsoleGet the template file from the repo link above, and open it in the CloudFormation designer.Click \u2018create stack\u2019 in the upper left corner, and input the necessary parameters (your AWS API key/secret, SSH Key Name, etc.)Click through the rest of the prompts with \u2018next\u2019 and then create the stack. You should get a \u2018CREATE_IN_PROGRESS\u2019 message like the one below\u2026\u2026And then a \u2018CREATE_COMPLETE\u2019 when finished (this can take quite a bit of time \u2014 10 minutes often \u2014 Anaconda is quite a hefty install):Step 2: SSH into your new instance to verify the installUsing your favorite SSH client, log in to your new instance. You should be able to quickly check that Anaconda successfully installed by typing:conda activate python3Verify that the prompt on the SSH client changes to show the \u2018python3\u2019 activate being active. Also, you can verify that the AWS CLI properly installed by typing:cd ~/.awslsYou should see the \u2018credentials\u2019 file created in that directory.If you meet the above checks, you should be done. Good luck with the rest of your project!\n\n                        \n                    \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 3048, "excerpt": "by Daniel Barker\n\nHow to automate Anaconda installs on AWS EC2 with CloudFormation\nTL;DR\nAre you struggling to automate the install of Anaconda on AWS (Amazon Web\nServices) EC2 instances and install necessary Python packages for your project?\nI was \u2014 so I wrote a simple bash script to handle it.\n\nRead on for a quick tutorial or check out the Github repo\n[https://github.com/dcbark01/AnacondaInstallEC2] containing the script and\nCloudFormation template.\n\nFor some reason I don\u2019t understand, Amazon", "siteName": "freeCodeCamp.org", "publishedTime": "2019-04-23T12:26:00.000Z", "id": "2acd2acef06bf73d1f0cf3bc57ba31b964ebcf88", "url": "https://www.freecodecamp.org/news/how-to-automate-installation-of-anaconda-on-aws-ec2-instances-e9db8aa0570d/", "domain": "freecodecamp.org", "date": "2023-12-27T18:11:39.058397", "resultUri": "http://localhost:3000/result/2acd2acef06bf73d1f0cf3bc57ba31b964ebcf88", "query": {"url": ["https://www.freecodecamp.org/news/how-to-automate-installation-of-anaconda-on-aws-ec2-instances-e9db8aa0570d/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to automate Anaconda installs on AWS EC2 with CloudFormation", "description": "by Daniel Barker How to automate Anaconda installs on AWS EC2 with CloudFormation TL;DR Are you struggling to automate the install of Anaconda on AWS (Amazon Web Services) EC2 instances and install necessary Python packages for your project? I was \u2014 so I wrote a simple bash script to handle", "url": "https://www.freecodecamp.org/news/how-to-automate-installation-of-anaconda-on-aws-ec2-instances-e9db8aa0570d/", "image": "https://cdn-media-1.freecodecamp.org/images/1*urq81shE8JyiAM7BMYN_tQ.jpeg", "image:width": "800", "image:height": "450"}, "twitter": {"card": "summary_large_image", "title": "How to automate Anaconda installs on AWS EC2 with CloudFormation", "description": "by Daniel Barker How to automate Anaconda installs on AWS EC2 with CloudFormation TL;DR Are you struggling to automate the install of Anaconda on AWS (Amazon Web Services) EC2 instances and install necessary Python packages for your project? I was \u2014 so I wrote a simple bash script to handle", "url": "https://www.freecodecamp.org/news/how-to-automate-installation-of-anaconda-on-aws-ec2-instances-e9db8aa0570d/", "image": "https://cdn-media-1.freecodecamp.org/images/1*urq81shE8JyiAM7BMYN_tQ.jpeg", "label1": "Written by", "data1": "freeCodeCamp.org", "label2": "Filed under", "data2": "AWS, Tech, Cloud Computing, DevOps, Programming", "site": "@freecodecamp"}}}