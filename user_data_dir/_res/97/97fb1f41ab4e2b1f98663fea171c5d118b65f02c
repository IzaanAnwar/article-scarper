{"title": "These are the best JavaScript chart libraries for 2019", "byline": "Arthur Puszynski", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>These are the best JavaScript chart libraries for 2019</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>First, a brief history:</p><p>With data collection and use continuing to increase exponentially, the need to visualize this data is becoming more important. Developers seek to consolidate millions of database records into beautiful charts and dashboards that humans can quickly and intuitively interpret.</p><p>Data visualization technology has continued to improve over the past decade and many advanced chart libraries are now available to consumers. In the early 2000s, chart generation was dominated by server side image bitmap charts. Plugins such as Flash and Silverlight offered a more interactive charting experience but with a heavy toll on download speed, battery life and system resources.</p><p>With the explosion of mobile and tablet usage, plugins were no longer supported on major platforms and developers had to shift to open client side technologies that could run everywhere. At the same time, the advent of very high resolution screens and more common zooming through touch gestures brought resolution independent vector charts to the forefront.</p><p>Enter the current era of data visualization dominated by JavaScript and SVG (Scalable Vector Graphics). Charts now run on all browsers, without special plugins, support interactivity and animations and look sharp even on the highest resolution devices. Reviewing over 50 visualization libraries, these 9 products stood out:</p><h4 id=\"d3-js\"><a href=\"https://d3js.org/\" rel=\"noopener\"><strong>D3.js</strong></a></h4><figure><img alt=\"S6EaFX5GX8yUIDvllrXDeYc2fONsQL-8jMUL\" height=\"397\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/S6EaFX5GX8yUIDvllrXDeYc2fONsQL-8jMUL\" width=\"700\"/></figure><p>D3.js is a very extensive and powerful graphics JavaScript library. It allows you to bind arbitrary data to a Document Object Model (DOM), and then apply data-driven transformations to the document.</p><p>D3 goes well beyond typical charting libraries, including many other smaller technical modules such as axes, colors, hierarchies, contours, easing, polygons, and more. All this makes for a steep learning curve.</p><p>Trying to create a simple chart can be complicated. All elements including the axes, and other chart items need to be defined explicitly. Many samples show how CSS can be used to style chart elements. No charting-based features apply automatically. If you want to get into the weeds and use creativity to fully control every element, it is the best choice. Working against the clock to meet data visualization project requirements it may not be the best choice starting from scratch.</p><p>D3.js can be a building block for a charting library. Developers have used D3 to make it easier to use chart solutions that consume it, such as NVD3.</p><p>D3.js is open source and free to use.</p><h4 id=\"jscharting\"><a href=\"https://jscharting.com/\" rel=\"noopener\"><strong>JSCharting</strong></a></h4><figure><img alt=\"hTX6DIAPWYObB4LCQ--zfJIRrW1q85peGy3A\" height=\"324\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/hTX6DIAPWYObB4LCQ--zfJIRrW1q85peGy3A\" width=\"700\"/></figure><p>JSCharting chart library supports a large number of chart types including maps, gantt, stock and others that often require separate libraries to use. It includes built-in maps of all world countries, and a library of SVG icons. A suite of standalone micro charts can render in any chart labels or in any div element on a page. UI controls (UiItems) are also included allowing for richer interactive charts. To control data or visualization variables in real-time is easy and charts can be exported to SVG, PNG, PDF, and JPG formats.</p><p>The gallery is divided into chart type and feature samples. The chart styling is polished and yields some clean looking charts. The overall visuals provide a clean and professional charting experience.</p><p>Included samples use a configuration object to customize charts. The settings to create and control chart types are very simple to use. Few property settings are needed to specify more complex chart types and JSCharting has strong and dynamic defaults meaning it attempts to choose the best settings for the scenarios automatically.</p><p>The documentation includes many tutorials and thorough API property descriptions. Many properties include example usage and sample links.</p><p>JSCharting is free for non commercial and personal use and also offers commercial license options that includes all chart types and products for a single fee.</p><h4 id=\"highcharts\"><a href=\"https://www.highcharts.com/\" rel=\"noopener\"><strong>Highcharts</strong></a></h4><figure><img alt=\"2syqkeQ3kQi2mhDSFfsqV57jiG810QWR7b7G\" height=\"267\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/2syqkeQ3kQi2mhDSFfsqV57jiG810QWR7b7G\" width=\"700\"/></figure><p>Highcharts is a popular JavaScript charting library used by many of the world\u2019s largest companies. Charts are generated using SVG and fallback to VML for backward compatibility all the way to IE6/IE8. The demo charts demonstrate a fairly rich feature set but don\u2019t wow visually. General documentation includes tutorials for many relevant topics and the API documentation is thorough.</p><p>The chart uses configuration options to create charts and the API is easy to use.</p><p>Highcharts is free for non-commercial and personal use. Commercial licensing is required for other usage and stock, map and gantt charts are licensed separately.</p><h4 id=\"amcharts\"><a href=\"https://www.amcharts.com/\" rel=\"noopener\"><strong>amCharts</strong></a></h4><figure><img alt=\"g5AOK1ltx8xdH2JFXp3iw7fcZAYJ5pthfFdG\" height=\"259\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/g5AOK1ltx8xdH2JFXp3iw7fcZAYJ5pthfFdG\" width=\"700\"/></figure><p>amCharts has recently released their version 4 which adds a strong SVG animation engine that allows creating movie-like scenes.</p><p>The demo charts look very nice. Most demos offer a number of palettes and a slider UI to adjust chart variables in real-time. Documentation includes many tutorials and full API property descriptions.</p><p>Creating a chart feels slightly different from the configuration-based approach, and instead uses a more declarative API. It requires slightly more code to configure charts but gives a better code completion experience.</p><p>amCharts offers a free license with branded charts and paid licenses for other usage.</p><h4 id=\"google-charts\"><a href=\"https://developers.google.com/chart/\" rel=\"noopener\"><strong>Google Charts</strong></a></h4><figure><img alt=\"fPisdLR3HjGBrfbCAzc75uXc5IO9wsf2wj-f\" height=\"259\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/fPisdLR3HjGBrfbCAzc75uXc5IO9wsf2wj-f\" width=\"700\"/></figure><p>Google charts are powerful and easy to use.</p><p>The sample charts look clean and are easy on the eyes. The gallery and extended gallery shows many chart types, but pressing the hamburger menu reveals more types (like calendar) that are not shown in these gallery lists.</p><p>Each chart type has a dedicated tutorial with live examples. The tutorials include code for the related features and API listings. This is a pleasant experience getting started with a new chart library.</p><p>Charts are customized using the configuration options object. Data sets are populated using a DataTable class which can be consumed by all charts. Each chart type has unique options listed in the type specific tutorials. Property naming is standardized and many options work across all types.</p><p>Google charts is free, but there is a caveat. It is a web service and cannot be hosted locally. In the past Google has retired API\u2019s so if your usage is mission critical you may want to pick another option.</p><h4 id=\"zingchart\"><a href=\"https://www.zingchart.com/\" rel=\"noopener\"><strong>ZingChart</strong></a></h4><figure><img alt=\"7UxG9uthgcsC-fYPf0GEXgJY6A3X6C187ggy\" height=\"319\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/7UxG9uthgcsC-fYPf0GEXgJY6A3X6C187ggy\" width=\"700\"/></figure><p>ZingChart offers many chart types and integrates with angular, react, and other frameworks. It has a strong feature set with many customization options.</p><p>The demo charts show a range of styling themes, some of which look better than others, but the options to style them as needed are there. Demos don\u2019t demonstrate all the available chart types.</p><p>Documentation includes tutorials for all the available types, a good number of features, and full API listing.</p><p>ZingChart uses configuration options to customize charts. Samples include many property settings such as font styling. These can get in the way of understanding what settings are required for a given chart.</p><p>ZingChart can be used for free with branding. Paid licensing is available for non-branded usage.</p><h4 id=\"fusioncharts\"><a href=\"https://www.fusioncharts.com/\" rel=\"noopener\"><strong>FusionCharts</strong></a></h4><figure><img alt=\"b7k3uk0H59ImJz2wBVa6zBRCx8J6euicz1ZW\" height=\"319\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/b7k3uk0H59ImJz2wBVa6zBRCx8J6euicz1ZW\" width=\"700\"/></figure><p>FusionCharts has been around for many years starting as a Flash-based chart plugin. It is a robust chart visualization library. It supports many data formats including XML, JSON, and JavaScript, works in modern browsers and is backwards compatible back to IE6. Many JavaScript frameworks and server-side programming languages are also supported.</p><p>The chart gallery includes a large number of examples and they have a clean visual appearance.</p><p>Documentation includes good API descriptions, and examples of each chart type. The configuration properties are grouped by tasks and chart features.</p><p>Charts are created using configuration based options and is relatively easy to use. The list of properties can be lengthy when digging deeper into the API. All configuration properties are shallow such as {chartLeftMargin, showAlternateHGridColor }. It seems like an attempt to improve code completion.</p><p>FusionCharts is free for personal use with chart branding. Paid licensing is available for unbranded and commercial use.</p><h4 id=\"koolchart\"><a href=\"https://www.koolchart.com/\" rel=\"noopener\"><strong>KOOLCHART</strong></a></h4><figure><img alt=\"3iWJw51bCnMDw4QKpjP-0k-lZsoX0DUNnzL5\" height=\"319\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/3iWJw51bCnMDw4QKpjP-0k-lZsoX0DUNnzL5\" width=\"700\"/></figure><p>KoolChart is an HTML 5 canvas-based JavaScript charting library. A mapping and grid product is also available.</p><p>Their new v5 release includes a more interactive feature set and updated styling. The visuals are clean and modern. The use of canvas offers better performance at the expense of being raster based.</p><p>The samples use a string based XML to apply chart options which seems less practical than other approaches. These options look like HTML5 but are set through a JavaScript string.</p><p>The API is well documented with example charts for each property. A 173 page PDF manual is also available.</p><p>A two month trial period is available for evaluation. Licensing is required after the trial period expires.</p><h4 id=\"chart-js\"><a href=\"https://www.chartjs.org/\" rel=\"noopener\"><strong>Chart.js</strong></a></h4><figure><img alt=\"ewHuQvOha7Jgzn2rLM8jzoz5caFNhU7IuQCw\" height=\"257\" loading=\"lazy\" src=\"https://cdn-media-1.freecodecamp.org/images/ewHuQvOha7Jgzn2rLM8jzoz5caFNhU7IuQCw\" width=\"700\"/></figure><p>Chart.js is an open source JavaScript library supporting 8 chart types. It is a small js library at just 60kb. Types include line charts, bar charts, area charts, radar, pie charts, bubble, scatter plots, and mixed. A time series is also supported. It uses canvas element for rendering and is responsive on window resize to maintain scale granularity. It is backwards compatible to IE9. Polyfills are available to work with IE7 as well.</p><p>The sample visuals are fairly modern looking and include initial animations when drawing for the first time. It animates smoothly when adding series or data points in real-time. Chart options can be modified after and calling an update() function redraws the chart.</p><p>Sample source code is not shown the website gallery but is available in the GitHub repo. Configuration options are used to create and modify charts. The options API is clean and intuitive.</p><p>The documentation is thorough and includes tutorials with property API and code snippets.</p><p>Chart.js is an open source library and free to use for personal and commercial use which is a plus. The limited number of types can be an issue for more advanced dashboard requirements.</p><h4 id=\"conclusion\"><strong>Conclusion</strong></h4><p>The ecosystem of JavaScript charting libraries has evolved considerably over the last decade. Today, there are a large number of charting products that meet very diverse requirements, serving a wide range of projects though hundreds of chart types. Most libraries provide a free trial or branded version enabling you to evaluate the chart effectiveness with your own data, loading and project complexity.</p><p>It is easy for most chart libraries to deal with simple curated data sets and static visualizations. However, charts may not always handle things smoothly when real-world, dynamic data is visualized. More work may be required to adjust and arrange elements so that charts appear correct and this manual tweaking can break as new dynamic data is visualized.</p><p>To select the best JS chart solution for your unique needs, I recommend testing your own data against a couple of the libraries listed above to ensure an ideal fit for your current and future projects.</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nFirst, a brief history:With data collection and use continuing to increase exponentially, the need to visualize this data is becoming more important. Developers seek to consolidate millions of database records into beautiful charts and dashboards that humans can quickly and intuitively interpret.Data visualization technology has continued to improve over the past decade and many advanced chart libraries are now available to consumers. In the early 2000s, chart generation was dominated by server side image bitmap charts. Plugins such as Flash and Silverlight offered a more interactive charting experience but with a heavy toll on download speed, battery life and system resources.With the explosion of mobile and tablet usage, plugins were no longer supported on major platforms and developers had to shift to open client side technologies that could run everywhere. At the same time, the advent of very high resolution screens and more common zooming through touch gestures brought resolution independent vector charts to the forefront.Enter the current era of data visualization dominated by JavaScript and SVG (Scalable Vector Graphics). Charts now run on all browsers, without special plugins, support interactivity and animations and look sharp even on the highest resolution devices. Reviewing over 50 visualization libraries, these 9 products stood out:D3.jsD3.js is a very extensive and powerful graphics JavaScript library. It allows you to bind arbitrary data to a Document Object Model (DOM), and then apply data-driven transformations to the document.D3 goes well beyond typical charting libraries, including many other smaller technical modules such as axes, colors, hierarchies, contours, easing, polygons, and more. All this makes for a steep learning curve.Trying to create a simple chart can be complicated. All elements including the axes, and other chart items need to be defined explicitly. Many samples show how CSS can be used to style chart elements. No charting-based features apply automatically. If you want to get into the weeds and use creativity to fully control every element, it is the best choice. Working against the clock to meet data visualization project requirements it may not be the best choice starting from scratch.D3.js can be a building block for a charting library. Developers have used D3 to make it easier to use chart solutions that consume it, such as NVD3.D3.js is open source and free to use.JSChartingJSCharting chart library supports a large number of chart types including maps, gantt, stock and others that often require separate libraries to use. It includes built-in maps of all world countries, and a library of SVG icons. A suite of standalone micro charts can render in any chart labels or in any div element on a page. UI controls (UiItems) are also included allowing for richer interactive charts. To control data or visualization variables in real-time is easy and charts can be exported to SVG, PNG, PDF, and JPG formats.The gallery is divided into chart type and feature samples. The chart styling is polished and yields some clean looking charts. The overall visuals provide a clean and professional charting experience.Included samples use a configuration object to customize charts. The settings to create and control chart types are very simple to use. Few property settings are needed to specify more complex chart types and JSCharting has strong and dynamic defaults meaning it attempts to choose the best settings for the scenarios automatically.The documentation includes many tutorials and thorough API property descriptions. Many properties include example usage and sample links.JSCharting is free for non commercial and personal use and also offers commercial license options that includes all chart types and products for a single fee.HighchartsHighcharts is a popular JavaScript charting library used by many of the world\u2019s largest companies. Charts are generated using SVG and fallback to VML for backward compatibility all the way to IE6/IE8. The demo charts demonstrate a fairly rich feature set but don\u2019t wow visually. General documentation includes tutorials for many relevant topics and the API documentation is thorough.The chart uses configuration options to create charts and the API is easy to use.Highcharts is free for non-commercial and personal use. Commercial licensing is required for other usage and stock, map and gantt charts are licensed separately.amChartsamCharts has recently released their version 4 which adds a strong SVG animation engine that allows creating movie-like scenes.The demo charts look very nice. Most demos offer a number of palettes and a slider UI to adjust chart variables in real-time. Documentation includes many tutorials and full API property descriptions.Creating a chart feels slightly different from the configuration-based approach, and instead uses a more declarative API. It requires slightly more code to configure charts but gives a better code completion experience.amCharts offers a free license with branded charts and paid licenses for other usage.Google ChartsGoogle charts are powerful and easy to use.The sample charts look clean and are easy on the eyes. The gallery and extended gallery shows many chart types, but pressing the hamburger menu reveals more types (like calendar) that are not shown in these gallery lists.Each chart type has a dedicated tutorial with live examples. The tutorials include code for the related features and API listings. This is a pleasant experience getting started with a new chart library.Charts are customized using the configuration options object. Data sets are populated using a DataTable class which can be consumed by all charts. Each chart type has unique options listed in the type specific tutorials. Property naming is standardized and many options work across all types.Google charts is free, but there is a caveat. It is a web service and cannot be hosted locally. In the past Google has retired API\u2019s so if your usage is mission critical you may want to pick another option.ZingChartZingChart offers many chart types and integrates with angular, react, and other frameworks. It has a strong feature set with many customization options.The demo charts show a range of styling themes, some of which look better than others, but the options to style them as needed are there. Demos don\u2019t demonstrate all the available chart types.Documentation includes tutorials for all the available types, a good number of features, and full API listing.ZingChart uses configuration options to customize charts. Samples include many property settings such as font styling. These can get in the way of understanding what settings are required for a given chart.ZingChart can be used for free with branding. Paid licensing is available for non-branded usage.FusionChartsFusionCharts has been around for many years starting as a Flash-based chart plugin. It is a robust chart visualization library. It supports many data formats including XML, JSON, and JavaScript, works in modern browsers and is backwards compatible back to IE6. Many JavaScript frameworks and server-side programming languages are also supported.The chart gallery includes a large number of examples and they have a clean visual appearance.Documentation includes good API descriptions, and examples of each chart type. The configuration properties are grouped by tasks and chart features.Charts are created using configuration based options and is relatively easy to use. The list of properties can be lengthy when digging deeper into the API. All configuration properties are shallow such as {chartLeftMargin, showAlternateHGridColor }. It seems like an attempt to improve code completion.FusionCharts is free for personal use with chart branding. Paid licensing is available for unbranded and commercial use.KOOLCHARTKoolChart is an HTML 5 canvas-based JavaScript charting library. A mapping and grid product is also available.Their new v5 release includes a more interactive feature set and updated styling. The visuals are clean and modern. The use of canvas offers better performance at the expense of being raster based.The samples use a string based XML to apply chart options which seems less practical than other approaches. These options look like HTML5 but are set through a JavaScript string.The API is well documented with example charts for each property. A 173 page PDF manual is also available.A two month trial period is available for evaluation. Licensing is required after the trial period expires.Chart.jsChart.js is an open source JavaScript library supporting 8 chart types. It is a small js library at just 60kb. Types include line charts, bar charts, area charts, radar, pie charts, bubble, scatter plots, and mixed. A time series is also supported. It uses canvas element for rendering and is responsive on window resize to maintain scale granularity. It is backwards compatible to IE9. Polyfills are available to work with IE7 as well.The sample visuals are fairly modern looking and include initial animations when drawing for the first time. It animates smoothly when adding series or data points in real-time. Chart options can be modified after and calling an update() function redraws the chart.Sample source code is not shown the website gallery but is available in the GitHub repo. Configuration options are used to create and modify charts. The options API is clean and intuitive.The documentation is thorough and includes tutorials with property API and code snippets.Chart.js is an open source library and free to use for personal and commercial use which is a plus. The limited number of types can be an issue for more advanced dashboard requirements.ConclusionThe ecosystem of JavaScript charting libraries has evolved considerably over the last decade. Today, there are a large number of charting products that meet very diverse requirements, serving a wide range of projects though hundreds of chart types. Most libraries provide a free trial or branded version enabling you to evaluate the chart effectiveness with your own data, loading and project complexity.It is easy for most chart libraries to deal with simple curated data sets and static visualizations. However, charts may not always handle things smoothly when real-world, dynamic data is visualized. More work may be required to adjust and arrange elements so that charts appear correct and this manual tweaking can break as new dynamic data is visualized.To select the best JS chart solution for your unique needs, I recommend testing your own data against a couple of the libraries listed above to ensure an ideal fit for your current and future projects.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 11391, "excerpt": "First, a brief history:\n\nWith data collection and use continuing to increase exponentially, the need to\nvisualize this data is becoming more important. Developers seek to consolidate\nmillions of database records into beautiful charts and dashboards that humans\ncan quickly and intuitively interpret.\n\nData visualization technology has continued to improve over the past decade and\nmany advanced chart libraries are now available to consumers. In the early\n2000s, chart generation was dominated by ser", "siteName": "freeCodeCamp.org", "publishedTime": "2019-05-15T21:37:15.000Z", "id": "97fb1f41ab4e2b1f98663fea171c5d118b65f02c", "url": "https://www.freecodecamp.org/news/these-are-the-best-javascript-chart-libraries-for-2019-29782f5e1dc2/", "domain": "freecodecamp.org", "date": "2023-12-27T18:09:47.965373", "resultUri": "http://localhost:3000/result/97fb1f41ab4e2b1f98663fea171c5d118b65f02c", "query": {"url": ["https://www.freecodecamp.org/news/these-are-the-best-javascript-chart-libraries-for-2019-29782f5e1dc2/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "These are the best JavaScript chart libraries for 2019", "description": "First, a brief history: With data collection and use continuing to increase exponentially, the need to visualize this data is becoming more important. Developers seek to consolidate millions of database records into beautiful charts and dashboards that humans can quickly and intuitively interpret. Data visualization technology has continued to improve", "url": "https://www.freecodecamp.org/news/these-are-the-best-javascript-chart-libraries-for-2019-29782f5e1dc2/", "image": "https://cdn-media-1.freecodecamp.org/images/1*Aom0Yz2zVQZdBiiByborCA.png", "image:width": "800", "image:height": "204"}, "twitter": {"card": "summary_large_image", "title": "These are the best JavaScript chart libraries for 2019", "description": "First, a brief history: With data collection and use continuing to increase exponentially, the need to visualize this data is becoming more important. Developers seek to consolidate millions of database records into beautiful charts and dashboards that humans can quickly and intuitively interpret. Data visualization technology has continued to improve", "url": "https://www.freecodecamp.org/news/these-are-the-best-javascript-chart-libraries-for-2019-29782f5e1dc2/", "image": "https://cdn-media-1.freecodecamp.org/images/1*Aom0Yz2zVQZdBiiByborCA.png", "label1": "Written by", "data1": "Arthur Puszynski", "label2": "Filed under", "data2": "JavaScript, Data Visualization, Tech, Data Science, Programming", "site": "@freecodecamp"}}}