{"title": "How to ignore files from your npm package", "byline": "Zell Liew", "dir": null, "lang": "en", "content": "<div class=\"page\" id=\"readability-page-1\"><div id=\"site-main\">\n<article><h1>How to ignore files from your npm package</h1>\n<section>\n<section data-test-label=\"post-content\">\n<p>You can decide what files people get when they download your npm package in three ways:</p><ol><li>With the <code>.gitignore</code> file</li><li>With the <code>.npmignore</code> file</li><li>With the <code>files</code> property</li></ol><p>We\u2019ll look at each method and discuss which methods you should (or shouldn\u2019t) be using.</p><h3 id=\"excluding-files-with-gitignore\">Excluding files with gitignore</h3><p>First, npm will check your repository for a <code>.gitignore</code> file. If there is a <code>.gitignore</code> file, npm will ignore files according to what\u2019s listed in the <code>.gitignore</code> file.</p><p>This is the most common way package authors prevent people from downloading extra files.</p><p>Let\u2019s go through a simple example. Say you have the following directory structure.</p><pre><code>- project-name/   |- index.js   |- package.json   |- node_modules/</code></pre><p>Let\u2019s say you don\u2019t want people to download the <code>node_modules</code> folder. You also don\u2019t want to save the <code>node_modules</code> in the Git repository.</p><p>What you\u2019ll do is create a <code>.gitignore</code> file.</p><pre><code># .gitignore node_modules</code></pre><p>In this case, both Git and npm ignore the <code>node_modules</code> folder.</p><h3 id=\"blacklisting-files-with-npmignore\">Blacklisting files with npmignore</h3><p>A second way is to blacklist files with a <code>.npmignore</code> file. The <code>.npmignore</code> file works the same way as a <code>.gitignore</code> file. If a file is listed in the <code>.npmignore</code> file, the file will be excluded from the package.</p><p><strong>Important note:</strong> If you have a <code>.npmignore</code> file, npm will use the <code>.npmignore</code> file. <strong>npm will ignore the <code>.gitignore</code> file</strong> altogether. (Many developers mistakenly believe npm will use both <code>.npmignore</code> and <code>.gitignore</code> files. Don\u2019t make the same mistake!)</p><p>You can use this method if you want to exclude files from the package but still keep them in the Git repository.</p><p>Let\u2019s walk through another example. Let\u2019s say you\u2019ve written tests for your package and you put them all in a <code>tests</code> folder. This is your directory structure:</p><pre><code>- project-name/  |- index.js |- package.json |- node_modules/ |- tests/</code></pre><p>You want to exclude <code>node_modules</code> from both your Git repository and your package.</p><p>You want to include <code>tests</code> in your Git repository, but exclude it from the package.</p><p>If you opt for the <code>npmignore</code> file method, you can write these in your <code>.gitignore</code> and <code>.npmignore</code> files:</p><pre><code># .gitignore node_modules</code></pre><pre><code># .npmignore node_modules tests</code></pre><h3 id=\"whitelisting-files-with-the-files-property\">Whitelisting files with the files property</h3><p>A third method is to <strong>whitelist</strong> files you want to be <strong>included</strong> in the <code>package.json</code> file, under the <code>files</code> property.</p><p>Note: npm will prioritize this method over other methods mentioned above. This is the easiest method to limit what files others download.</p><p>This approach is pretty simple. What you need is to create a <code>files</code> property in the <code>package.json</code> file. Then, provide a list of files you\u2019d like to include.</p><p>Here\u2019s an example:</p><pre><code>{   \"files\": [      \"index.js\"   ] }</code></pre><p>Note: Some files, like <code>package.json</code>, are <a href=\"https://docs.npmjs.com/files/package.json\" rel=\"noopener\">always included</a> in a package. You don\u2019t have to write these files in the <code>files</code> property.</p><h3 id=\"which-method-to-use\">Which method to use?</h3><p>All three methods work. Pick the one you\u2019re most comfortable with. For simple projects, the <code>.gitignore</code> file method should suffice.</p><p>If your project is more advanced, you might want to blacklist files with <code>.npmignore</code> or whitelist files with the <code>files</code> property. Pick one. There\u2019s no need for both.</p><h3 id=\"a-quick-tip\">A quick tip</h3><p>You can use <code>npm pack</code> to generate a package. This package includes files other people will get.</p><pre><code>npm pack</code></pre><p>Try it!</p><p>Thanks for reading. Did this article help you out? If it did, I hope you consider <a href=\"https://twitter.com/share?text=How%20to%20ignore%20files%20from%20your%20npm%20package%20by%20@zellwk%20?%20&amp;url=https://zellwk.com/blog/ignoring-files-from-npm-package/\" rel=\"noopener\">sharing it</a>. You might help someone else out. Thanks so much!</p><p>This article was originally posted on <a href=\"https://zellwk.com/blog/ignoring-files-from-npm-package/\" rel=\"noopener\"><em>my blog</em></a><em>.</em><br/>Sign up for my<a href=\"https://zellwk.com/\" rel=\"noopener\"> newsletter</a> if you want more articles to help you become a better front-end developer.</p>\n</section>\n<hr/>\n<hr/>\n<p>\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. <a href=\"https://www.freecodecamp.org/learn/\" id=\"learn-to-code-cta\" rel=\"noopener noreferrer\" target=\"_blank\">Get started</a>\n</p>\n</section>\n</article>\n</div></div>", "textContent": "\n            \n                \n                \n                \n                    \n                \n                \n                    \n                            \nYou can decide what files people get when they download your npm package in three ways:With the .gitignore fileWith the .npmignore fileWith the files propertyWe\u2019ll look at each method and discuss which methods you should (or shouldn\u2019t) be using.Excluding files with gitignoreFirst, npm will check your repository for a .gitignore file. If there is a .gitignore file, npm will ignore files according to what\u2019s listed in the .gitignore file.This is the most common way package authors prevent people from downloading extra files.Let\u2019s go through a simple example. Say you have the following directory structure.- project-name/   |- index.js   |- package.json   |- node_modules/Let\u2019s say you don\u2019t want people to download the node_modules folder. You also don\u2019t want to save the node_modules in the Git repository.What you\u2019ll do is create a .gitignore file.# .gitignore node_modulesIn this case, both Git and npm ignore the node_modules folder.Blacklisting files with npmignoreA second way is to blacklist files with a .npmignore file. The .npmignore file works the same way as a .gitignore file. If a file is listed in the .npmignore file, the file will be excluded from the package.Important note: If you have a .npmignore file, npm will use the .npmignore file. npm will ignore the .gitignore file altogether. (Many developers mistakenly believe npm will use both .npmignore and .gitignore files. Don\u2019t make the same mistake!)You can use this method if you want to exclude files from the package but still keep them in the Git repository.Let\u2019s walk through another example. Let\u2019s say you\u2019ve written tests for your package and you put them all in a tests folder. This is your directory structure:- project-name/  |- index.js |- package.json |- node_modules/ |- tests/You want to exclude node_modules from both your Git repository and your package.You want to include tests in your Git repository, but exclude it from the package.If you opt for the npmignore file method, you can write these in your .gitignore and .npmignore files:# .gitignore node_modules# .npmignore node_modules testsWhitelisting files with the files propertyA third method is to whitelist files you want to be included in the package.json file, under the files property.Note: npm will prioritize this method over other methods mentioned above. This is the easiest method to limit what files others download.This approach is pretty simple. What you need is to create a files property in the package.json file. Then, provide a list of files you\u2019d like to include.Here\u2019s an example:{   \"files\": [      \"index.js\"   ] }Note: Some files, like package.json, are always included in a package. You don\u2019t have to write these files in the files property.Which method to use?All three methods work. Pick the one you\u2019re most comfortable with. For simple projects, the .gitignore file method should suffice.If your project is more advanced, you might want to blacklist files with .npmignore or whitelist files with the files property. Pick one. There\u2019s no need for both.A quick tipYou can use npm pack to generate a package. This package includes files other people will get.npm packTry it!Thanks for reading. Did this article help you out? If it did, I hope you consider sharing it. You might help someone else out. Thanks so much!This article was originally posted on my blog.Sign up for my newsletter if you want more articles to help you become a better front-end developer.\n\n                        \n                    \n                    \n                        \n                        \n                    \n\n                    \n                    \n                        \n    \n\n\n\n\n\n    \n    \n\n\n                        \n\n\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\n    \n\n                    \n                \n                \n                    \n                \n            \n        ", "length": 4123, "excerpt": "You can decide what files people get when they download your npm package in\nthree ways:\n\n 1. With the .gitignore file\n 2. With the .npmignore file\n 3. With the files property\n\nWe\u2019ll look at each method and discuss which methods you should (or shouldn\u2019t) be\nusing.\n\nExcluding files with gitignore\nFirst, npm will check your repository for a .gitignore file. If there is a \n.gitignore file, npm will ignore files according to what\u2019s listed in the \n.gitignore file.\n\nThis is the most common way package", "siteName": "freeCodeCamp.org", "publishedTime": "2019-04-22T16:02:00.000Z", "id": "89b3b9da543448167f075325063aa2f70973e48f", "url": "https://www.freecodecamp.org/news/how-to-ignore-files-from-your-npm-package-4724e6d9575d/", "domain": "freecodecamp.org", "date": "2023-12-27T18:11:56.099713", "resultUri": "http://localhost:3000/result/89b3b9da543448167f075325063aa2f70973e48f", "query": {"url": ["https://www.freecodecamp.org/news/how-to-ignore-files-from-your-npm-package-4724e6d9575d/"]}, "meta": {"og": {"site_name": "freeCodeCamp.org", "type": "article", "title": "How to ignore files from your npm package", "description": "You can decide what files people get when they download your npm package in three ways:  1. With the .gitignore file  2. With the .npmignore file  3. With the files property We\u2019ll look at each method and discuss which methods you should (or shouldn\u2019t) be using. Excluding", "url": "https://www.freecodecamp.org/news/how-to-ignore-files-from-your-npm-package-4724e6d9575d/", "image": "https://cdn-media-1.freecodecamp.org/images/1*F6R34rqTupBQxrVe7GS4fw.jpeg", "image:width": "800", "image:height": "533"}, "twitter": {"card": "summary_large_image", "title": "How to ignore files from your npm package", "description": "You can decide what files people get when they download your npm package in three ways:  1. With the .gitignore file  2. With the .npmignore file  3. With the files property We\u2019ll look at each method and discuss which methods you should (or shouldn\u2019t) be using. Excluding", "url": "https://www.freecodecamp.org/news/how-to-ignore-files-from-your-npm-package-4724e6d9575d/", "image": "https://cdn-media-1.freecodecamp.org/images/1*F6R34rqTupBQxrVe7GS4fw.jpeg", "label1": "Written by", "data1": "Zell Liew", "label2": "Filed under", "data2": "NPM, Tech, Productivity, Programming, Web Development", "site": "@freecodecamp"}}}